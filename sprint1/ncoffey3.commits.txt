8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   1) # Jomashop Web Scraper
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   2) import asyncio
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   3) from playwright.async_api import async_playwright
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   4) from bs4 import BeautifulSoup
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   5) import re
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   6) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   7) async def scrape_jomashop():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   8)     async with async_playwright() as p:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400   9)         data_list = []
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  10)         browser = await p.chromium.launch(headless = False)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  11)         page = await browser.new_page()
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  12) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  13)         await page.goto('https://jomashop.com/fragrances.html')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  14)         await page.wait_for_timeout(1000)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  15) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  16)         # Jomashop dynamically loads the page content so we must scroll
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  17)         # in order for the entire page to load
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  18)         async def scroll_down():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  19)             for _ in range(12):
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  20)                 await page.evaluate('window.scrollBy(0,600);')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  21)                 await page.wait_for_timeout(1000)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  22) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  23)         await scroll_down()
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  24) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  25)         await page.wait_for_selector('li.productItem')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  26)         page_content = await page.content()
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  27)         # Parse the HTML content using BeautifulSoup
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  28)         soup = BeautifulSoup(page_content, 'html.parser')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  29) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  30)         product_items = soup.find_all('li', class_='productItem')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  31)         for product_item in product_items:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  32)             brand = product_item.find('span',class_='brand-name')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  33)             name = product_item.find('span', class_='name-out-brand')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  34)             price = product_item.find('div', class_='now-price')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  35)             link = product_item.find('a', class_='productName-link')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  36)             gender = ""
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  37)             size = ""
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  38)             concentration = ""
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  39)             formattedName = ""
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  40)             
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  41)             if brand:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  42)                 brand = brand.text.strip()
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  43)             else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  44)                 brand = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  45) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  46)             if name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  47)                 name = name.text.strip()
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  48)                 # Fragrance Gender Keywords
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  49)                 if "Men's" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  50)                     gender = "Male"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  51)                 elif "Men" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  52)                     gender = "Male"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  53)                 elif "(m)" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  54)                     gender = "Male"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  55)                 elif "Ladies" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  56)                     gender = "Female"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  57)                 elif "Women" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  58)                     gender = "Female"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  59)                 elif "(f)" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  60)                     gender = "Female"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  61)                 else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  62)                     gender = "Unisex"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  63)                 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  64)                 # Bottle Size Formatting
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  65)                 if "oz" in name:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  66)                     # Regular expression pattern
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  67)                     # Digit followed by an optional .digit then oz
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  68)                     pattern = r'(\d+(\.\d+)?)\s*(oz)'
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  69)                     match = re.search(pattern, name)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  70)                     if match:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  71)                         size = f"{match.group(1)} oz"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  72)                     else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  73)                         size = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  74)                 else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  75)                     size = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  76) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  77)                 # Fragrance Concentration Parsing
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  78)                 # Jomashop does not have any standardization
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  79)                 # So many keywords must be checked
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  80)                 if "edt" in name.lower():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  81)                     concentration = "EDT"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  82)                 elif "eau de toilette" in name.lower():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  83)                     concentration = "EDT"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  84)                 elif "edp" in name.lower():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  85)                     concentration = "EDP"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  86)                 elif "eau de parfum" in name.lower():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  87)                     concentration = "EDP"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  88)                 elif "parfum" in name.lower():
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  89)                     concentration = "Parfum"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  90)                 else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  91)                     concentration = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  92)                 name_words = name.split()
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  93)                 for i, word in enumerate(name_words):
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  94) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  95)                     # We skip the gender and brand when storing the fragrance name
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  96)                     if word == brand or word == "Men's" or word == "Ladies" or word == "Unisex" or word == "-":
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  97)                         continue
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  98)                     # All keywords that indicate the name of the fragrance name has finished
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400  99)                     elif re.match(r'.*(edp|edt|eau|parfum|perfume|/)$', word.lower()) or i == len(name_words):
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 100)                         break # Fragrance Concentration means we have finished storing the name
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 101)                     # by can be used to indicate a fragrance by a brand, 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 102)                     # or may be the actual title of a fragrance
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 103)                     elif re.match(r'.*(by|for)$', word.lower()) and i < len(name_words) - 1:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 104)                         if name_words[i+1] == brand:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 105)                             break
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 106)                         if name_words[i+1] == "Men" or name_words[i+1] == "Women":
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 107)                             break
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 108)                     else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 109)                         if formattedName:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 110)                             formattedName += " "
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 111)                         formattedName += word
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 112) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 113) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 114) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 115)             else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 116)                 name = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 117)                 size = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 118)                 gender = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 119)                 concentration = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 120)                 formattedName = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 121) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 122)             if price:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 123)                 price = price.find('span')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 124)                 price = price.text.strip()      
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 125)             else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 126)                 price = "N/A"  
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 127) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 128)             if link:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 129)                 link = link.get('href')
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 130)                 link = "https://www.jomashop.com" + link
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 131)             else:
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 132)                 link = "N/A"
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 133)  
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 134)             print("Brand:", brand)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 135)             print("Name:", name)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 136)             print("FormatName:", formattedName)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 137)             print("Concentration:", concentration)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 138)             print("Price:", price)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 139)             print("Gender:", gender)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 140)             print("Size:", size)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 141)             print("Link:",link)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 142)             print("-" * 30)
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 143) 
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 144) if __name__ == "__main__":
8ef28205 (ncoffey3 2023-10-10 04:39:08 -0400 145)     asyncio.run(scrape_jomashop())
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   1) # Maxaroma Webscraper
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   2) import asyncio
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   3) from playwright.async_api import async_playwright
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   4) from bs4 import BeautifulSoup
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   5) import re
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   6)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   7) async def scrape_maxaroma():
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   8)     async with async_playwright() as p:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400   9)         browser = await p.chromium.launch(headless = False)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  10)         page = await browser.new_page()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  11)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  12)         # Max aroma best sellers list
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  13)         await page.goto('https://www.maxaroma.com/new-arrivals/p4u/special-na/view#&special-ts')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  14)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  15)         await page.wait_for_selector('ul.listing_grid')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  16)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  17)         catalog_content = await page.content()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  18)         catalog = BeautifulSoup(catalog_content, 'html.parser')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  19)         products = catalog.find_all('div', class_='product')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  20)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  21)         # We need to open a separate page because for this website we must go to each individual fragrance page
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  22)         # So 1 page for the catalog of fragrances, and 1 page that goes to each fragrance page
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  23)         product_page = await browser.new_page()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  24)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  25)         for product in products:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  26)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  27)             link = product.find('a')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  28)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  29)             if link:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  30)                 link = link.get('href')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  31)                 await product_page.goto(link)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  32)                 product_content = await product_page.content()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  33)                 product_parser = BeautifulSoup(product_content, 'html.parser')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  34)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  35)                 # name_div contains both the brand and the name of the fragrance
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  36)                 name_div = product_parser.find('div', class_='dtl_name asa')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  37)                 brand = name_div.find('h1').get_text()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  38)                 name = next(name_div.find('div').stripped_strings)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  39)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  40)                 concentration = product_parser.find('small',class_='vtype').text.strip()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  41)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  42)                 # table_div contains size and gender
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  43)                 table_div = product_parser.find('div', class_='pb15')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  44)                 size_row = table_div.find('th', string='Size:')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  45)                 #th Size->td->div->size
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  46)                 size = size_row.find_next('td').find('div').text.strip()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  47)                 gender_row = table_div.find('th', string='Gender:')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  48)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  49)                 gender = gender_row.find_next('td').find('span').text.strip()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  50)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  51)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  52)                 price_div = product_parser.find('div',class_='dtl_salestext')
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  53)                 # The product will either be on sale or it won't be.
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  54)                 # If it is on sale, class pdetail_dealprice prodprice replaces the original price
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  55)                 # It also may contain "DEAL: " so we must .find('strong') to just get the price we want
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  56)                 if (price_div.find('span', class_='pdetail_dealprice prodprice')):
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  57)                     price = price_div.find('span', class_='pdetail_dealprice prodprice').find('strong').text.strip()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  58)                 elif (price_div.find('strong', class_='prodprice')):
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  59)                     price = price_div.find('strong', class_='prodprice').text.strip()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  60)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  61)                 if not brand:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  62)                     brand = "N/A"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  63)                 if not name:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  64)                     name = "N/A"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  65)                 if not concentration:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  66)                     concentration = "N/A"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  67)                 else: # Standardization of data for databasing
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  68)                     if concentration.lower() == "eau de toilette" or concentration.lower() == "edt":
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  69)                         concentration = "EDT"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  70)                     elif concentration.lower() == "eau de parfum" or concentration.lower() == "edp":
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  71)                         concentration = "EDP"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  72)                     elif concentration.lower() == "parfum" or concentration.lower() == "extrait de parfum":
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  73)                         concentration = "Parfum"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  74)                 if not size:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  75)                     size = "N/A"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  76)                 else:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  77)                     size = size.lower()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  78)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  79)                 if not price:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  80)                     price = "N/A"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  81)                 if not gender:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  82)                     gender = "N/A"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  83)                 else:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  84)                     if gender == "Men":
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  85)                         gender = "Male"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  86)                     elif gender == "Women":
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  87)                         gender = "Female"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  88)                     else:
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  89)                         gender = "Unisex"
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  90)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  91)                 print(f"Brand: {brand}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  92)                 print(f"Product Name: {name}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  93)                 print(f"Concentration: {concentration}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  94)                 print(f"Price: {price}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  95)                 print(f"Size: {size}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  96)                 print(f"Gender: {gender}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  97)                 print(f"Link: {link}")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  98)                 print("__________")
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400  99)
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400 100)         await browser.close()
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400 101) if __name__ == "__main__":
dc4eada8 (ncoffey3 2023-10-11 03:44:44 -0400 102)     asyncio.run(scrape_maxaroma())
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  1) import asyncio
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  2) from maxaroma import scrape_maxaroma
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  3) from jomashop import scrape_jomashop
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  4)
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  5) async def main():
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  6)     await asyncio.gather(
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  7)         scrape_jomashop(),
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  8)         scrape_maxaroma()
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400  9)     )
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400 10)
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400 11) if __name__ == "__main__":
a9ad1f4a (ncoffey3 2023-10-11 05:20:02 -0400 12)     asyncio.run(main())
