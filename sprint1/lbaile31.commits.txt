./README.md
46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  1) # Fragrance Finder
46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  2) ## Setup
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  3) ### Install Node
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  4) 1. Install the latest version of node at [NodeJs.org](https://nodejs.org)
a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  5) ### Install MySQL
a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  6) 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/)
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  7) ### Clone Repo
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  8) 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder)
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  9) ### Install Dependencies
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 10) 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project.
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 11) 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files.
3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 12) ### Start servers
585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 13) 5. Starting backend: run `npm run start` in the `backend` directory.
585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 14) 6. Starting frontend: run `npm run start` in the `frontend` directory.
585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 15) ### Using Web Scrapers
585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 16) 7. Our web scraping scripts are written in Python. They require usage of a Python virtual environment. In order to create this, move to the `backend` directory and run `python3 -m venv venv`. This will create a virtual environment called `venv`. To activate the environment, run `source venv/bin/activate`. Finally, in order to install Python dependenices, run `pip install -r requirements.txt`.

./package.json
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  1) {
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  2)   "name": "fragrance-finder",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  3)   "version": "1.0.0",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  4)   "description": "1. Install the latest version of node at [NodeJs.org](https://nodejs.org) ### Install MySQL 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/) ### Clone Repo 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder) ### Install Dependencies 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project. 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files. ### Load DB Schema 5. Run `npm run load-db-local` in the backend folder to load the database schema into MySQL `fragrance_finder_db` database. ### Start servers 6. In the backend folder, run `npm run start` 7. Now, in the frontend folder, run `npm run start`. This should open a browser window at http://localhost:3000. This is the location of the frontend. If the frontend says \"TEST API ENDPOINT SUCCESS\", this means your frontend is correctly interacting with the backend API.",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  5)   "main": "index.js",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  6)   "scripts": {
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start:frontend": "cd frontend; npm run start;",
e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  9)     "start:backend": "cd backend; npm run start;",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 10)     "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\""
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 11)   },
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 12)   "repository": {
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 13)     "type": "git",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 14)     "url": "git+https://github.com/utk-cs340-fall23/FragranceFinder.git"
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 15)   },
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 16)   "author": "",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 17)   "license": "ISC",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 18)   "bugs": {
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 19)     "url": "https://github.com/utk-cs340-fall23/FragranceFinder/issues"
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 20)   },
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 21)   "homepage": "https://github.com/utk-cs340-fall23/FragranceFinder#readme",
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 22)   "devDependencies": {
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "concurrently": "^8.2.1",
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 24)     "nodemon": "^3.0.1"
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 25)   }
45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 26) }

./frontend/package.json
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-ui",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "0.1.0",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "private": true,
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)   "dependencies": {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)     "@testing-library/jest-dom": "^5.17.0",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)     "@testing-library/react": "^13.4.0",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)     "@testing-library/user-event": "^13.5.0",
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     "http-proxy-middleware": "^2.0.6",
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     "jwt-decode": "^3.1.2",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)     "react": "^18.2.0",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     "react-dom": "^18.2.0",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14)     "react-scripts": "5.0.1",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15)     "web-vitals": "^2.1.4"
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16)   },
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17)   "scripts": {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 18)     "start": "react-scripts start",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 19)     "build": "react-scripts build",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 20)     "test": "react-scripts test",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 21)     "eject": "react-scripts eject"
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 22)   },
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 23)   "eslintConfig": {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 24)     "extends": [
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25)       "react-app",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 26)       "react-app/jest"
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27)     ]
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28)   },
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29)   "browserslist": {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 30)     "production": [
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 31)       ">0.2%",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 32)       "not dead",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 33)       "not op_mini all"
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 34)     ],
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 35)     "development": [
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 36)       "last 1 chrome version",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 37)       "last 1 firefox version",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 38)       "last 1 safari version"
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 39)     ]
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 40)   }
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 41) }

./frontend/src/reportWebVitals.js
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) const reportWebVitals = onPerfEntry => {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   if (onPerfEntry && onPerfEntry instanceof Function) {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)     import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)       getCLS(onPerfEntry);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)       getFID(onPerfEntry);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)       getFCP(onPerfEntry);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)       getLCP(onPerfEntry);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)       getTTFB(onPerfEntry);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)     });
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   }
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11) };
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) 
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) export default reportWebVitals;

./frontend/src/setupProxy.js
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  1) const { createProxyMiddleware } = require('http-proxy-middleware');
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  2) 
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  3) module.exports = function(app) {
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  4)   app.use(
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  5)     '/api',
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  6)     createProxyMiddleware({
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)       target: 'http://localhost:3001',
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  8)       changeOrigin: true,
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     })
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 10)   );
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 11) };

./frontend/src/App.css
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }

./frontend/src/index.js
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) import React from 'react';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2) import ReactDOM from 'react-dom/client';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3) import './index.css';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4) import App from './App';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5) import reportWebVitals from './reportWebVitals';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6) 
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7) const root = ReactDOM.createRoot(document.getElementById('root'));
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) root.render(
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)   <React.StrictMode>
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)     <App />
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   </React.StrictMode>
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) );
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) 
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14) // If you want to start measuring performance in your app, pass a function
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15) // to log results (for example: reportWebVitals(console.log))
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16) // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17) reportWebVitals();

./frontend/src/index.css
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) body {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   margin: 0;
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)     sans-serif;
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   -webkit-font-smoothing: antialiased;
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)   -moz-osx-font-smoothing: grayscale;
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) }
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9) 
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10) code {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     monospace;
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) }

./frontend/src/App.test.js
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) import { render, screen } from '@testing-library/react';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) import App from './App';
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) 
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) test('renders learn react link', () => {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5)   render(<App />);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 6)   const linkElement = screen.getByText(/learn react/i);
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 7)   expect(linkElement).toBeInTheDocument();
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 8) });

./frontend/src/setupTests.js
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) // jest-dom adds custom jest matchers for asserting on DOM nodes.
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) // allows you to do things like:
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) // expect(element).toHaveTextContent(/react/i)
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) // learn more: https://github.com/testing-library/jest-dom
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5) import '@testing-library/jest-dom';

./frontend/src/App.js
17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400  2) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) import Login from './pages/Login';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) import Signup from './pages/Signup';
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10) import "./App.css";
17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400 11) 
9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 13) 
9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 17) 				<Route exact path='/' element={<Home />} />
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18) 				<Route path='/login' element={<Login />} />
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19) 				<Route path='/signup' element={<Signup />} />
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27) }
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28) 
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29) export default App;

./frontend/src/utils/auth.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import decode from 'jwt-decode';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) class AuthService {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     // Return user information found in the token
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     getProfile() {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         return decode(this.getToken());
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)     }
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10)     // If token exists and is not expired, user is logged in
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 11)     loggedIn() {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12)         const token = this.getToken();
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 13)         return !!token && !this.isTokenExpired(token);
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 14)     }
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 15) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 16)     // Check if token is expired against its
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 17)     // timestamp found in 'exp'
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 18)     isTokenExpired(token) {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 19)         try {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 20)         const decoded = decode(token);
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 21)         if (decoded.exp < Date.now() / 1000) {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22)             return true;
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 23)         } else return false;
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)         } catch (err) {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         return false;
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     getToken() {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30)         return localStorage.getItem('id_token');
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 31)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33)     // "log in" the user by setting token in local storage
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34)     // and redirecting to home page
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 35)     login(idToken) {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 36)         localStorage.setItem('id_token', idToken);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 38)         window.location.assign('/');
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 39)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 41)     // "log out" the user by removing local storage token
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 42)     // and redirecting to home page
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 43)     logout() {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 44)         localStorage.removeItem('id_token');
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 45)         window.location.assign('/');
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 46)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) const instance = new AuthService();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51) export default instance;

./frontend/src/utils/requests.js
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  1) import AuthService from '../utils/auth';
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  2) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  3) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) const getDefaultHeaders = () => {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     const token = AuthService.getToken();
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     return {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         'Accept': 'application/json',
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)         "Authorization": token ? `Bearer ${token}` : '',
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9)     }
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10) }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12) 
53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 13) const setData = async res => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     const contentType = res.headers.get("content-type");
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     if (contentType && contentType.includes('application/json')) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         const data = await res.json()
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)         res.data = data;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     return res;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22) // Default method to send a GET request
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) export const sendGet = async (url) => {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)     const res = await fetch(url, {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         method: 'GET',
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         headers: {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 27)             ...getDefaultHeaders()
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 28)         },
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     });
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30) 
53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 31)     return await setData(res);
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 32) }
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33) 
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34) // Default method to send a GET request
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 35) export const sendPost = async (url, data) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     const res = await fetch(url, {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)       method: 'POST',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       body: JSON.stringify(data),
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       headers: {
47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 40)         ...getDefaultHeaders(),
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         'Content-Type': 'application/json',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)     })
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44) 
53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 45)     return await setData(res);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46) }

./frontend/src/pages/index.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import React, { useEffect, useState } from 'react';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendGet } from '../utils/requests';
9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400  4) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)     const [user, setUser] = useState(null);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)     const getMyUser = async function() {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)         const response = await sendGet('/api/users/me');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)         if (response.ok) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)             setUser(response.data);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)         }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     useEffect(function() {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         getMyUser();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }, []);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) 			<p>Login Status: {auth.loggedIn() ? 'Logged In!' : 'Not Logged in :('}</p>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 			<p>Authentication-protected endpoints working: {user ? 'Yes': 'No'}</p>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 			{!auth.loggedIn() && (
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 <div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)                     <a href="/login">Login</a>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)                     <br />
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)                     <a href="/signup">Sign Up</a>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)                 </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)             )}
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29) 			{auth.loggedIn() && (
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)                 <div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)                     <button onClick={() => auth.logout()}>Log Out</button>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)                 </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)             )}
9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 37)

./frontend/src/pages/Signup.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Signup() {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     username: '',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)   });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)   const [error, setError] = useState(null);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   // Handle changing values in form
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)   const handleFormChange = (event) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     setFormState({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       ...formState,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       [event.target.name]: event.target.value
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   // Handle submission of form
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)   const handleFormSubmit = async (event) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     event.preventDefault();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     const response = await sendPost('/api/users/', formState);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)     if (response.ok) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         const { token } = response.data;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         auth.login(token);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     else {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)         if (response.data.message) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)             setError(response.data.message);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)         }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   return (
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)     <div className="App">
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       <div style={{
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         display: 'flex',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         flexDirection: 'column',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         alignItems: 'center',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)       }}>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         <h2>Signup</h2>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)         <form onSubmit={handleFormSubmit} style={{
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)           display: 'flex',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)           flexDirection: 'column',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)           width: '500px',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         }}>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             <input name="username" value={formState.username} placeholder="Username" required onChange={handleFormChange}></input>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)             <button type="submit">Submit</button>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             {error && (
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)                 <div style={{color: 'red'}}>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)                     <p>{error}</p>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)                 </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)             )}
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)         </form>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65)   );
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66) }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 67) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68) export default Signup;

./frontend/src/pages/Login.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Login() {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)   });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)   const [error, setError] = useState('');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   // Handle changing values in form
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   const handleFormChange = (event) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)     setFormState({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       ...formState,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       [event.target.name]: event.target.value
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)   // Handle submission of form
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   const handleFormSubmit = async (event) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     event.preventDefault();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)     const response = await sendPost('/api/users/login/', formState);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     if (response.ok) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         const { token } = response.data;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         auth.login(token);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     else if (response.data && response.data.message) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)         setError(response.data.message);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   return (
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)     <div className="App">
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       <div style={{
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)         display: 'flex',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         flexDirection: 'column',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)         alignItems: 'center',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)       }}>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         <h2>Login</h2>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         <form onSubmit={handleFormSubmit} style={{
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)           display: 'flex',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)           flexDirection: 'column',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)           width: '500px',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         }}>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)             <button type="submit">Submit</button>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             {error && (
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)                 <div style={{color: 'red'}}>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)                     <p>{error}</p>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)                 </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             )}
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)         </form>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)     </div>
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)   );
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64) export default Login;

./frontend/src/pages/CSS/crudexample.css
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }

./frontend/src/pages/demos/CrudExample.js
9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400   4) function CrudExample() {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400   9)     id: null,
9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  37)   const handleFormSubmit = async (event) => {
9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  38)     event.preventDefault();
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  40)     // If there is an id, we're doing an update instead of a creation
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  41)     if (formState.id) {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  42)       const response = await fetch(`/api/posts/${formState.id}`, {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  43)         method: 'PUT',
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  44)         body: JSON.stringify(formState),
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  45)         headers: {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  46)           "Content-Type": "application/json"
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  47)         }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  48)       });
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  49) 
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  50)       if (response.ok) {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  51)         setFormState({
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  52)           id: null,
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  53)           title: '',
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  54)           description: ''
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  55)         });
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  56) 
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  57)         getPosts();
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  59)     }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  60) 
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  61)     // Creation
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  62)     else {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  63)        // Send form state to backend
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  64)       const response = await fetch('/api/posts/', {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  65)         method: 'POST',
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  66)         body: JSON.stringify(formState),
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  67)         headers: {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  68)           "Content-Type": "application/json"
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  69)         }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  70)       });
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  71) 
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  72)       // If successful, reload posts
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  73)       if (response.ok) {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  74)         getPosts();
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  75)       }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  76)     }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  77)   }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  78) 
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  79) 
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  80)   const handlePostDelete = async event => {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  81)     const postId = event.target.value;
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  82)     const response = await fetch(`/api/posts/${postId}`, {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  83)       method: 'DELETE',
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  91)   const renderUpdate = async ({id, title, description}) => {
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  92)     setFormState({
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  93)       id: id,
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  94)       title: title,
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  95)       description: description
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  96)     });
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  97)   }
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  98) 
73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 108)         <div className='rainbow' style={{
73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 109)           margin: '20px',
73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 110)           fontSize: '25px',
73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 111)           fontStyle: 'italic',
73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 112)           fontWeight: 'bold'
73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 113)         }}>Lakelon Bailey Hello Plus Example:</div>
9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 115)         <form onSubmit={handleFormSubmit} style={{
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 122)           <button type='submit' style={{marginTop: '10px'}}>{formState.id ? 'Update' : 'Submit'}</button>
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 131)               <span>
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 132)                 <button onClick={handlePostDelete} value={item.id}>Delete</button>
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 133)                 <button onClick={() => renderUpdate(item)}>Update</button>
bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 134)               </span>
9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 143) export default CrudExample;

./frontend/src/pages/demos/email.js
8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400  5) import { sendPost } from "../../utils/requests";
8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 13) 
8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 20) 
8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) 		await sendPost("/api/email/", form);
8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 25) 
8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 38)

./sprint1/lbaile31.commits.txt
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400    5) 46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  1) # Fragrance Finder
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400    6) 46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  2) ## Setup
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400    7) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  3) ### Install Node
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400    8) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  4) 1. Install the latest version of node at [NodeJs.org](https://nodejs.org)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400    9) a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  5) ### Install MySQL
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   10) a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  6) 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   11) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  7) ### Clone Repo
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   12) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  8) 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   13) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  9) ### Install Dependencies
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   14) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 10) 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   15) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 11) 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   16) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 12) ### Start servers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   17) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 13) 5. Starting backend: run `npm run start` in the `backend` directory.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   18) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 14) 6. Starting frontend: run `npm run start` in the `frontend` directory.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   19) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 15) ### Using Web Scrapers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   20) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 16) 7. Our web scraping scripts are written in Python. They require usage of a Python virtual environment. In order to create this, move to the `backend` directory and run `python3 -m venv venv`. This will create a virtual environment called `venv`. To activate the environment, run `source venv/bin/activate`. Finally, in order to install Python dependenices, run `pip install -r requirements.txt`.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   23) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   24) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  2)   "name": "fragrance-finder",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   25) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  3)   "version": "1.0.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   26) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  4)   "description": "1. Install the latest version of node at [NodeJs.org](https://nodejs.org) ### Install MySQL 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/) ### Clone Repo 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder) ### Install Dependencies 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project. 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files. ### Load DB Schema 5. Run `npm run load-db-local` in the backend folder to load the database schema into MySQL `fragrance_finder_db` database. ### Start servers 6. In the backend folder, run `npm run start` 7. Now, in the frontend folder, run `npm run start`. This should open a browser window at http://localhost:3000. This is the location of the frontend. If the frontend says \"TEST API ENDPOINT SUCCESS\", this means your frontend is correctly interacting with the backend API.",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   27) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  5)   "main": "index.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   28) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  6)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   29) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   30) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start:frontend": "cd frontend; npm run start;",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   31) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  9)     "start:backend": "cd backend; npm run start;",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   32) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 10)     "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\""
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   33) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 11)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   34) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 12)   "repository": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   35) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 13)     "type": "git",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   36) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 14)     "url": "git+https://github.com/utk-cs340-fall23/FragranceFinder.git"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   37) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 15)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   38) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 16)   "author": "",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   39) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 17)   "license": "ISC",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   40) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 18)   "bugs": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   41) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 19)     "url": "https://github.com/utk-cs340-fall23/FragranceFinder/issues"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   42) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 20)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   43) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 21)   "homepage": "https://github.com/utk-cs340-fall23/FragranceFinder#readme",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   44) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 22)   "devDependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   45) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "concurrently": "^8.2.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   46) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 24)     "nodemon": "^3.0.1"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   47) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 25)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400   48) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 26) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   51) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   52) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-ui",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   53) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "0.1.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   54) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "private": true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   55) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)   "dependencies": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   56) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)     "@testing-library/jest-dom": "^5.17.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   57) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)     "@testing-library/react": "^13.4.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   58) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)     "@testing-library/user-event": "^13.5.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   59) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     "http-proxy-middleware": "^2.0.6",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   60) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     "jwt-decode": "^3.1.2",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   61) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)     "react": "^18.2.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   62) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     "react-dom": "^18.2.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   63) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14)     "react-scripts": "5.0.1",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   64) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15)     "web-vitals": "^2.1.4"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   65) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   66) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17)   "scripts": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   67) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 18)     "start": "react-scripts start",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   68) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 19)     "build": "react-scripts build",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   69) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 20)     "test": "react-scripts test",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   70) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 21)     "eject": "react-scripts eject"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   71) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 22)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   72) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 23)   "eslintConfig": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   73) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 24)     "extends": [
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   74) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25)       "react-app",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   75) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 26)       "react-app/jest"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   76) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27)     ]
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   77) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   78) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29)   "browserslist": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   79) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 30)     "production": [
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   80) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 31)       ">0.2%",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   81) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 32)       "not dead",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   82) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 33)       "not op_mini all"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   83) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 34)     ],
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   84) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 35)     "development": [
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   85) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 36)       "last 1 chrome version",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   86) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 37)       "last 1 firefox version",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   87) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 38)       "last 1 safari version"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   88) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 39)     ]
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   89) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 40)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   90) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 41) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   93) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) const reportWebVitals = onPerfEntry => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   94) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   if (onPerfEntry && onPerfEntry instanceof Function) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   95) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)     import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   96) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)       getCLS(onPerfEntry);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   97) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)       getFID(onPerfEntry);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   98) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)       getFCP(onPerfEntry);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   99) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)       getLCP(onPerfEntry);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  100) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)       getTTFB(onPerfEntry);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  101) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  102) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  103) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11) };
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  104) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  105) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) export default reportWebVitals;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  108) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  1) const { createProxyMiddleware } = require('http-proxy-middleware');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  109) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  2) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  110) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  3) module.exports = function(app) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  111) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  4)   app.use(
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  112) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  5)     '/api',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  113) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  6)     createProxyMiddleware({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  114) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)       target: 'http://localhost:3001',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  115) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  8)       changeOrigin: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  116) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     })
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  117) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 10)   );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  118) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 11) };
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  121) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  122) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  123) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  124) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  125) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  126) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  127) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  128) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  129) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  130) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  131) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  132) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  133) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  134) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  135) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  136) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  137) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  138) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  139) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  140) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  141) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  142) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  143) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  144) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  145) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  146) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  147) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  148) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  149) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  150) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  151) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  152) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  153) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  154) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  155) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  156) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  157) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  158) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  159) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  162) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) import React from 'react';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  163) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2) import ReactDOM from 'react-dom/client';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  164) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3) import './index.css';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  165) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4) import App from './App';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  166) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5) import reportWebVitals from './reportWebVitals';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  167) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  168) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7) const root = ReactDOM.createRoot(document.getElementById('root'));
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  169) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) root.render(
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  170) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)   <React.StrictMode>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  171) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)     <App />
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  172) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   </React.StrictMode>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  173) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  174) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  175) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14) // If you want to start measuring performance in your app, pass a function
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  176) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15) // to log results (for example: reportWebVitals(console.log))
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  177) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16) // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  178) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17) reportWebVitals();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  181) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) body {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  182) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   margin: 0;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  183) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  184) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  185) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)     sans-serif;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  186) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   -webkit-font-smoothing: antialiased;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  187) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)   -moz-osx-font-smoothing: grayscale;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  188) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  189) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  190) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10) code {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  191) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  192) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     monospace;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  193) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  196) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) import { render, screen } from '@testing-library/react';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  197) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) import App from './App';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  198) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  199) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) test('renders learn react link', () => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  200) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5)   render(<App />);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  201) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 6)   const linkElement = screen.getByText(/learn react/i);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  202) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 7)   expect(linkElement).toBeInTheDocument();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  203) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 8) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  206) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) // jest-dom adds custom jest matchers for asserting on DOM nodes.
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  207) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) // allows you to do things like:
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  208) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) // expect(element).toHaveTextContent(/react/i)
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  209) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) // learn more: https://github.com/testing-library/jest-dom
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  210) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5) import '@testing-library/jest-dom';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  213) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400  2) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  214) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) import Login from './pages/Login';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  215) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) import Signup from './pages/Signup';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  216) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10) import "./App.css";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  217) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400 11) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  218) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 13) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  219) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 17) 				<Route exact path='/' element={<Home />} />
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  220) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18) 				<Route path='/login' element={<Login />} />
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  221) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19) 				<Route path='/signup' element={<Signup />} />
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  222) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  223) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  224) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29) export default App;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  227) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import decode from 'jwt-decode';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  228) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  229) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) class AuthService {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  230) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  231) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     // Return user information found in the token
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  232) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     getProfile() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  233) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         return decode(this.getToken());
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  234) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  235) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  236) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10)     // If token exists and is not expired, user is logged in
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  237) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 11)     loggedIn() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  238) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12)         const token = this.getToken();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  239) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 13)         return !!token && !this.isTokenExpired(token);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  240) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 14)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  241) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 15) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  242) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 16)     // Check if token is expired against its
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  243) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 17)     // timestamp found in 'exp'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  244) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 18)     isTokenExpired(token) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  245) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 19)         try {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  246) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 20)         const decoded = decode(token);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  247) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 21)         if (decoded.exp < Date.now() / 1000) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  248) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22)             return true;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  249) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 23)         } else return false;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  250) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)         } catch (err) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  251) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         return false;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  252) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  253) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  254) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  255) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     getToken() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  256) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30)         return localStorage.getItem('id_token');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  257) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 31)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  258) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  259) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33)     // "log in" the user by setting token in local storage
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  260) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34)     // and redirecting to home page
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  261) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 35)     login(idToken) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  262) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 36)         localStorage.setItem('id_token', idToken);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  263) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  264) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 38)         window.location.assign('/');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  265) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 39)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  266) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  267) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 41)     // "log out" the user by removing local storage token
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  268) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 42)     // and redirecting to home page
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  269) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 43)     logout() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  270) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 44)         localStorage.removeItem('id_token');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  271) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 45)         window.location.assign('/');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  272) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 46)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  273) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  274) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  275) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) const instance = new AuthService();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  276) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  277) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51) export default instance;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  280) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  1) import AuthService from '../utils/auth';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  281) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  2) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  282) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  283) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) const getDefaultHeaders = () => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  284) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     const token = AuthService.getToken();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  285) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     return {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  286) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         'Accept': 'application/json',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  287) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)         "Authorization": token ? `Bearer ${token}` : '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  288) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  289) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  290) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  291) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  292) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 13) const setData = async res => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  293) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     const contentType = res.headers.get("content-type");
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  294) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     if (contentType && contentType.includes('application/json')) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  295) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         const data = await res.json()
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  296) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)         res.data = data;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  297) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  298) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     return res;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  299) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  300) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  301) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22) // Default method to send a GET request
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  302) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) export const sendGet = async (url) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  303) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)     const res = await fetch(url, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  304) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         method: 'GET',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  305) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         headers: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  306) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 27)             ...getDefaultHeaders()
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  307) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 28)         },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  308) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  309) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  310) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 31)     return await setData(res);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  311) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 32) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  312) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  313) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34) // Default method to send a GET request
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  314) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 35) export const sendPost = async (url, data) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  315) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     const res = await fetch(url, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  316) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)       method: 'POST',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  317) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       body: JSON.stringify(data),
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  318) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       headers: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  319) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 40)         ...getDefaultHeaders(),
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  320) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         'Content-Type': 'application/json',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  321) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  322) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)     })
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  323) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  324) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 45)     return await setData(res);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  325) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  328) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import React, { useEffect, useState } from 'react';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  329) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  330) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendGet } from '../utils/requests';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  331) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  332) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)     const [user, setUser] = useState(null);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  333) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)     const getMyUser = async function() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  334) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)         const response = await sendGet('/api/users/me');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  335) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)         if (response.ok) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  336) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)             setUser(response.data);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  337) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  338) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  339) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     useEffect(function() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  340) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         getMyUser();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  341) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }, []);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  342) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  343) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) 			<p>Login Status: {auth.loggedIn() ? 'Logged In!' : 'Not Logged in :('}</p>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  344) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 			<p>Authentication-protected endpoints working: {user ? 'Yes': 'No'}</p>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  345) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 			{!auth.loggedIn() && (
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  346) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 <div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  347) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)                     <a href="/login">Login</a>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  348) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)                     <br />
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  349) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)                     <a href="/signup">Sign Up</a>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  350) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)                 </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  351) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)             )}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  352) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29) 			{auth.loggedIn() && (
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  353) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)                 <div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  354) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)                     <button onClick={() => auth.logout()}>Log Out</button>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  355) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)                 </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  356) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)             )}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  357) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 37)
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  360) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  361) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  362) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  363) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  364) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Signup() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  365) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  366) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  367) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  368) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  369) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     username: '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  370) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)   });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  371) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  372) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)   const [error, setError] = useState(null);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  373) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  374) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   // Handle changing values in form
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  375) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)   const handleFormChange = (event) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  376) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     setFormState({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  377) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       ...formState,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  378) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       [event.target.name]: event.target.value
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  379) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  380) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  381) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  382) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   // Handle submission of form
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  383) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)   const handleFormSubmit = async (event) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  384) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     event.preventDefault();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  385) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  386) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     const response = await sendPost('/api/users/', formState);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  387) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)     if (response.ok) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  388) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         const { token } = response.data;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  389) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         auth.login(token);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  390) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  391) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     else {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  392) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)         if (response.data.message) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  393) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)             setError(response.data.message);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  394) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  395) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  396) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  397) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  398) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  399) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   return (
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  400) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)     <div className="App">
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  401) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       <div style={{
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  402) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         display: 'flex',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  403) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         flexDirection: 'column',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  404) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         alignItems: 'center',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  405) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)       }}>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  406) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         <h2>Signup</h2>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  407) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)         <form onSubmit={handleFormSubmit} style={{
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  408) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)           display: 'flex',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  409) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)           flexDirection: 'column',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  410) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)           width: '500px',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  411) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         }}>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  412) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             <input name="username" value={formState.username} placeholder="Username" required onChange={handleFormChange}></input>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  413) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  414) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  415) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)             <button type="submit">Submit</button>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  416) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             {error && (
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  417) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)                 <div style={{color: 'red'}}>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  418) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)                     <p>{error}</p>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  419) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)                 </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  420) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)             )}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  421) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)         </form>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  422) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  423) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  424) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65)   );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  425) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  426) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 67) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  427) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68) export default Signup;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  430) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  431) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  432) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  433) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  434) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Login() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  435) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  436) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  437) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  438) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  439) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)   });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  440) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  441) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)   const [error, setError] = useState('');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  442) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  443) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   // Handle changing values in form
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  444) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   const handleFormChange = (event) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  445) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)     setFormState({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  446) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       ...formState,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  447) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       [event.target.name]: event.target.value
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  448) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  449) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  450) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  451) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)   // Handle submission of form
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  452) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   const handleFormSubmit = async (event) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  453) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     event.preventDefault();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  454) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  455) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)     const response = await sendPost('/api/users/login/', formState);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  456) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     if (response.ok) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  457) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         const { token } = response.data;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  458) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         auth.login(token);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  459) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  460) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     else if (response.data && response.data.message) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  461) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)         setError(response.data.message);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  462) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  463) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  464) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  465) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  466) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   return (
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  467) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)     <div className="App">
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  468) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       <div style={{
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  469) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)         display: 'flex',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  470) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         flexDirection: 'column',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  471) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)         alignItems: 'center',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  472) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)       }}>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  473) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         <h2>Login</h2>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  474) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         <form onSubmit={handleFormSubmit} style={{
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  475) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)           display: 'flex',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  476) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)           flexDirection: 'column',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  477) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)           width: '500px',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  478) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         }}>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  479) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  480) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  481) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)             <button type="submit">Submit</button>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  482) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             {error && (
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  483) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)                 <div style={{color: 'red'}}>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  484) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)                     <p>{error}</p>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  485) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)                 </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  486) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             )}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  487) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)         </form>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  488) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  489) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)     </div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  490) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)   );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  491) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  492) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  493) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64) export default Login;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  496) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  497) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  498) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  499) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  500) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  501) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  502) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  503) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  504) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  505) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  506) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  507) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  508) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  509) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  510) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  511) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  512) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  513) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  514) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  515) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  516) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  517) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  518) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  519) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  520) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  521) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  522) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  523) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  524) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  525) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  526) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  527) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  528) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  529) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  530) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  531) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  532) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  533) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  534) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  537) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400   4) function CrudExample() {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  538) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400   9)     id: null,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  539) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  37)   const handleFormSubmit = async (event) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  540) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  38)     event.preventDefault();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  541) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  40)     // If there is an id, we're doing an update instead of a creation
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  542) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  41)     if (formState.id) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  543) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  42)       const response = await fetch(`/api/posts/${formState.id}`, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  544) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  43)         method: 'PUT',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  545) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  44)         body: JSON.stringify(formState),
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  546) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  45)         headers: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  547) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  46)           "Content-Type": "application/json"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  548) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  47)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  549) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  48)       });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  550) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  49) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  551) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  50)       if (response.ok) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  552) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  51)         setFormState({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  553) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  52)           id: null,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  554) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  53)           title: '',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  555) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  54)           description: ''
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  556) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  55)         });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  557) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  56) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  558) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  57)         getPosts();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  559) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  59)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  560) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  60) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  561) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  61)     // Creation
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  562) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  62)     else {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  563) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  63)        // Send form state to backend
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  564) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  64)       const response = await fetch('/api/posts/', {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  565) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  65)         method: 'POST',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  566) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  66)         body: JSON.stringify(formState),
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  567) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  67)         headers: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  568) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  68)           "Content-Type": "application/json"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  569) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  69)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  570) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  70)       });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  571) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  71) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  572) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  72)       // If successful, reload posts
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  573) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  73)       if (response.ok) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  574) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  74)         getPosts();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  575) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  75)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  576) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  76)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  577) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  77)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  578) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  78) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  579) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  79) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  580) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  80)   const handlePostDelete = async event => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  581) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  81)     const postId = event.target.value;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  582) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  82)     const response = await fetch(`/api/posts/${postId}`, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  583) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  83)       method: 'DELETE',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  584) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  91)   const renderUpdate = async ({id, title, description}) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  585) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  92)     setFormState({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  586) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  93)       id: id,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  587) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  94)       title: title,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  588) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  95)       description: description
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  589) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  96)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  590) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  97)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  591) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  98) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  592) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 108)         <div className='rainbow' style={{
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  593) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 109)           margin: '20px',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  594) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 110)           fontSize: '25px',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  595) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 111)           fontStyle: 'italic',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  596) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 112)           fontWeight: 'bold'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  597) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 113)         }}>Lakelon Bailey Hello Plus Example:</div>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  598) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 115)         <form onSubmit={handleFormSubmit} style={{
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  599) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 122)           <button type='submit' style={{marginTop: '10px'}}>{formState.id ? 'Update' : 'Submit'}</button>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  600) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 131)               <span>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  601) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 132)                 <button onClick={handlePostDelete} value={item.id}>Delete</button>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  602) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 133)                 <button onClick={() => renderUpdate(item)}>Update</button>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  603) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 134)               </span>
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  604) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 143) export default CrudExample;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  607) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400  5) import { sendPost } from "../../utils/requests";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  608) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 13) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  609) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 20) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  610) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) 		await sendPost("/api/email/", form);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  611) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  612) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 38)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  615) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400    5) 46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  1) # Fragrance Finder
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  616) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400    6) 46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  2) ## Setup
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  617) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400    7) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  3) ### Install Node
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  618) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400    8) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  4) 1. Install the latest version of node at [NodeJs.org](https://nodejs.org)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  619) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400    9) a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  5) ### Install MySQL
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  620) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   10) a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  6) 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  621) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   11) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  7) ### Clone Repo
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  622) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   12) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  8) 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  623) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   13) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  9) ### Install Dependencies
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  624) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   14) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 10) 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  625) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   15) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 11) 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  626) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   16) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 12) ### Start servers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  627) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   17) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 13) 5. Starting backend: run `npm run start` in the `backend` directory.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  628) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   18) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 14) 6. Starting frontend: run `npm run start` in the `frontend` directory.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  629) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   19) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 15) ### Using Web Scrapers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  630) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   20) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 16) 7. Our web scraping scripts are written in Python. They require usage of a Python virtual environment. In order to create this, move to the `backend` directory and run `python3 -m venv venv`. This will create a virtual environment called `venv`. To activate the environment, run `source venv/bin/activate`. Finally, in order to install Python dependenices, run `pip install -r requirements.txt`.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  631) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   23) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  632) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   24) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  2)   "name": "fragrance-finder",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  633) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   25) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  3)   "version": "1.0.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  634) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   26) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  4)   "description": "1. Install the latest version of node at [NodeJs.org](https://nodejs.org) ### Install MySQL 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/) ### Clone Repo 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder) ### Install Dependencies 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project. 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files. ### Load DB Schema 5. Run `npm run load-db-local` in the backend folder to load the database schema into MySQL `fragrance_finder_db` database. ### Start servers 6. In the backend folder, run `npm run start` 7. Now, in the frontend folder, run `npm run start`. This should open a browser window at http://localhost:3000. This is the location of the frontend. If the frontend says \"TEST API ENDPOINT SUCCESS\", this means your frontend is correctly interacting with the backend API.",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  635) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   27) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  5)   "main": "index.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  636) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   28) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  6)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  637) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   29) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  638) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   30) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start:frontend": "cd frontend; npm run start;",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  639) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   31) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  9)     "start:backend": "cd backend; npm run start;",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  640) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   32) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 10)     "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\""
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  641) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   33) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 11)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  642) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   34) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 12)   "repository": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  643) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   35) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 13)     "type": "git",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  644) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   36) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 14)     "url": "git+https://github.com/utk-cs340-fall23/FragranceFinder.git"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  645) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   37) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 15)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  646) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   38) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 16)   "author": "",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  647) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   39) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 17)   "license": "ISC",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  648) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   40) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 18)   "bugs": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  649) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   41) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 19)     "url": "https://github.com/utk-cs340-fall23/FragranceFinder/issues"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  650) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   42) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 20)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  651) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   43) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 21)   "homepage": "https://github.com/utk-cs340-fall23/FragranceFinder#readme",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  652) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   44) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 22)   "devDependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  653) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   45) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "concurrently": "^8.2.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  654) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   46) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 24)     "nodemon": "^3.0.1"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  655) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   47) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 25)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  656) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400   48) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 26) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  657) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   51) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  658) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   52) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-ui",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  659) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   53) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "0.1.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  660) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   54) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "private": true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  661) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   55) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)   "dependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  662) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   56) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)     "@testing-library/jest-dom": "^5.17.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  663) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   57) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)     "@testing-library/react": "^13.4.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  664) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   58) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)     "@testing-library/user-event": "^13.5.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  665) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   59) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     "http-proxy-middleware": "^2.0.6",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  666) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   60) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     "jwt-decode": "^3.1.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  667) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   61) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)     "react": "^18.2.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  668) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   62) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     "react-dom": "^18.2.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  669) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   63) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14)     "react-scripts": "5.0.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  670) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   64) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15)     "web-vitals": "^2.1.4"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  671) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   65) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  672) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   66) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  673) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   67) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 18)     "start": "react-scripts start",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  674) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   68) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 19)     "build": "react-scripts build",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  675) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   69) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 20)     "test": "react-scripts test",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  676) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   70) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 21)     "eject": "react-scripts eject"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  677) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   71) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 22)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  678) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   72) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 23)   "eslintConfig": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  679) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   73) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 24)     "extends": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  680) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   74) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25)       "react-app",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  681) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   75) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 26)       "react-app/jest"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  682) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   76) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27)     ]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  683) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   77) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  684) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   78) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29)   "browserslist": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  685) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   79) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 30)     "production": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  686) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   80) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 31)       ">0.2%",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  687) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   81) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 32)       "not dead",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  688) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   82) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 33)       "not op_mini all"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  689) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   83) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 34)     ],
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  690) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   84) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 35)     "development": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  691) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   85) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 36)       "last 1 chrome version",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  692) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   86) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 37)       "last 1 firefox version",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  693) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   87) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 38)       "last 1 safari version"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  694) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   88) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 39)     ]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  695) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   89) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 40)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  696) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   90) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 41) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  697) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   93) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) const reportWebVitals = onPerfEntry => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  698) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   94) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   if (onPerfEntry && onPerfEntry instanceof Function) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  699) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   95) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)     import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  700) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   96) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)       getCLS(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  701) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   97) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)       getFID(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  702) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   98) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)       getFCP(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  703) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   99) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)       getLCP(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  704) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  100) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)       getTTFB(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  705) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  101) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  706) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  102) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  707) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  103) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  708) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  104) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  709) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  105) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) export default reportWebVitals;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  710) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  108) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  1) const { createProxyMiddleware } = require('http-proxy-middleware');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  711) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  109) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  712) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  110) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  3) module.exports = function(app) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  713) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  111) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  4)   app.use(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  714) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  112) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  5)     '/api',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  715) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  113) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  6)     createProxyMiddleware({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  716) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  114) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)       target: 'http://localhost:3001',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  717) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  115) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  8)       changeOrigin: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  718) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  116) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  719) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  117) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 10)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  720) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  118) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 11) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  721) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  121) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  722) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  122) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  723) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  123) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  724) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  124) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  725) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  125) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  726) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  126) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  727) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  127) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  728) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  128) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  729) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  129) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  730) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  130) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  731) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  131) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  732) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  132) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  733) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  133) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  734) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  134) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  735) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  135) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  736) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  136) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  737) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  137) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  738) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  138) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  739) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  139) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  740) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  140) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  741) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  141) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  742) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  142) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  743) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  143) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  744) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  144) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  745) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  145) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  746) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  146) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  747) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  147) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  748) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  148) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  749) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  149) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  750) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  150) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  751) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  151) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  752) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  152) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  753) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  153) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  754) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  154) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  755) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  155) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  756) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  156) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  757) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  157) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  758) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  158) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  759) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  159) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  760) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  162) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) import React from 'react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  761) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  163) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2) import ReactDOM from 'react-dom/client';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  762) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  164) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3) import './index.css';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  763) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  165) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4) import App from './App';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  764) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  166) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5) import reportWebVitals from './reportWebVitals';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  765) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  167) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  766) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  168) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7) const root = ReactDOM.createRoot(document.getElementById('root'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  767) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  169) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) root.render(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  768) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  170) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)   <React.StrictMode>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  769) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  171) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)     <App />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  770) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  172) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   </React.StrictMode>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  771) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  173) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  772) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  174) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  773) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  175) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14) // If you want to start measuring performance in your app, pass a function
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  774) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  176) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15) // to log results (for example: reportWebVitals(console.log))
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  775) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  177) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16) // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  776) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  178) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17) reportWebVitals();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  777) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  181) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) body {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  778) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  182) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   margin: 0;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  779) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  183) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  780) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  184) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  781) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  185) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)     sans-serif;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  782) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  186) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   -webkit-font-smoothing: antialiased;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  783) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  187) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)   -moz-osx-font-smoothing: grayscale;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  784) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  188) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  785) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  189) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  786) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  190) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10) code {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  787) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  191) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  788) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  192) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     monospace;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  789) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  193) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  790) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  196) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) import { render, screen } from '@testing-library/react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  791) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  197) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) import App from './App';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  792) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  198) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  793) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  199) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) test('renders learn react link', () => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  794) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  200) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5)   render(<App />);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  795) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  201) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 6)   const linkElement = screen.getByText(/learn react/i);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  796) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  202) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 7)   expect(linkElement).toBeInTheDocument();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  797) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  203) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 8) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  798) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  206) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) // jest-dom adds custom jest matchers for asserting on DOM nodes.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  799) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  207) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) // allows you to do things like:
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  800) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  208) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) // expect(element).toHaveTextContent(/react/i)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  801) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  209) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) // learn more: https://github.com/testing-library/jest-dom
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  802) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  210) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5) import '@testing-library/jest-dom';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  803) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  213) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  804) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  214) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) import Login from './pages/Login';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  805) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  215) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) import Signup from './pages/Signup';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  806) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  216) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10) import "./App.css";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  807) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  217) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  808) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  218) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  809) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  219) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 17) 				<Route exact path='/' element={<Home />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  810) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  220) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18) 				<Route path='/login' element={<Login />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  811) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  221) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19) 				<Route path='/signup' element={<Signup />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  812) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  222) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  813) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  223) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  814) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  224) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29) export default App;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  815) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  227) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import decode from 'jwt-decode';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  816) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  228) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  817) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  229) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) class AuthService {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  818) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  230) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  819) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  231) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     // Return user information found in the token
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  820) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  232) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     getProfile() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  821) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  233) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         return decode(this.getToken());
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  822) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  234) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  823) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  235) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  824) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  236) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10)     // If token exists and is not expired, user is logged in
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  825) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  237) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 11)     loggedIn() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  826) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  238) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12)         const token = this.getToken();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  827) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  239) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 13)         return !!token && !this.isTokenExpired(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  828) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  240) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 14)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  829) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  241) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  830) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  242) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 16)     // Check if token is expired against its
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  831) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  243) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 17)     // timestamp found in 'exp'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  832) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  244) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 18)     isTokenExpired(token) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  833) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  245) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 19)         try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  834) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  246) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 20)         const decoded = decode(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  835) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  247) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 21)         if (decoded.exp < Date.now() / 1000) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  836) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  248) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22)             return true;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  837) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  249) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 23)         } else return false;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  838) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  250) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)         } catch (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  839) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  251) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         return false;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  840) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  252) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  841) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  253) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  842) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  254) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  843) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  255) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     getToken() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  844) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  256) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30)         return localStorage.getItem('id_token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  845) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  257) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  846) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  258) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  847) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  259) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33)     // "log in" the user by setting token in local storage
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  848) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  260) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34)     // and redirecting to home page
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  849) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  261) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 35)     login(idToken) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  850) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  262) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 36)         localStorage.setItem('id_token', idToken);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  851) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  263) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  852) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  264) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 38)         window.location.assign('/');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  853) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  265) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 39)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  854) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  266) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  855) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  267) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 41)     // "log out" the user by removing local storage token
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  856) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  268) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 42)     // and redirecting to home page
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  857) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  269) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 43)     logout() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  858) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  270) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 44)         localStorage.removeItem('id_token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  859) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  271) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 45)         window.location.assign('/');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  860) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  272) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 46)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  861) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  273) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  862) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  274) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  863) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  275) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) const instance = new AuthService();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  864) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  276) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  865) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  277) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51) export default instance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  866) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  280) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  1) import AuthService from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  867) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  281) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  868) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  282) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  869) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  283) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) const getDefaultHeaders = () => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  870) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  284) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     const token = AuthService.getToken();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  871) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  285) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     return {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  872) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  286) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         'Accept': 'application/json',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  873) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  287) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)         "Authorization": token ? `Bearer ${token}` : '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  874) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  288) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  875) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  289) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  876) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  290) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  877) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  291) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  878) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  292) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 13) const setData = async res => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  879) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  293) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     const contentType = res.headers.get("content-type");
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  880) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  294) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     if (contentType && contentType.includes('application/json')) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  881) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  295) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         const data = await res.json()
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  882) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  296) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)         res.data = data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  883) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  297) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  884) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  298) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     return res;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  885) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  299) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  886) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  300) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  887) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  301) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22) // Default method to send a GET request
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  888) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  302) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) export const sendGet = async (url) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  889) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  303) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)     const res = await fetch(url, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  890) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  304) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         method: 'GET',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  891) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  305) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  892) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  306) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 27)             ...getDefaultHeaders()
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  893) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  307) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 28)         },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  894) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  308) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  895) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  309) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  896) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  310) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 31)     return await setData(res);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  897) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  311) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 32) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  898) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  312) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  899) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  313) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34) // Default method to send a GET request
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  900) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  314) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 35) export const sendPost = async (url, data) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  901) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  315) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     const res = await fetch(url, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  902) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  316) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)       method: 'POST',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  903) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  317) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       body: JSON.stringify(data),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  904) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  318) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  905) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  319) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 40)         ...getDefaultHeaders(),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  906) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  320) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         'Content-Type': 'application/json',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  907) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  321) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  908) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  322) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)     })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  909) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  323) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  910) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  324) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 45)     return await setData(res);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  911) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  325) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  912) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  328) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import React, { useEffect, useState } from 'react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  913) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  329) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  914) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  330) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendGet } from '../utils/requests';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  915) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  331) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  916) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  332) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)     const [user, setUser] = useState(null);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  917) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  333) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)     const getMyUser = async function() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  918) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  334) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)         const response = await sendGet('/api/users/me');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  919) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  335) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)         if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  920) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  336) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)             setUser(response.data);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  921) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  337) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  922) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  338) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  923) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  339) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     useEffect(function() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  924) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  340) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         getMyUser();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  925) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  341) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }, []);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  926) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  342) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  927) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  343) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) 			<p>Login Status: {auth.loggedIn() ? 'Logged In!' : 'Not Logged in :('}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  928) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  344) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 			<p>Authentication-protected endpoints working: {user ? 'Yes': 'No'}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  929) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  345) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 			{!auth.loggedIn() && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  930) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  346) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 <div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  931) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  347) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)                     <a href="/login">Login</a>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  932) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  348) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)                     <br />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  933) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  349) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)                     <a href="/signup">Sign Up</a>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  934) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  350) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  935) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  351) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  936) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  352) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29) 			{auth.loggedIn() && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  937) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  353) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)                 <div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  938) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  354) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)                     <button onClick={() => auth.logout()}>Log Out</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  939) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  355) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  940) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  356) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  941) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  357) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 37)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  942) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  360) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  943) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  361) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  944) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  362) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  945) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  363) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  946) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  364) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Signup() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  947) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  365) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  948) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  366) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  949) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  367) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  950) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  368) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  951) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  369) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     username: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  952) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  370) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  953) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  371) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  954) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  372) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)   const [error, setError] = useState(null);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  955) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  373) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  956) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  374) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   // Handle changing values in form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  957) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  375) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)   const handleFormChange = (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  958) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  376) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  959) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  377) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       ...formState,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  960) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  378) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       [event.target.name]: event.target.value
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  961) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  379) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  962) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  380) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  963) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  381) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  964) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  382) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   // Handle submission of form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  965) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  383) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  966) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  384) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  967) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  385) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  968) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  386) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     const response = await sendPost('/api/users/', formState);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  969) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  387) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)     if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  970) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  388) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         const { token } = response.data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  971) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  389) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         auth.login(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  972) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  390) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  973) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  391) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  974) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  392) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)         if (response.data.message) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  975) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  393) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)             setError(response.data.message);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  976) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  394) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  977) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  395) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  978) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  396) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  979) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  397) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  980) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  398) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  981) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  399) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   return (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  982) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  400) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)     <div className="App">
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  983) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  401) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       <div style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  984) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  402) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  985) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  403) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  986) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  404) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         alignItems: 'center',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  987) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  405) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)       }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  988) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  406) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         <h2>Signup</h2>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  989) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  407) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  990) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  408) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)           display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  991) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  409) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)           flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  992) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  410) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)           width: '500px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  993) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  411) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  994) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  412) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             <input name="username" value={formState.username} placeholder="Username" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  995) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  413) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  996) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  414) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  997) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  415) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)             <button type="submit">Submit</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  998) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  416) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             {error && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400  999) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  417) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)                 <div style={{color: 'red'}}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1000) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  418) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)                     <p>{error}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1001) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  419) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1002) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  420) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1003) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  421) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)         </form>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1004) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  422) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1005) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  423) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1006) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  424) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1007) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  425) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1008) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  426) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 67) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1009) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  427) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68) export default Signup;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1010) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  430) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1011) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  431) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1012) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  432) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1013) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  433) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1014) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  434) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Login() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1015) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  435) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1016) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  436) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1017) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  437) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1018) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  438) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1019) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  439) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1020) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  440) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1021) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  441) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)   const [error, setError] = useState('');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1022) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  442) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1023) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  443) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   // Handle changing values in form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1024) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  444) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   const handleFormChange = (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1025) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  445) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1026) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  446) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       ...formState,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1027) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  447) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       [event.target.name]: event.target.value
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1028) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  448) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1029) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  449) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1030) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  450) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1031) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  451) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)   // Handle submission of form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1032) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  452) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1033) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  453) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1034) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  454) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1035) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  455) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)     const response = await sendPost('/api/users/login/', formState);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1036) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  456) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1037) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  457) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         const { token } = response.data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1038) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  458) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         auth.login(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1039) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  459) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1040) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  460) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     else if (response.data && response.data.message) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1041) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  461) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)         setError(response.data.message);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1042) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  462) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1043) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  463) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1044) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  464) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1045) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  465) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1046) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  466) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   return (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1047) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  467) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)     <div className="App">
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1048) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  468) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       <div style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1049) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  469) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)         display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1050) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  470) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1051) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  471) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)         alignItems: 'center',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1052) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  472) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)       }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1053) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  473) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         <h2>Login</h2>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1054) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  474) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1055) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  475) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)           display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1056) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  476) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)           flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1057) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  477) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)           width: '500px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1058) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  478) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1059) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  479) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1060) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  480) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1061) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  481) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)             <button type="submit">Submit</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1062) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  482) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             {error && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1063) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  483) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)                 <div style={{color: 'red'}}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1064) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  484) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)                     <p>{error}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1065) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  485) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1066) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  486) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1067) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  487) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)         </form>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1068) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  488) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1069) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  489) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)     </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1070) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  490) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1071) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  491) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1072) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  492) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1073) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  493) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64) export default Login;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1074) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  496) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1075) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  497) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1076) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  498) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1077) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  499) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1078) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  500) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1079) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  501) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1080) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  502) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1081) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  503) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1082) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  504) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1083) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  505) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1084) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  506) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1085) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  507) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1086) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  508) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1087) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  509) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1088) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  510) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1089) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  511) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1090) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  512) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1091) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  513) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1092) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  514) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1093) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  515) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1094) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  516) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1095) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  517) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1096) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  518) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1097) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  519) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1098) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  520) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1099) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  521) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1100) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  522) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1101) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  523) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1102) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  524) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1103) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  525) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1104) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  526) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1105) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  527) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1106) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  528) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1107) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  529) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1108) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  530) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1109) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  531) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1110) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  532) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1111) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  533) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1112) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  534) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1113) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  537) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400   4) function CrudExample() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1114) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  538) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400   9)     id: null,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1115) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  539) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  37)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1116) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  540) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  38)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1117) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  541) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  40)     // If there is an id, we're doing an update instead of a creation
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1118) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  542) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  41)     if (formState.id) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1119) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  543) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  42)       const response = await fetch(`/api/posts/${formState.id}`, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1120) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  544) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  43)         method: 'PUT',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1121) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  545) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  44)         body: JSON.stringify(formState),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1122) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  546) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  45)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1123) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  547) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  46)           "Content-Type": "application/json"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1124) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  548) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  47)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1125) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  549) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  48)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1126) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  550) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  49) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1127) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  551) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  50)       if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1128) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  552) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  51)         setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1129) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  553) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  52)           id: null,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1130) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  554) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  53)           title: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1131) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  555) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  54)           description: ''
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1132) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  556) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  55)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1133) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  557) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  56) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1134) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  558) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  57)         getPosts();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1135) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  559) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  59)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1136) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  560) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  60) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1137) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  561) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  61)     // Creation
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1138) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  562) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  62)     else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1139) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  563) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  63)        // Send form state to backend
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1140) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  564) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  64)       const response = await fetch('/api/posts/', {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1141) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  565) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  65)         method: 'POST',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1142) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  566) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  66)         body: JSON.stringify(formState),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1143) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  567) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  67)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1144) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  568) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  68)           "Content-Type": "application/json"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1145) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  569) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  69)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1146) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  570) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  70)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1147) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  571) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  71) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1148) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  572) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  72)       // If successful, reload posts
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1149) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  573) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  73)       if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1150) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  574) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  74)         getPosts();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1151) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  575) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  75)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1152) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  576) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  76)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1153) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  577) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  77)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1154) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  578) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  78) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1155) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  579) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  79) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1156) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  580) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  80)   const handlePostDelete = async event => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1157) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  581) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  81)     const postId = event.target.value;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1158) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  582) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  82)     const response = await fetch(`/api/posts/${postId}`, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1159) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  583) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  83)       method: 'DELETE',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1160) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  584) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  91)   const renderUpdate = async ({id, title, description}) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1161) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  585) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  92)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1162) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  586) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  93)       id: id,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1163) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  587) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  94)       title: title,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1164) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  588) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  95)       description: description
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1165) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  589) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  96)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1166) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  590) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  97)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1167) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  591) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  98) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1168) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  592) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 108)         <div className='rainbow' style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1169) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  593) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 109)           margin: '20px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1170) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  594) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 110)           fontSize: '25px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1171) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  595) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 111)           fontStyle: 'italic',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1172) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  596) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 112)           fontWeight: 'bold'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1173) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  597) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 113)         }}>Lakelon Bailey Hello Plus Example:</div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1174) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  598) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 115)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1175) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  599) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 122)           <button type='submit' style={{marginTop: '10px'}}>{formState.id ? 'Update' : 'Submit'}</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1176) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  600) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 131)               <span>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1177) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  601) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 132)                 <button onClick={handlePostDelete} value={item.id}>Delete</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1178) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  602) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 133)                 <button onClick={() => renderUpdate(item)}>Update</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1179) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  603) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 134)               </span>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1180) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  604) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 143) export default CrudExample;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1181) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  607) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400  5) import { sendPost } from "../../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1182) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  608) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1183) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  609) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 20) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1184) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  610) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) 		await sendPost("/api/email/", form);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1185) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  611) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1186) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  612) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 38)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1187) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  615) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400    5) 46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  1) # Fragrance Finder
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1188) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  616) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400    6) 46b46502 (OutliersAdvantage 2023-09-18 09:23:16 -0400  2) ## Setup
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1189) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  617) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400    7) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  3) ### Install Node
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1190) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  618) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400    8) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  4) 1. Install the latest version of node at [NodeJs.org](https://nodejs.org)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1191) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  619) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400    9) a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  5) ### Install MySQL
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1192) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  620) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   10) a05cdc7b (OutliersAdvantage 2023-09-20 11:57:29 -0400  6) 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1193) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  621) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   11) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  7) ### Clone Repo
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1194) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  622) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   12) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  8) 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1195) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  623) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   13) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400  9) ### Install Dependencies
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1196) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  624) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   14) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 10) 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1197) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  625) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   15) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 11) 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1198) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  626) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   16) 3317532e (OutliersAdvantage 2023-09-18 09:53:28 -0400 12) ### Start servers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1199) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  627) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   17) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 13) 5. Starting backend: run `npm run start` in the `backend` directory.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1200) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  628) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   18) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 14) 6. Starting frontend: run `npm run start` in the `frontend` directory.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1201) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  629) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   19) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 15) ### Using Web Scrapers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1202) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  630) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   20) 585215ba (OutliersAdvantage 2023-10-10 21:58:13 -0400 16) 7. Our web scraping scripts are written in Python. They require usage of a Python virtual environment. In order to create this, move to the `backend` directory and run `python3 -m venv venv`. This will create a virtual environment called `venv`. To activate the environment, run `source venv/bin/activate`. Finally, in order to install Python dependenices, run `pip install -r requirements.txt`.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1203) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  631) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   23) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1204) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  632) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   24) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  2)   "name": "fragrance-finder",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1205) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  633) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   25) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  3)   "version": "1.0.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1206) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  634) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   26) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  4)   "description": "1. Install the latest version of node at [NodeJs.org](https://nodejs.org) ### Install MySQL 1. Install the latest version of MySQL at [MySQL.com](https://www.mysql.com/downloads/) ### Clone Repo 2. Clone repository found at [github.com/utk-cs340-fall23/FragranceFinder](https://github.com/utk-cs340-fall23/FragranceFinder) ### Install Dependencies 3. Open 2 separate terminals. One for the backend folder of the project, and one for the frontend folder of the project. 4. In each folder, run `npm i` to install respective dependencies. The backend and frontend both have their own dependenices. Information on these dependencies is found in their associated `package.json` files. ### Load DB Schema 5. Run `npm run load-db-local` in the backend folder to load the database schema into MySQL `fragrance_finder_db` database. ### Start servers 6. In the backend folder, run `npm run start` 7. Now, in the frontend folder, run `npm run start`. This should open a browser window at http://localhost:3000. This is the location of the frontend. If the frontend says \"TEST API ENDPOINT SUCCESS\", this means your frontend is correctly interacting with the backend API.",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1207) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  635) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   27) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  5)   "main": "index.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1208) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  636) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   28) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  6)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1209) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  637) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   29) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1210) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  638) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   30) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start:frontend": "cd frontend; npm run start;",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1211) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  639) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   31) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  9)     "start:backend": "cd backend; npm run start;",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1212) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  640) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   32) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 10)     "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\""
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1213) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  641) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   33) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 11)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1214) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  642) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   34) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 12)   "repository": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1215) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  643) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   35) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 13)     "type": "git",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1216) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  644) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   36) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 14)     "url": "git+https://github.com/utk-cs340-fall23/FragranceFinder.git"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1217) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  645) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   37) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 15)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1218) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  646) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   38) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 16)   "author": "",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1219) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  647) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   39) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 17)   "license": "ISC",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1220) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  648) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   40) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 18)   "bugs": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1221) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  649) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   41) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 19)     "url": "https://github.com/utk-cs340-fall23/FragranceFinder/issues"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1222) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  650) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   42) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 20)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1223) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  651) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   43) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 21)   "homepage": "https://github.com/utk-cs340-fall23/FragranceFinder#readme",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1224) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  652) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   44) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 22)   "devDependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1225) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  653) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   45) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "concurrently": "^8.2.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1226) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  654) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   46) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 24)     "nodemon": "^3.0.1"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1227) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  655) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   47) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 25)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1228) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  656) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400   48) 45ec4d65 (OutliersAdvantage 2023-09-22 14:25:39 -0400 26) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1229) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  657) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   51) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1230) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  658) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   52) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-ui",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1231) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  659) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   53) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "0.1.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1232) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  660) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   54) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "private": true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1233) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  661) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   55) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)   "dependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1234) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  662) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   56) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)     "@testing-library/jest-dom": "^5.17.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1235) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  663) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   57) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)     "@testing-library/react": "^13.4.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1236) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  664) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   58) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)     "@testing-library/user-event": "^13.5.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1237) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  665) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   59) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     "http-proxy-middleware": "^2.0.6",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1238) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  666) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   60) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     "jwt-decode": "^3.1.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1239) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  667) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   61) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)     "react": "^18.2.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1240) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  668) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   62) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     "react-dom": "^18.2.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1241) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  669) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   63) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14)     "react-scripts": "5.0.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1242) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  670) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   64) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15)     "web-vitals": "^2.1.4"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1243) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  671) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   65) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1244) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  672) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   66) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1245) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  673) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   67) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 18)     "start": "react-scripts start",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1246) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  674) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   68) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 19)     "build": "react-scripts build",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1247) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  675) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   69) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 20)     "test": "react-scripts test",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1248) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  676) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   70) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 21)     "eject": "react-scripts eject"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1249) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  677) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   71) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 22)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1250) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  678) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   72) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 23)   "eslintConfig": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1251) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  679) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   73) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 24)     "extends": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1252) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  680) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   74) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25)       "react-app",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1253) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  681) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   75) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 26)       "react-app/jest"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1254) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  682) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   76) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27)     ]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1255) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  683) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   77) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1256) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  684) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   78) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29)   "browserslist": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1257) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  685) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   79) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 30)     "production": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1258) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  686) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   80) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 31)       ">0.2%",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1259) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  687) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   81) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 32)       "not dead",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1260) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  688) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   82) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 33)       "not op_mini all"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1261) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  689) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   83) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 34)     ],
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1262) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  690) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   84) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 35)     "development": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1263) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  691) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   85) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 36)       "last 1 chrome version",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1264) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  692) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   86) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 37)       "last 1 firefox version",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1265) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  693) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   87) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 38)       "last 1 safari version"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1266) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  694) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   88) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 39)     ]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1267) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  695) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   89) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 40)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1268) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  696) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   90) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 41) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1269) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  697) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   93) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) const reportWebVitals = onPerfEntry => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1270) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  698) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   94) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   if (onPerfEntry && onPerfEntry instanceof Function) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1271) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  699) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   95) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)     import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1272) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  700) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   96) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)       getCLS(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1273) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  701) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   97) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)       getFID(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1274) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  702) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   98) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)       getFCP(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1275) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  703) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400   99) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)       getLCP(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1276) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  704) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  100) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)       getTTFB(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1277) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  705) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  101) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1278) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  706) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  102) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1279) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  707) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  103) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1280) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  708) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  104) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1281) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  709) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  105) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) export default reportWebVitals;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1282) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  710) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  108) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  1) const { createProxyMiddleware } = require('http-proxy-middleware');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1283) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  711) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  109) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1284) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  712) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  110) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  3) module.exports = function(app) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1285) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  713) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  111) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  4)   app.use(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1286) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  714) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  112) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  5)     '/api',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1287) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  715) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  113) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  6)     createProxyMiddleware({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1288) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  716) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  114) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)       target: 'http://localhost:3001',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1289) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  717) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  115) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  8)       changeOrigin: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1290) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  718) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  116) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1291) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  719) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  117) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 10)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1292) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  720) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  118) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 11) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1293) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  721) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  121) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1294) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  722) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  122) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1295) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  723) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  123) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1296) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  724) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  124) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1297) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  725) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  125) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1298) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  726) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  126) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1299) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  727) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  127) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1300) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  728) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  128) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1301) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  729) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  129) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1302) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  730) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  130) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1303) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  731) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  131) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1304) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  732) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  132) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1305) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  733) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  133) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1306) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  734) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  134) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1307) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  735) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  135) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1308) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  736) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  136) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1309) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  737) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  137) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1310) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  738) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  138) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1311) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  739) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  139) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1312) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  740) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  140) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1313) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  741) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  141) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1314) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  742) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  142) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1315) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  743) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  143) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1316) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  744) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  144) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1317) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  745) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  145) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1318) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  746) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  146) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1319) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  747) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  147) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1320) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  748) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  148) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1321) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  749) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  149) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1322) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  750) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  150) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1323) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  751) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  151) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1324) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  752) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  152) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1325) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  753) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  153) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1326) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  754) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  154) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1327) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  755) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  155) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1328) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  756) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  156) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1329) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  757) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  157) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1330) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  758) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  158) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1331) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  759) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  159) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1332) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  760) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  162) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) import React from 'react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1333) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  761) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  163) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2) import ReactDOM from 'react-dom/client';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1334) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  762) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  164) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3) import './index.css';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1335) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  763) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  165) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4) import App from './App';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1336) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  764) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  166) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5) import reportWebVitals from './reportWebVitals';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1337) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  765) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  167) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1338) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  766) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  168) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7) const root = ReactDOM.createRoot(document.getElementById('root'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1339) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  767) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  169) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) root.render(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1340) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  768) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  170) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)   <React.StrictMode>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1341) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  769) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  171) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)     <App />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1342) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  770) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  172) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   </React.StrictMode>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1343) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  771) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  173) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1344) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  772) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  174) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1345) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  773) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  175) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14) // If you want to start measuring performance in your app, pass a function
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1346) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  774) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  176) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15) // to log results (for example: reportWebVitals(console.log))
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1347) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  775) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  177) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16) // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1348) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  776) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  178) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17) reportWebVitals();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1349) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  777) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  181) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) body {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1350) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  778) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  182) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   margin: 0;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1351) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  779) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  183) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1352) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  780) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  184) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1353) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  781) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  185) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)     sans-serif;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1354) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  782) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  186) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   -webkit-font-smoothing: antialiased;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1355) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  783) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  187) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)   -moz-osx-font-smoothing: grayscale;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1356) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  784) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  188) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1357) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  785) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  189) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1358) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  786) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  190) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10) code {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1359) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  787) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  191) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1360) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  788) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  192) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     monospace;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1361) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  789) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  193) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1362) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  790) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  196) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) import { render, screen } from '@testing-library/react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1363) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  791) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  197) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) import App from './App';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1364) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  792) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  198) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1365) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  793) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  199) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) test('renders learn react link', () => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1366) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  794) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  200) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5)   render(<App />);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1367) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  795) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  201) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 6)   const linkElement = screen.getByText(/learn react/i);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1368) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  796) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  202) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 7)   expect(linkElement).toBeInTheDocument();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1369) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  797) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  203) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 8) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1370) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  798) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  206) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) // jest-dom adds custom jest matchers for asserting on DOM nodes.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1371) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  799) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  207) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) // allows you to do things like:
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1372) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  800) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  208) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) // expect(element).toHaveTextContent(/react/i)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1373) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  801) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  209) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) // learn more: https://github.com/testing-library/jest-dom
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1374) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  802) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  210) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5) import '@testing-library/jest-dom';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1375) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  803) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  213) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1376) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  804) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  214) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) import Login from './pages/Login';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1377) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  805) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  215) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) import Signup from './pages/Signup';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1378) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  806) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  216) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10) import "./App.css";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1379) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  807) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  217) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1380) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  808) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  218) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1381) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  809) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  219) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 17) 				<Route exact path='/' element={<Home />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1382) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  810) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  220) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18) 				<Route path='/login' element={<Login />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1383) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  811) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  221) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19) 				<Route path='/signup' element={<Signup />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1384) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  812) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  222) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1385) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  813) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  223) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1386) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  814) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  224) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29) export default App;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1387) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  815) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  227) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import decode from 'jwt-decode';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1388) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  816) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  228) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1389) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  817) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  229) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) class AuthService {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1390) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  818) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  230) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1391) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  819) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  231) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     // Return user information found in the token
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1392) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  820) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  232) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     getProfile() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1393) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  821) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  233) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         return decode(this.getToken());
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1394) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  822) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  234) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1395) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  823) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  235) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1396) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  824) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  236) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10)     // If token exists and is not expired, user is logged in
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1397) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  825) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  237) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 11)     loggedIn() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1398) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  826) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  238) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12)         const token = this.getToken();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1399) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  827) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  239) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 13)         return !!token && !this.isTokenExpired(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1400) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  828) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  240) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 14)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1401) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  829) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  241) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1402) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  830) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  242) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 16)     // Check if token is expired against its
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1403) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  831) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  243) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 17)     // timestamp found in 'exp'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1404) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  832) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  244) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 18)     isTokenExpired(token) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1405) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  833) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  245) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 19)         try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1406) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  834) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  246) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 20)         const decoded = decode(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1407) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  835) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  247) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 21)         if (decoded.exp < Date.now() / 1000) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1408) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  836) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  248) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22)             return true;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1409) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  837) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  249) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 23)         } else return false;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1410) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  838) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  250) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)         } catch (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1411) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  839) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  251) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         return false;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1412) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  840) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  252) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1413) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  841) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  253) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1414) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  842) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  254) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1415) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  843) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  255) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     getToken() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1416) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  844) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  256) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30)         return localStorage.getItem('id_token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1417) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  845) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  257) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1418) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  846) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  258) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1419) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  847) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  259) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33)     // "log in" the user by setting token in local storage
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1420) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  848) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  260) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34)     // and redirecting to home page
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1421) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  849) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  261) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 35)     login(idToken) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1422) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  850) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  262) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 36)         localStorage.setItem('id_token', idToken);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1423) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  851) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  263) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1424) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  852) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  264) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 38)         window.location.assign('/');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1425) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  853) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  265) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 39)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1426) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  854) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  266) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1427) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  855) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  267) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 41)     // "log out" the user by removing local storage token
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1428) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  856) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  268) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 42)     // and redirecting to home page
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1429) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  857) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  269) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 43)     logout() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1430) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  858) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  270) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 44)         localStorage.removeItem('id_token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1431) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  859) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  271) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 45)         window.location.assign('/');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1432) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  860) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  272) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 46)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1433) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  861) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  273) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1434) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  862) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  274) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1435) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  863) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  275) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) const instance = new AuthService();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1436) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  864) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  276) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1437) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  865) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  277) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51) export default instance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1438) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  866) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  280) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  1) import AuthService from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1439) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  867) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  281) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1440) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  868) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  282) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1441) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  869) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  283) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) const getDefaultHeaders = () => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1442) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  870) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  284) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     const token = AuthService.getToken();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1443) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  871) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  285) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     return {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1444) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  872) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  286) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         'Accept': 'application/json',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1445) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  873) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  287) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)         "Authorization": token ? `Bearer ${token}` : '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1446) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  874) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  288) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1447) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  875) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  289) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1448) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  876) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  290) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1449) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  877) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  291) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1450) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  878) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  292) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 13) const setData = async res => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1451) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  879) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  293) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     const contentType = res.headers.get("content-type");
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1452) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  880) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  294) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     if (contentType && contentType.includes('application/json')) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1453) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  881) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  295) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         const data = await res.json()
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1454) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  882) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  296) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)         res.data = data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1455) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  883) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  297) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1456) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  884) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  298) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     return res;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1457) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  885) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  299) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1458) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  886) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  300) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1459) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  887) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  301) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22) // Default method to send a GET request
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1460) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  888) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  302) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) export const sendGet = async (url) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1461) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  889) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  303) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)     const res = await fetch(url, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1462) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  890) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  304) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         method: 'GET',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1463) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  891) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  305) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1464) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  892) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  306) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 27)             ...getDefaultHeaders()
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1465) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  893) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  307) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 28)         },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1466) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  894) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  308) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1467) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  895) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  309) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1468) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  896) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  310) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 31)     return await setData(res);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1469) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  897) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  311) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 32) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1470) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  898) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  312) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1471) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  899) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  313) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34) // Default method to send a GET request
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1472) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  900) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  314) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 35) export const sendPost = async (url, data) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1473) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  901) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  315) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     const res = await fetch(url, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1474) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  902) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  316) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)       method: 'POST',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1475) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  903) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  317) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       body: JSON.stringify(data),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1476) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  904) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  318) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1477) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  905) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  319) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 40)         ...getDefaultHeaders(),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1478) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  906) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  320) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         'Content-Type': 'application/json',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1479) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  907) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  321) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1480) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  908) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  322) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)     })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1481) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  909) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  323) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1482) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  910) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  324) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 45)     return await setData(res);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1483) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  911) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  325) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1484) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  912) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  328) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import React, { useEffect, useState } from 'react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1485) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  913) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  329) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1486) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  914) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  330) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendGet } from '../utils/requests';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1487) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  915) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  331) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1488) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  916) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  332) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)     const [user, setUser] = useState(null);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1489) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  917) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  333) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)     const getMyUser = async function() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1490) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  918) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  334) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)         const response = await sendGet('/api/users/me');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1491) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  919) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  335) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)         if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1492) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  920) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  336) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)             setUser(response.data);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1493) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  921) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  337) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1494) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  922) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  338) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1495) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  923) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  339) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     useEffect(function() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1496) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  924) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  340) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         getMyUser();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1497) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  925) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  341) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }, []);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1498) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  926) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  342) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1499) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  927) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  343) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) 			<p>Login Status: {auth.loggedIn() ? 'Logged In!' : 'Not Logged in :('}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1500) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  928) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  344) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 			<p>Authentication-protected endpoints working: {user ? 'Yes': 'No'}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1501) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  929) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  345) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 			{!auth.loggedIn() && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1502) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  930) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  346) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 <div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1503) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  931) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  347) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)                     <a href="/login">Login</a>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1504) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  932) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  348) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)                     <br />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1505) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  933) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  349) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)                     <a href="/signup">Sign Up</a>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1506) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  934) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  350) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1507) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  935) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  351) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1508) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  936) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  352) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29) 			{auth.loggedIn() && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1509) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  937) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  353) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)                 <div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1510) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  938) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  354) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)                     <button onClick={() => auth.logout()}>Log Out</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1511) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  939) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  355) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1512) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  940) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  356) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1513) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  941) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  357) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 37)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1514) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  942) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  360) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1515) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  943) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  361) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1516) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  944) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  362) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1517) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  945) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  363) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1518) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  946) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  364) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Signup() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1519) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  947) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  365) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1520) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  948) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  366) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1521) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  949) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  367) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1522) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  950) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  368) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1523) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  951) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  369) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     username: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1524) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  952) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  370) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1525) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  953) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  371) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1526) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  954) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  372) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)   const [error, setError] = useState(null);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1527) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  955) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  373) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1528) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  956) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  374) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   // Handle changing values in form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1529) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  957) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  375) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)   const handleFormChange = (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1530) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  958) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  376) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1531) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  959) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  377) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       ...formState,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1532) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  960) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  378) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       [event.target.name]: event.target.value
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1533) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  961) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  379) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1534) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  962) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  380) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1535) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  963) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  381) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1536) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  964) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  382) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   // Handle submission of form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1537) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  965) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  383) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1538) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  966) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  384) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1539) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  967) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  385) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1540) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  968) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  386) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     const response = await sendPost('/api/users/', formState);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1541) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  969) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  387) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)     if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1542) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  970) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  388) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         const { token } = response.data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1543) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  971) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  389) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         auth.login(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1544) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  972) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  390) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1545) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  973) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  391) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1546) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  974) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  392) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)         if (response.data.message) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1547) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  975) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  393) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)             setError(response.data.message);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1548) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  976) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  394) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1549) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  977) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  395) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1550) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  978) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  396) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1551) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  979) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  397) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1552) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  980) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  398) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1553) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  981) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  399) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   return (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1554) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  982) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  400) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)     <div className="App">
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1555) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  983) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  401) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       <div style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1556) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  984) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  402) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1557) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  985) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  403) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1558) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  986) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  404) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         alignItems: 'center',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1559) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  987) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  405) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)       }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1560) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  988) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  406) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         <h2>Signup</h2>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1561) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  989) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  407) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1562) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  990) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  408) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)           display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1563) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  991) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  409) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)           flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1564) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  992) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  410) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)           width: '500px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1565) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  993) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  411) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1566) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  994) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  412) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             <input name="username" value={formState.username} placeholder="Username" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1567) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  995) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  413) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1568) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  996) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  414) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1569) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  997) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  415) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)             <button type="submit">Submit</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1570) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  998) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  416) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             {error && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1571) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400  999) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  417) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)                 <div style={{color: 'red'}}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1572) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1000) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  418) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)                     <p>{error}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1573) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1001) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  419) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1574) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1002) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  420) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1575) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1003) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  421) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)         </form>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1576) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1004) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  422) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1577) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1005) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  423) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1578) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1006) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  424) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1579) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1007) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  425) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1580) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1008) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  426) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 67) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1581) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1009) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  427) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68) export default Signup;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1582) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1010) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  430) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1583) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1011) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  431) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1584) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1012) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  432) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1585) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1013) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  433) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1586) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1014) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  434) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Login() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1587) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1015) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  435) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1588) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1016) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  436) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1589) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1017) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  437) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1590) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1018) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  438) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1591) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1019) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  439) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1592) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1020) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  440) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1593) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1021) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  441) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)   const [error, setError] = useState('');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1594) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1022) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  442) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1595) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1023) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  443) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   // Handle changing values in form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1596) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1024) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  444) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   const handleFormChange = (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1597) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1025) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  445) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1598) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1026) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  446) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       ...formState,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1599) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1027) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  447) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       [event.target.name]: event.target.value
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1600) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1028) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  448) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1601) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1029) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  449) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1602) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1030) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  450) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1603) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1031) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  451) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)   // Handle submission of form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1604) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1032) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  452) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1605) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1033) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  453) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1606) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1034) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  454) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1607) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1035) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  455) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)     const response = await sendPost('/api/users/login/', formState);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1608) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1036) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  456) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1609) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1037) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  457) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         const { token } = response.data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1610) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1038) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  458) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         auth.login(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1611) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1039) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  459) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1612) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1040) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  460) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     else if (response.data && response.data.message) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1613) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1041) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  461) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)         setError(response.data.message);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1614) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1042) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  462) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1615) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1043) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  463) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1616) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1044) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  464) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1617) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1045) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  465) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1618) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1046) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  466) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   return (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1619) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1047) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  467) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)     <div className="App">
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1620) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1048) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  468) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       <div style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1621) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1049) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  469) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)         display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1622) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1050) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  470) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1623) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1051) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  471) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)         alignItems: 'center',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1624) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1052) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  472) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)       }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1625) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1053) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  473) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         <h2>Login</h2>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1626) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1054) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  474) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1627) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1055) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  475) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)           display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1628) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1056) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  476) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)           flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1629) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1057) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  477) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)           width: '500px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1630) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1058) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  478) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1631) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1059) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  479) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1632) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1060) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  480) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1633) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1061) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  481) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)             <button type="submit">Submit</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1634) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1062) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  482) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             {error && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1635) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1063) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  483) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)                 <div style={{color: 'red'}}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1636) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1064) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  484) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)                     <p>{error}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1637) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1065) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  485) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1638) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1066) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  486) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1639) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1067) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  487) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)         </form>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1640) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1068) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  488) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1641) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1069) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  489) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)     </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1642) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1070) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  490) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1643) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1071) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  491) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1644) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1072) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  492) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1645) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1073) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  493) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64) export default Login;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1646) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1074) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  496) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1647) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1075) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  497) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1648) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1076) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  498) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1649) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1077) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  499) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1650) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1078) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  500) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1651) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1079) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  501) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1652) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1080) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  502) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1653) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1081) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  503) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1654) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1082) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  504) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1655) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1083) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  505) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1656) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1084) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  506) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1657) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1085) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  507) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1658) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1086) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  508) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1659) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1087) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  509) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1660) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1088) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  510) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1661) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1089) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  511) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1662) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1090) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  512) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1663) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1091) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  513) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1664) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1092) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  514) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1665) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1093) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  515) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1666) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1094) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  516) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1667) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1095) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  517) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1668) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1096) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  518) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1669) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1097) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  519) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1670) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1098) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  520) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1671) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1099) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  521) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1672) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1100) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  522) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1673) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1101) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  523) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1674) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1102) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  524) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1675) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1103) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  525) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1676) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1104) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  526) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1677) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1105) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  527) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1678) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1106) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  528) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1679) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1107) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  529) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1680) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1108) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  530) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1681) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1109) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  531) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1682) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1110) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  532) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1683) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1111) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  533) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1684) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1112) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  534) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1685) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1113) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  537) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400   4) function CrudExample() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1686) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1114) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  538) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400   9)     id: null,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1687) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1115) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  539) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  37)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1688) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1116) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  540) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  38)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1689) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1117) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  541) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  40)     // If there is an id, we're doing an update instead of a creation
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1690) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1118) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  542) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  41)     if (formState.id) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1691) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1119) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  543) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  42)       const response = await fetch(`/api/posts/${formState.id}`, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1692) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1120) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  544) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  43)         method: 'PUT',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1693) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1121) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  545) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  44)         body: JSON.stringify(formState),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1694) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1122) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  546) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  45)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1695) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1123) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  547) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  46)           "Content-Type": "application/json"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1696) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1124) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  548) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  47)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1697) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1125) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  549) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  48)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1698) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1126) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  550) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  49) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1699) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1127) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  551) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  50)       if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1700) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1128) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  552) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  51)         setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1701) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1129) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  553) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  52)           id: null,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1702) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1130) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  554) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  53)           title: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1703) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1131) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  555) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  54)           description: ''
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1704) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1132) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  556) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  55)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1705) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1133) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  557) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  56) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1706) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1134) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  558) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  57)         getPosts();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1707) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1135) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  559) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  59)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1708) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1136) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  560) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  60) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1709) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1137) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  561) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  61)     // Creation
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1710) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1138) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  562) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  62)     else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1711) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1139) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  563) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  63)        // Send form state to backend
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1712) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1140) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  564) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  64)       const response = await fetch('/api/posts/', {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1713) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1141) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  565) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  65)         method: 'POST',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1714) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1142) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  566) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  66)         body: JSON.stringify(formState),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1715) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1143) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  567) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  67)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1716) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1144) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  568) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  68)           "Content-Type": "application/json"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1717) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1145) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  569) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  69)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1718) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1146) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  570) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  70)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1719) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1147) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  571) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  71) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1720) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1148) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  572) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  72)       // If successful, reload posts
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1721) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1149) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  573) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  73)       if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1722) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1150) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  574) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  74)         getPosts();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1723) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1151) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  575) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  75)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1724) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1152) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  576) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  76)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1725) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1153) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  577) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  77)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1726) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1154) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  578) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  78) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1727) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1155) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  579) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  79) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1728) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1156) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  580) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  80)   const handlePostDelete = async event => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1729) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1157) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  581) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  81)     const postId = event.target.value;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1730) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1158) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  582) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  82)     const response = await fetch(`/api/posts/${postId}`, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1731) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1159) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  583) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  83)       method: 'DELETE',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1732) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1160) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  584) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  91)   const renderUpdate = async ({id, title, description}) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1733) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1161) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  585) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  92)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1734) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1162) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  586) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  93)       id: id,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1735) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1163) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  587) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  94)       title: title,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1736) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1164) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  588) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  95)       description: description
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1737) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1165) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  589) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  96)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1738) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1166) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  590) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  97)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1739) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1167) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  591) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  98) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1740) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1168) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  592) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 108)         <div className='rainbow' style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1741) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1169) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  593) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 109)           margin: '20px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1742) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1170) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  594) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 110)           fontSize: '25px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1743) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1171) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  595) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 111)           fontStyle: 'italic',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1744) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1172) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  596) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 112)           fontWeight: 'bold'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1745) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1173) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  597) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 113)         }}>Lakelon Bailey Hello Plus Example:</div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1746) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1174) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  598) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 115)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1747) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1175) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  599) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 122)           <button type='submit' style={{marginTop: '10px'}}>{formState.id ? 'Update' : 'Submit'}</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1748) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1176) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  600) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 131)               <span>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1749) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1177) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  601) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 132)                 <button onClick={handlePostDelete} value={item.id}>Delete</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1750) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1178) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  602) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 133)                 <button onClick={() => renderUpdate(item)}>Update</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1751) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1179) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  603) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 134)               </span>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1752) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1180) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  604) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 143) export default CrudExample;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1753) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1181) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  607) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400  5) import { sendPost } from "../../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1754) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1182) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  608) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1755) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1183) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  609) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 20) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1756) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1184) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  610) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) 		await sendPost("/api/email/", form);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1757) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1185) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400  611) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1758) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1186) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  612) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 38)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1759) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1187) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  615) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    2) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1760) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1188) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  616) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    3) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-ui",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1761) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1189) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  617) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    4) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "0.1.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1762) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1190) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  618) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    5) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "private": true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1763) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1191) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  619) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    6) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)   "dependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1764) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1192) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  620) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    7) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)     "@testing-library/jest-dom": "^5.17.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1765) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1193) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  621) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    8) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)     "@testing-library/react": "^13.4.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1766) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1194) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  622) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400    9) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)     "@testing-library/user-event": "^13.5.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1767) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1195) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  623) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   10) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     "http-proxy-middleware": "^2.0.6",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1768) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1196) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  624) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   11) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     "jwt-decode": "^3.1.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1769) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1197) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  625) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   12) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)     "react": "^18.2.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1770) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1198) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  626) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   13) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     "react-dom": "^18.2.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1771) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1199) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  627) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   14) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14)     "react-scripts": "5.0.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1772) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1200) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  628) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   15) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15)     "web-vitals": "^2.1.4"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1773) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1201) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  629) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   16) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1774) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1202) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  630) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   17) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1775) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1203) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  631) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   18) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 18)     "start": "react-scripts start",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1776) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1204) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  632) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   19) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 19)     "build": "react-scripts build",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1777) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1205) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  633) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   20) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 20)     "test": "react-scripts test",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1778) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1206) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  634) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   21) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 21)     "eject": "react-scripts eject"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1779) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1207) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  635) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   22) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 22)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1780) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1208) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  636) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   23) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 23)   "eslintConfig": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1781) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1209) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  637) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   24) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 24)     "extends": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1782) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1210) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  638) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   25) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25)       "react-app",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1783) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1211) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  639) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   26) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 26)       "react-app/jest"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1784) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1212) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  640) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   27) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27)     ]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1785) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1213) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  641) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   28) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1786) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1214) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  642) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   29) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29)   "browserslist": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1787) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1215) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  643) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   30) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 30)     "production": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1788) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1216) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  644) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   31) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 31)       ">0.2%",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1789) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1217) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  645) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   32) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 32)       "not dead",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1790) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1218) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  646) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   33) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 33)       "not op_mini all"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1791) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1219) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  647) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   34) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 34)     ],
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1792) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1220) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  648) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   35) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 35)     "development": [
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1793) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1221) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  649) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   36) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 36)       "last 1 chrome version",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1794) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1222) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  650) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   37) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 37)       "last 1 firefox version",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1795) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1223) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  651) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   38) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 38)       "last 1 safari version"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1796) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1224) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  652) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   39) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 39)     ]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1797) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1225) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  653) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   40) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 40)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1798) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1226) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  654) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   41) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 41) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1799) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1227) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  655) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   44) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) const reportWebVitals = onPerfEntry => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1800) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1228) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  656) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   45) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   if (onPerfEntry && onPerfEntry instanceof Function) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1801) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1229) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  657) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   46) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)     import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1802) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1230) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  658) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   47) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)       getCLS(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1803) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1231) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  659) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   48) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)       getFID(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1804) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1232) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  660) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   49) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)       getFCP(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1805) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1233) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  661) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   50) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)       getLCP(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1806) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1234) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  662) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   51) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8)       getTTFB(onPerfEntry);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1807) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1235) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  663) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   52) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1808) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1236) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  664) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   53) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1809) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1237) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  665) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   54) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1810) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1238) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  666) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   55) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1811) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1239) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  667) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   56) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) export default reportWebVitals;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1812) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1240) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  668) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   59) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  1) const { createProxyMiddleware } = require('http-proxy-middleware');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1813) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1241) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  669) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   60) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1814) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1242) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  670) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   61) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  3) module.exports = function(app) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1815) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1243) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  671) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   62) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  4)   app.use(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1816) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1244) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  672) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   63) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  5)     '/api',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1817) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1245) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  673) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   64) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  6)     createProxyMiddleware({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1818) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1246) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  674) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   65) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)       target: 'http://localhost:3001',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1819) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1247) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  675) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   66) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  8)       changeOrigin: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1820) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1248) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  676) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   67) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  9)     })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1821) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1249) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  677) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   68) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 10)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1822) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1250) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  678) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   69) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 11) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1823) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1251) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  679) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   72) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1824) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1252) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  680) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   73) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1825) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1253) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  681) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   74) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1826) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1254) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  682) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   75) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1827) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1255) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  683) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   76) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1828) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1256) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  684) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   77) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1829) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1257) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  685) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   78) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1830) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1258) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  686) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   79) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1831) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1259) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  687) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   80) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1832) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1260) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  688) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   81) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1833) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1261) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  689) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   82) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1834) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1262) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  690) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   83) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1835) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1263) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  691) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   84) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1836) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1264) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  692) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   85) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1837) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1265) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  693) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   86) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1838) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1266) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  694) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   87) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1839) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1267) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  695) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   88) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1840) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1268) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  696) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   89) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1841) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1269) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  697) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   90) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1842) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1270) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  698) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   91) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1843) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1271) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  699) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   92) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1844) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1272) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  700) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   93) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1845) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1273) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  701) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   94) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1846) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1274) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  702) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   95) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1847) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1275) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  703) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   96) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1848) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1276) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  704) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   97) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1849) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1277) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  705) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   98) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1850) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1278) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  706) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400   99) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1851) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1279) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  707) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  100) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1852) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1280) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  708) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  101) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1853) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1281) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  709) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  102) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1854) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1282) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  710) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  103) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1855) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1283) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  711) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  104) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1856) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1284) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  712) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  105) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1857) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1285) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  713) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  106) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1858) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1286) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  714) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  107) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1859) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1287) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  715) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  108) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1860) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1288) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  716) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  109) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1861) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1289) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  717) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  110) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1862) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1290) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  718) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  113) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) import React from 'react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1863) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1291) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  719) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  114) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2) import ReactDOM from 'react-dom/client';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1864) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1292) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  720) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  115) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3) import './index.css';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1865) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1293) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  721) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  116) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4) import App from './App';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1866) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1294) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  722) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  117) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5) import reportWebVitals from './reportWebVitals';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1867) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1295) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  723) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  118) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1868) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1296) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  724) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  119) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7) const root = ReactDOM.createRoot(document.getElementById('root'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1869) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1297) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  725) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  120) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) root.render(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1870) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1298) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  726) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  121) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9)   <React.StrictMode>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1871) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1299) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  727) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  122) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)     <App />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1872) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1300) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  728) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  123) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   </React.StrictMode>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1873) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1301) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  729) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  124) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1874) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1302) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  730) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  125) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1875) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1303) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  731) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  126) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 14) // If you want to start measuring performance in your app, pass a function
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1876) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1304) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  732) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  127) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 15) // to log results (for example: reportWebVitals(console.log))
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1877) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1305) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  733) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  128) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 16) // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1878) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1306) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  734) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  129) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 17) reportWebVitals();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1879) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1307) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  735) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  132) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) body {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1880) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1308) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  736) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  133) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   margin: 0;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1881) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1309) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  737) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  134) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1882) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1310) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  738) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  135) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)     'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1883) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1311) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  739) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  136) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  5)     sans-serif;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1884) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1312) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  740) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  137) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   -webkit-font-smoothing: antialiased;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1885) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1313) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  741) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  138) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  7)   -moz-osx-font-smoothing: grayscale;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1886) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1314) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  742) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  139) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  8) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1887) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1315) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  743) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  140) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1888) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1316) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  744) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  141) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10) code {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1889) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1317) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  745) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  142) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1890) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1318) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  746) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  143) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 12)     monospace;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1891) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1319) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  747) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  144) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 13) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1892) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1320) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  748) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  147) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) import { render, screen } from '@testing-library/react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1893) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1321) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  749) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  148) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) import App from './App';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1894) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1322) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  750) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  149) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1895) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1323) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  751) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  150) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) test('renders learn react link', () => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1896) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1324) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  752) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  151) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5)   render(<App />);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1897) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1325) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  753) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  152) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 6)   const linkElement = screen.getByText(/learn react/i);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1898) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1326) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  754) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  153) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 7)   expect(linkElement).toBeInTheDocument();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1899) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1327) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  755) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  154) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 8) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1900) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1328) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  756) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  157) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 1) // jest-dom adds custom jest matchers for asserting on DOM nodes.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1901) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1329) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  757) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  158) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 2) // allows you to do things like:
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1902) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1330) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  758) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  159) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 3) // expect(element).toHaveTextContent(/react/i)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1903) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1331) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  759) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  160) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 4) // learn more: https://github.com/testing-library/jest-dom
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1904) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1332) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  760) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  161) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 5) import '@testing-library/jest-dom';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1905) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1333) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  761) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  164) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1906) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1334) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  762) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  165) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) import Login from './pages/Login';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1907) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1335) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  763) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  166) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) import Signup from './pages/Signup';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1908) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1336) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  764) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  167) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10) import "./App.css";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1909) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1337) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  765) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  168) 17ccb666 (OutliersAdvantage 2023-09-20 13:49:11 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1910) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1338) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  766) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  169) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1911) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1339) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  767) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  170) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 17) 				<Route exact path='/' element={<Home />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1912) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1340) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  768) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  171) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18) 				<Route path='/login' element={<Login />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1913) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1341) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  769) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  172) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19) 				<Route path='/signup' element={<Signup />} />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1914) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1342) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  770) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  173) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 27) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1915) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1343) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  771) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  174) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 28) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1916) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1344) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  772) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  175) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 29) export default App;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1917) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1345) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  773) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  178) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import decode from 'jwt-decode';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1918) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1346) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  774) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  179) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1919) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1347) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  775) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  180) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) class AuthService {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1920) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1348) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  776) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  181) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1921) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1349) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  777) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  182) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     // Return user information found in the token
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1922) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1350) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  778) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  183) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     getProfile() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1923) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1351) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  779) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  184) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         return decode(this.getToken());
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1924) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1352) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  780) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  185) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1925) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1353) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  781) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  186) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1926) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1354) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  782) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  187) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10)     // If token exists and is not expired, user is logged in
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1927) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1355) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  783) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  188) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 11)     loggedIn() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1928) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1356) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  784) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  189) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12)         const token = this.getToken();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1929) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1357) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  785) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  190) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 13)         return !!token && !this.isTokenExpired(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1930) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1358) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  786) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  191) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 14)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1931) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1359) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  787) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  192) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1932) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1360) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  788) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  193) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 16)     // Check if token is expired against its
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1933) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1361) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  789) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  194) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 17)     // timestamp found in 'exp'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1934) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1362) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  790) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  195) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 18)     isTokenExpired(token) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1935) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1363) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  791) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  196) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 19)         try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1936) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1364) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  792) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  197) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 20)         const decoded = decode(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1937) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1365) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  793) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  198) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 21)         if (decoded.exp < Date.now() / 1000) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1938) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1366) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  794) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  199) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22)             return true;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1939) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1367) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  795) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  200) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 23)         } else return false;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1940) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1368) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  796) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  201) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)         } catch (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1941) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1369) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  797) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  202) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         return false;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1942) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1370) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  798) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  203) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1943) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1371) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  799) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  204) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1944) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1372) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  800) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  205) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1945) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1373) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  801) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  206) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     getToken() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1946) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1374) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  802) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  207) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30)         return localStorage.getItem('id_token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1947) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1375) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  803) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  208) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1948) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1376) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  804) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  209) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1949) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1377) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  805) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  210) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33)     // "log in" the user by setting token in local storage
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1950) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1378) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  806) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  211) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34)     // and redirecting to home page
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1951) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1379) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  807) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  212) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 35)     login(idToken) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1952) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1380) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  808) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  213) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 36)         localStorage.setItem('id_token', idToken);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1953) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1381) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  809) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  214) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1954) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1382) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  810) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  215) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 38)         window.location.assign('/');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1955) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1383) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  811) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  216) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 39)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1956) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1384) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  812) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  217) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1957) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1385) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  813) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  218) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 41)     // "log out" the user by removing local storage token
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1958) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1386) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  814) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  219) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 42)     // and redirecting to home page
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1959) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1387) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  815) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  220) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 43)     logout() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1960) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1388) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  816) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  221) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 44)         localStorage.removeItem('id_token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1961) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1389) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  817) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  222) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 45)         window.location.assign('/');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1962) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1390) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  818) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  223) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 46)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1963) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1391) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  819) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  224) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1964) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1392) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  820) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  225) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1965) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1393) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  821) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  226) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) const instance = new AuthService();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1966) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1394) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  822) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  227) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1967) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1395) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  823) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  228) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51) export default instance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1968) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1396) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  824) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  231) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  1) import AuthService from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1969) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1397) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  825) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  232) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1970) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1398) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  826) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  233) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1971) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1399) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  827) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  234) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  4) const getDefaultHeaders = () => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1972) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1400) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  828) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  235) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  5)     const token = AuthService.getToken();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1973) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1401) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  829) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  236) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  6)     return {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1974) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1402) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  830) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  237) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  7)         'Accept': 'application/json',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1975) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1403) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  831) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  238) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  8)         "Authorization": token ? `Bearer ${token}` : '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1976) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1404) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  832) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  239) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400  9)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1977) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1405) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  833) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  240) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 10) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1978) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1406) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  834) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  241) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1979) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1407) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  835) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  242) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1980) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1408) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  836) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  243) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 13) const setData = async res => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1981) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1409) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  837) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  244) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     const contentType = res.headers.get("content-type");
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1982) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1410) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  838) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  245) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     if (contentType && contentType.includes('application/json')) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1983) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1411) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  839) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  246) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         const data = await res.json()
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1984) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1412) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  840) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  247) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)         res.data = data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1985) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1413) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  841) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  248) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1986) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1414) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  842) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  249) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     return res;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1987) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1415) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  843) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  250) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1988) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1416) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  844) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  251) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1989) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1417) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  845) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  252) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 22) // Default method to send a GET request
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1990) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1418) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  846) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  253) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) export const sendGet = async (url) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1991) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1419) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  847) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  254) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 24)     const res = await fetch(url, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1992) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1420) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  848) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  255) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 25)         method: 'GET',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1993) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1421) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  849) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  256) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 26)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1994) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1422) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  850) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  257) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 27)             ...getDefaultHeaders()
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1995) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1423) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  851) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  258) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 28)         },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1996) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1424) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  852) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  259) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 29)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1997) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1425) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  853) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  260) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 30) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1998) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1426) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  854) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  261) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 31)     return await setData(res);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 1999) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1427) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  855) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  262) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 32) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2000) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1428) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  856) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  263) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 33) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2001) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1429) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  857) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  264) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 34) // Default method to send a GET request
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2002) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1430) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  858) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  265) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 35) export const sendPost = async (url, data) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2003) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1431) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  859) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  266) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     const res = await fetch(url, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2004) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1432) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  860) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  267) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)       method: 'POST',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2005) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1433) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  861) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  268) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       body: JSON.stringify(data),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2006) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1434) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  862) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  269) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2007) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1435) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  863) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  270) 47165732 (OutliersAdvantage 2023-10-01 21:43:42 -0400 40)         ...getDefaultHeaders(),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2008) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1436) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  864) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  271) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         'Content-Type': 'application/json',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2009) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1437) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  865) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  272) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2010) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1438) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  866) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  273) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)     })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2011) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1439) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  867) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  274) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2012) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1440) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  868) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  275) 53690dff (OutliersAdvantage 2023-10-01 21:50:41 -0400 45)     return await setData(res);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2013) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1441) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  869) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  276) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2014) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1442) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  870) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  279) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import React, { useEffect, useState } from 'react';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2015) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1443) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  871) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  280) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2016) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1444) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  872) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  281) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendGet } from '../utils/requests';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2017) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1445) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  873) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  282) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2018) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1446) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  874) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  283) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)     const [user, setUser] = useState(null);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2019) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1447) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  875) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  284) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)     const getMyUser = async function() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2020) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1448) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  876) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  285) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)         const response = await sendGet('/api/users/me');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2021) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1449) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  877) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  286) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)         if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2022) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1450) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  878) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  287) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)             setUser(response.data);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2023) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1451) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  879) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  288) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2024) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1452) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  880) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  289) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2025) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1453) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  881) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  290) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     useEffect(function() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2026) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1454) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  882) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  291) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         getMyUser();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2027) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1455) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  883) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  292) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }, []);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2028) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1456) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  884) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  293) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2029) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1457) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  885) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  294) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20) 			<p>Login Status: {auth.loggedIn() ? 'Logged In!' : 'Not Logged in :('}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2030) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1458) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  886) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  295) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 			<p>Authentication-protected endpoints working: {user ? 'Yes': 'No'}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2031) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1459) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  887) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  296) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 			{!auth.loggedIn() && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2032) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1460) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  888) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  297) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 <div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2033) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1461) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  889) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  298) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)                     <a href="/login">Login</a>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2034) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1462) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  890) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  299) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)                     <br />
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2035) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1463) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  891) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  300) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)                     <a href="/signup">Sign Up</a>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2036) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1464) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  892) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  301) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2037) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1465) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  893) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  302) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2038) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1466) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  894) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  303) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29) 			{auth.loggedIn() && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2039) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1467) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  895) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  304) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)                 <div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2040) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1468) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  896) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  305) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)                     <button onClick={() => auth.logout()}>Log Out</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2041) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1469) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  897) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  306) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2042) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1470) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  898) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  307) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2043) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1471) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  899) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  308) 9b64e8c8 (OutliersAdvantage 2023-09-21 11:23:01 -0400 37)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2044) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1472) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  900) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  311) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2045) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1473) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  901) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  312) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2046) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1474) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  902) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  313) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2047) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1475) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  903) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  314) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2048) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1476) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  904) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  315) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Signup() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2049) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1477) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  905) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  316) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2050) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1478) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  906) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  317) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2051) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1479) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  907) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  318) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2052) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1480) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  908) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  319) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2053) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1481) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  909) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  320) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     username: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2054) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1482) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  910) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  321) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2055) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1483) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  911) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  322) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2056) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1484) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  912) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  323) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)   const [error, setError] = useState(null);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2057) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1485) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  913) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  324) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2058) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1486) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  914) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  325) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   // Handle changing values in form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2059) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1487) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  915) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  326) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)   const handleFormChange = (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2060) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1488) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  916) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  327) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2061) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1489) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  917) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  328) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       ...formState,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2062) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1490) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  918) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  329) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       [event.target.name]: event.target.value
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2063) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1491) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  919) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  330) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2064) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1492) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  920) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  331) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2065) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1493) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  921) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  332) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2066) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1494) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  922) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  333) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   // Handle submission of form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2067) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1495) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  923) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  334) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2068) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1496) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  924) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  335) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2069) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1497) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  925) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  336) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2070) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1498) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  926) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  337) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     const response = await sendPost('/api/users/', formState);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2071) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1499) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  927) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  338) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)     if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2072) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1500) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  928) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  339) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         const { token } = response.data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2073) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1501) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  929) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  340) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         auth.login(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2074) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1502) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  930) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  341) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2075) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1503) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  931) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  342) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2076) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1504) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  932) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  343) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)         if (response.data.message) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2077) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1505) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  933) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  344) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)             setError(response.data.message);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2078) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1506) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  934) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  345) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2079) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1507) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  935) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  346) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2080) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1508) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  936) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  347) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2081) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1509) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  937) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  348) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2082) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1510) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  938) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  349) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2083) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1511) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  939) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  350) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   return (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2084) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1512) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  940) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  351) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)     <div className="App">
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2085) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1513) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  941) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  352) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)       <div style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2086) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1514) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  942) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  353) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2087) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1515) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  943) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  354) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2088) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1516) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  944) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  355) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         alignItems: 'center',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2089) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1517) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  945) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  356) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)       }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2090) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1518) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  946) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  357) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         <h2>Signup</h2>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2091) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1519) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  947) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  358) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2092) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1520) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  948) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  359) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)           display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2093) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1521) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  949) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  360) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)           flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2094) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1522) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  950) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  361) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)           width: '500px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2095) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1523) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  951) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  362) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2096) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1524) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  952) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  363) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             <input name="username" value={formState.username} placeholder="Username" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2097) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1525) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  953) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  364) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2098) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1526) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  954) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  365) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2099) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1527) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  955) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  366) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)             <button type="submit">Submit</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2100) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1528) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  956) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  367) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             {error && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2101) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1529) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  957) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  368) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)                 <div style={{color: 'red'}}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2102) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1530) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  958) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  369) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)                     <p>{error}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2103) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1531) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  959) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  370) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2104) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1532) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  960) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  371) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2105) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1533) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  961) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  372) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)         </form>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2106) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1534) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  962) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  373) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2107) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1535) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  963) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  374) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2108) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1536) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  964) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  375) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2109) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1537) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  965) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  376) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2110) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1538) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  966) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  377) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 67) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2111) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1539) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  967) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  378) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68) export default Signup;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2112) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1540) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  968) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  381) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) import {useState} from "react";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2113) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1541) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  969) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  382) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) import auth from '../utils/auth';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2114) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1542) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  970) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  383) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) import { sendPost } from "../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2115) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1543) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  971) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  384) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2116) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1544) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  972) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  385) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) function Login() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2117) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1545) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  973) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  386) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6)   // Initialize empty form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2118) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1546) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  974) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  387) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   const [formState, setFormState] = useState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2119) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1547) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  975) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  388) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     email: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2120) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1548) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  976) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  389) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     password: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2121) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1549) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  977) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  390) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2122) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1550) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  978) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  391) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2123) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1551) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  979) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  392) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)   const [error, setError] = useState('');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2124) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1552) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  980) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  393) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2125) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1553) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  981) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  394) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   // Handle changing values in form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2126) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1554) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  982) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  395) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)   const handleFormChange = (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2127) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1555) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  983) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  396) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2128) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1556) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  984) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  397) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       ...formState,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2129) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1557) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  985) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  398) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       [event.target.name]: event.target.value
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2130) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1558) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  986) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  399) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2131) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1559) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  987) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  400) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2132) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1560) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  988) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  401) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2133) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1561) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  989) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  402) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)   // Handle submission of form
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2134) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1562) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  990) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  403) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2135) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1563) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  991) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  404) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2136) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1564) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  992) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  405) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2137) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1565) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  993) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  406) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)     const response = await sendPost('/api/users/login/', formState);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2138) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1566) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  994) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  407) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)     if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2139) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1567) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  995) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  408) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         const { token } = response.data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2140) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1568) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  996) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  409) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)         auth.login(token);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2141) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1569) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  997) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  410) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2142) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1570) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  998) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  411) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     else if (response.data && response.data.message) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2143) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1571) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400  999) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  412) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)         setError(response.data.message);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2144) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1572) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1000) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  413) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2145) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1573) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1001) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  414) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2146) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1574) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1002) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  415) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2147) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1575) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1003) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  416) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2148) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1576) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1004) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  417) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)   return (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2149) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1577) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1005) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  418) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)     <div className="App">
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2150) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1578) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1006) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  419) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)       <div style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2151) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1579) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1007) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  420) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)         display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2152) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1580) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1008) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  421) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)         flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2153) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1581) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1009) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  422) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)         alignItems: 'center',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2154) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1582) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1010) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  423) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)       }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2155) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1583) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1011) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  424) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)         <h2>Login</h2>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2156) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1584) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1012) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  425) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2157) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1585) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1013) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  426) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)           display: 'flex',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2158) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1586) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1014) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  427) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)           flexDirection: 'column',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2159) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1587) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1015) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  428) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)           width: '500px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2160) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1588) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1016) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  429) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         }}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2161) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1589) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1017) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  430) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             <input name="email" value={formState.email} placeholder="Email" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2162) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1590) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1018) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  431) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             <input name="password" value={formState.password} placeholder="Password" required onChange={handleFormChange}></input>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2163) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1591) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1019) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  432) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)             <button type="submit">Submit</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2164) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1592) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1020) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  433) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)             {error && (
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2165) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1593) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1021) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  434) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)                 <div style={{color: 'red'}}>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2166) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1594) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1022) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  435) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)                     <p>{error}</p>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2167) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1595) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1023) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  436) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)                 </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2168) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1596) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1024) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  437) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)             )}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2169) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1597) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1025) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  438) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)         </form>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2170) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1598) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1026) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  439) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2171) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1599) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1027) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  440) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)     </div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2172) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1600) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1028) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  441) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)   );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2173) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1601) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1029) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  442) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2174) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1602) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1030) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  443) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2175) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1603) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1031) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  444) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64) export default Login;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2176) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1604) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1032) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  447) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  1) @keyframes rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2177) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1605) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1033) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  448) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  2)     0% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2178) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1606) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1034) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  449) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  3)         color: red;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2179) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1607) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1035) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  450) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  4)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2180) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1608) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1036) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  451) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)     10% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2181) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1609) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1037) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  452) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  6)         color: orange;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2182) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1610) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1038) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  453) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  7)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2183) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1611) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1039) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  454) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  8)     20% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2184) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1612) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1040) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  455) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  9)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2185) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1613) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1041) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  456) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 10)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2186) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1614) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1042) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  457) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 11)     30% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2187) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1615) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1043) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  458) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 12)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2188) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1616) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1044) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  459) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 13)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2189) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1617) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1045) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  460) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 14)     40% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2190) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1618) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1046) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  461) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 15)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2191) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1619) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1047) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  462) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 16)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2192) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1620) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1048) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  463) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 17)     50% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2193) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1621) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1049) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  464) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 18)         color: purple;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2194) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1622) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1050) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  465) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2195) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1623) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1051) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  466) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 20)     60% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2196) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1624) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1052) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  467) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 21)         color: blue;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2197) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1625) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1053) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  468) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 22)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2198) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1626) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1054) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  469) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 23)     70% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2199) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1627) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1055) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  470) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 24)         color: green;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2200) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1628) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1056) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  471) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2201) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1629) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1057) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  472) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 26)     80% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2202) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1630) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1058) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  473) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 27)         color: yellow;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2203) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1631) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1059) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  474) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 28)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2204) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1632) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1060) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  475) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 29)     90% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2205) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1633) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1061) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  476) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 30)         color: orange
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2206) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1634) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1062) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  477) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2207) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1635) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1063) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  478) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 32)     100% {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2208) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1636) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1064) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  479) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 33)         color: red
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2209) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1637) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1065) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  480) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 34)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2210) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1638) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1066) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  481) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 35) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2211) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1639) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1067) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  482) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2212) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1640) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1068) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  483) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 37) .rainbow {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2213) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1641) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1069) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  484) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 38)     animation: 5s rainbow linear infinite;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2214) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1642) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1070) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  485) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400 39) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2215) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1643) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1071) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  488) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400   4) function CrudExample() {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2216) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1644) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1072) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  489) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400   9)     id: null,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2217) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1645) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1073) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  490) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  37)   const handleFormSubmit = async (event) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2218) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1646) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1074) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  491) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400  38)     event.preventDefault();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2219) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1647) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1075) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  492) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  40)     // If there is an id, we're doing an update instead of a creation
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2220) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1648) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1076) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  493) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  41)     if (formState.id) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2221) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1649) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1077) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  494) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  42)       const response = await fetch(`/api/posts/${formState.id}`, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2222) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1650) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1078) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  495) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  43)         method: 'PUT',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2223) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1651) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1079) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  496) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  44)         body: JSON.stringify(formState),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2224) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1652) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1080) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  497) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  45)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2225) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1653) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1081) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  498) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  46)           "Content-Type": "application/json"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2226) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1654) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1082) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  499) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  47)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2227) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1655) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1083) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  500) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  48)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2228) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1656) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1084) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  501) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  49) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2229) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1657) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1085) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  502) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  50)       if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2230) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1658) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1086) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  503) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  51)         setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2231) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1659) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1087) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  504) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  52)           id: null,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2232) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1660) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1088) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  505) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  53)           title: '',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2233) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1661) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1089) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  506) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  54)           description: ''
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2234) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1662) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1090) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  507) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  55)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2235) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1663) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1091) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  508) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  56) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2236) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1664) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1092) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  509) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  57)         getPosts();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2237) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1665) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1093) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  510) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  59)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2238) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1666) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1094) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  511) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  60) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2239) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1667) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1095) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  512) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  61)     // Creation
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2240) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1668) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1096) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  513) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  62)     else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2241) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1669) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1097) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  514) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  63)        // Send form state to backend
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2242) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1670) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1098) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  515) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  64)       const response = await fetch('/api/posts/', {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2243) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1671) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1099) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  516) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  65)         method: 'POST',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2244) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1672) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1100) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  517) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  66)         body: JSON.stringify(formState),
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2245) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1673) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1101) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  518) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  67)         headers: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2246) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1674) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1102) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  519) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  68)           "Content-Type": "application/json"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2247) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1675) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1103) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  520) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  69)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2248) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1676) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1104) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  521) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  70)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2249) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1677) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1105) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  522) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  71) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2250) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1678) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1106) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  523) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  72)       // If successful, reload posts
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2251) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1679) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1107) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  524) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  73)       if (response.ok) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2252) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1680) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1108) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  525) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  74)         getPosts();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2253) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1681) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1109) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  526) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  75)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2254) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1682) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1110) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  527) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  76)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2255) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1683) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1111) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  528) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  77)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2256) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1684) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1112) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  529) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  78) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2257) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1685) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1113) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  530) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  79) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2258) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1686) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1114) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  531) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  80)   const handlePostDelete = async event => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2259) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1687) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1115) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  532) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  81)     const postId = event.target.value;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2260) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1688) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1116) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  533) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  82)     const response = await fetch(`/api/posts/${postId}`, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2261) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1689) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1117) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  534) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  83)       method: 'DELETE',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2262) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1690) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1118) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  535) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  91)   const renderUpdate = async ({id, title, description}) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2263) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1691) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1119) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  536) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  92)     setFormState({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2264) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1692) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1120) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  537) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  93)       id: id,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2265) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1693) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1121) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  538) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  94)       title: title,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2266) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1694) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1122) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  539) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  95)       description: description
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2267) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1695) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1123) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  540) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  96)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2268) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1696) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1124) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  541) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  97)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2269) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1697) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1125) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  542) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400  98) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2270) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1698) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1126) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  543) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 108)         <div className='rainbow' style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2271) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1699) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1127) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  544) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 109)           margin: '20px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2272) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1700) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1128) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  545) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 110)           fontSize: '25px',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2273) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1701) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1129) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  546) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 111)           fontStyle: 'italic',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2274) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1702) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1130) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  547) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 112)           fontWeight: 'bold'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2275) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1703) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1131) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  548) 73254be3 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:39:39 -0400 113)         }}>Lakelon Bailey Hello Plus Example:</div>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2276) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1704) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1132) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  549) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 115)         <form onSubmit={handleFormSubmit} style={{
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2277) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1705) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1133) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  550) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 122)           <button type='submit' style={{marginTop: '10px'}}>{formState.id ? 'Update' : 'Submit'}</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2278) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1706) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1134) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  551) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 131)               <span>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2279) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1707) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1135) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  552) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 132)                 <button onClick={handlePostDelete} value={item.id}>Delete</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2280) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1708) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1136) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  553) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 133)                 <button onClick={() => renderUpdate(item)}>Update</button>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2281) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1709) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1137) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  554) bea87e08 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-22 15:02:19 -0400 134)               </span>
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2282) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1710) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1138) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  555) 9b64e8c8 frontend/src/pages/CrudExample.js       (OutliersAdvantage 2023-09-21 11:23:01 -0400 143) export default CrudExample;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2283) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1711) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1139) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  558) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400  5) import { sendPost } from "../../utils/requests";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2284) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1712) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1140) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  559) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2285) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1713) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1141) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  560) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 20) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2286) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1714) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1142) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  561) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 23) 		await sendPost("/api/email/", form);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2287) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1715) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1143) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  562) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2288) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1716) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1144) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  563) 8dd1f3e6 frontend/src/pages/demos/email.js (OutliersAdvantage 2023-10-01 22:13:02 -0400 38)backend/requirements.txt
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2289) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1717) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1145) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  564) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 1) beautifulsoup4==4.12.2
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2290) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1718) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1146) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  565) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 2) greenlet==2.0.2
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2291) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1719) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1147) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  566) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 3) playwright==1.38.0
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2292) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1720) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1148) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  567) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 4) pyee==9.0.4
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2293) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1721) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1149) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  568) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 5) soupsieve==2.5
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2294) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1722) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1150) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  569) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 6) typing-extensions==4.8.0
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2295) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1723) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1151) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  572) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   1) // Load environment variables
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2296) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1724) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1152) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  573) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   2) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2297) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1725) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1153) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  574) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2298) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1726) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1154) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  575) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   4) const path = require('path');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2299) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1727) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1155) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  576) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400   5) const express = require('express');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2300) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1728) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1156) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  577) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   6) const PORT = process.env.PORT || 3001;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2301) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1729) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1157) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  578) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   7) const app = express();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2302) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1730) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1158) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  579) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400   8) const sequelize = require("./config/db");
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2303) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1731) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1159) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  580) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  12) app.use(express.json());
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2304) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1732) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1160) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  581) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2305) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1733) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1161) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  582) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  14) // Direct all routes starting with api to the API's routes
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2306) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1734) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1162) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  583) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  15) app.use('/api', require('./routes'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2307) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1735) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1163) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  584) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2308) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1736) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1164) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  585) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  17) // All other GET requests not handled before will return to our React app for frontend routing
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2309) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1737) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1165) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  586) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  18) app.use(express.static(path.resolve(__dirname, '../frontend/build')));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2310) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1738) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1166) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  587) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  19) app.get('*', (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2311) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1739) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1167) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  588) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  20)     res.sendFile(path.resolve(__dirname, '../frontend/build', 'index.html'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2312) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1740) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1168) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  589) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  21) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2313) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1741) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1169) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  590) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  22) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2314) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1742) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1170) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  591) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  23) sequelize.sync({ force: false }).then(() => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2315) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1743) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1171) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  592) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  24) 	app.listen(PORT, () => console.log('Now listening'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2316) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1744) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1172) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  593) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2317) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1745) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1173) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  594) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2318) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1746) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1174) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  595) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  29) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2319) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1747) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1175) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  596) d8e62e0a (OutliersAdvantage 2023-10-10 22:00:51 -0400  31) 		const pyproc = spawn("venv/bin/python", ["scrapers/scraperfaker.py"]);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2320) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1748) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1176) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  597) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2321) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1749) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1177) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  598) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  44) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2322) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1750) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1178) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  599) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  59) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2323) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1751) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1179) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  600) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  63) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2324) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1752) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1180) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  601) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 106) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2325) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1753) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1181) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  602) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 109) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2326) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1754) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1182) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  603) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 116) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2327) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1755) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1183) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  604) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 126) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2328) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1756) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1184) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  605) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 131) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2329) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1757) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1185) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  606) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 135) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2330) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1758) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1186) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  607) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 138) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2331) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1759) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1187) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  608) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 141)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2332) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1760) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1188) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  611) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2333) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1761) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1189) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  612) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-api",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2334) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1762) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1190) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  613) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "1.0.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2335) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1763) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1191) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  614) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "description": "Fragrance Finder API",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2336) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1764) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1192) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  615) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)   "main": "server.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2337) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1765) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1193) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  616) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2338) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1766) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1194) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  617) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2339) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1767) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1195) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  618) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start": "nodemon server.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2340) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1768) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1196) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  619) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  9)     "load-db-local": "mysql -u root -p < schema/schema.sql"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2341) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1769) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1197) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  620) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2342) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1770) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1198) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  621) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   "author": "",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2343) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1771) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1199) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  622) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 12)   "license": "ISC",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2344) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1772) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1200) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  623) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 13)   "dependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2345) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1773) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1201) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  624) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     "bcrypt": "^5.1.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2346) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1774) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1202) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  625) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400 15)     "dotenv": "^16.3.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2347) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1775) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1203) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  626) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400 16)     "express": "^4.18.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2348) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1776) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1204) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  627) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     "jsonwebtoken": "^9.0.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2349) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1777) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1205) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  628) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     "nodemailer": "^6.9.5",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2350) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1778) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1206) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  629) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     "sequelize": "^6.33.0"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2351) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1779) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1207) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  630) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 21)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2352) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1780) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1208) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  631) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 22)   "devDependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2353) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1781) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1209) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  632) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "nodemon": "^3.0.1"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2354) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1782) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1210) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  633) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 24)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2355) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1783) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1211) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  634) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2356) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1784) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1212) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  637) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const Sequelize = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2357) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1785) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1213) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  638) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2358) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1786) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1214) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  639) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2359) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1787) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1215) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  640) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2360) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1788) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1216) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  641) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create connection to our db
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2361) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1789) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1217) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  642) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) const sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASSWORD, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2362) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1790) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1218) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  643) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  7)     host: process.env.DB_HOST,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2363) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1791) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1219) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  644) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     dialect: 'mysql',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2364) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1792) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1220) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  645) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  9)     port: process.env.DB_PORT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2365) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1793) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1221) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  646) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2366) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1794) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1222) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  647) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2367) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1795) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1223) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  648) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) module.exports = sequelize;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2368) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1796) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1224) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  651) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const jwt = require('jsonwebtoken');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2369) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1797) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1225) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  652) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2370) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1798) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1226) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  653) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2371) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1799) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1227) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  654) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) const secret = process.env.JWT_SECRET;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2372) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1800) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1228) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  655) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) const expiration = '2h';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2373) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1801) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1229) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  656) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2374) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1802) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1230) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  657) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7) module.exports = {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2375) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1803) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1231) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  658) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)   authMiddleware: function(req, res, next) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2376) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1804) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1232) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  659) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2377) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1805) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1233) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  660) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     // Allows token to be sent via req.body, req.query, or headers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2378) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1806) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1234) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  661) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 11)     let token = req.headers.authorization || req.body?.token || req.query?.token;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2379) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1807) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1235) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  662) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2380) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1808) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1236) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  663) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     if (token) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2381) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1809) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1237) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  664) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)       token = token.replace('Bearer ', '');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2382) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1810) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1238) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  665) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2383) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1811) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1239) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  666) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2384) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1812) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1240) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  667) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)     // Try to decode the token. If it throws an error, that means
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2385) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1813) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1241) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  668) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 18)     // token is invalid, in which case we return a 401 (Unauthorized)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2386) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1814) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1242) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  669) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2387) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1815) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1243) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  670) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)       const { data } = jwt.verify(token, secret, { maxAge: expiration });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2388) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1816) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1244) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  671) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)       req.user = data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2389) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1817) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1245) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  672) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       next();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2390) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1818) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1246) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  673) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)     } catch {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2391) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1819) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1247) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  674) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 24)       res.status(401).send('Bad Token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2392) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1820) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1248) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  675) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2393) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1821) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1249) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  676) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2394) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1822) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1250) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  677) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 27) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2395) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1823) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1251) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  678) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 28)   // Create a JWT with the user information
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2396) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1824) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1252) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  679) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)   signToken: function({ username, email, id }) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2397) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1825) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1253) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  680) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     const payload = { username, email, id };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2398) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1826) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1254) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  681) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     return jwt.sign({ data: payload }, secret, { expiresIn: expiration });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2399) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1827) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1255) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  682) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2400) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1828) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1256) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  683) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2401) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1829) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1257) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  686) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2402) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1830) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1258) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  687) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2403) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1831) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1259) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  688) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2404) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1832) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1260) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  689) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2405) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1833) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1261) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  690) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class Fragrance extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2406) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1834) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1262) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  691) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2407) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1835) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1263) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  692) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2408) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1836) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1264) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  693) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) Fragrance.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2409) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1837) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1265) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  694) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2410) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1838) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1266) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  695) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2411) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1839) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1267) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  696) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2412) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1840) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1268) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  697) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2413) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1841) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1269) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  698) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2414) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1842) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1270) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  699) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2415) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1843) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1271) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  700) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2416) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1844) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1272) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  701) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     make: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2417) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1845) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1273) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  702) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2418) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1846) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1274) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  703) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2419) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1847) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1275) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  704) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)     model: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2420) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1848) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1276) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  705) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2421) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1849) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1277) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  706) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2422) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1850) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1278) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  707) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2423) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1851) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1279) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  708) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     series: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2424) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1852) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1280) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  709) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2425) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1853) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1281) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  710) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2426) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1854) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1282) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  711) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     photoLink: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2427) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1855) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1283) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  712) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2428) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1856) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1284) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  713) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2429) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1857) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1285) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  714) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2430) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1858) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1286) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  715) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2431) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1859) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1287) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  716) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2432) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1860) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1288) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  717) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2433) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1861) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1289) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  718) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2434) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1862) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1290) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  719) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2435) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1863) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1291) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  720) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2436) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1864) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1292) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  721) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     modelName: 'fragrance'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2437) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1865) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1293) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  722) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2438) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1866) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1294) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  723) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2439) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1867) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1295) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  724) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2440) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1868) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1296) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  725) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) module.exports = Fragrance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2441) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1869) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1297) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  728) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2442) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1870) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1298) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  729) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const bcrypt = require('bcrypt');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2443) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1871) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1299) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  730) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  3) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2444) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1872) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1300) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  731) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2445) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1873) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1301) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  732) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2446) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1874) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1302) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  733) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) class User extends Model {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2447) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1875) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1303) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  734) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   checkPassword(loginPw) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2448) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1876) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1304) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  735) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     return bcrypt.compareSync(loginPw, this.password);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2449) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1877) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1305) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  736) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2450) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1878) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1306) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  737) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2451) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1879) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1307) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  738) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2452) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1880) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1308) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  739) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2453) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1881) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1309) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  740) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) User.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2454) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1882) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1310) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  741) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2455) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1883) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1311) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  742) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2456) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1884) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1312) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  743) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2457) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1885) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1313) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  744) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2458) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1886) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1314) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  745) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2459) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1887) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1315) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  746) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2460) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1888) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1316) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  747) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2461) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1889) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1317) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  748) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)     username: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2462) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1890) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1318) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  749) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2463) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1891) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1319) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  750) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2464) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1892) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1320) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  751) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2465) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1893) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1321) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  752) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     email: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2466) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1894) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1322) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  753) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2467) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1895) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1323) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  754) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2468) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1896) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1324) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  755) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)       unique: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2469) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1897) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1325) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  756) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)       validate: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2470) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1898) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1326) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  757) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         isEmail: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2471) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1899) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1327) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  758) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2472) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1900) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1328) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  759) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2473) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1901) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1329) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  760) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     password: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2474) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1902) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1330) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  761) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2475) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1903) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1331) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  762) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2476) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1904) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1332) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  763) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)       validate: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2477) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1905) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1333) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  764) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)         len: [4]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2478) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1906) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1334) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  765) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2479) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1907) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1335) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  766) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2480) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1908) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1336) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  767) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2481) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1909) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1337) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  768) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2482) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1910) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1338) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  769) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     hooks: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2483) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1911) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1339) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  770) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 43) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2484) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1912) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1340) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  771) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 44)       // Encrypt password before creating or updating user.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2485) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1913) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1341) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  772) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)       async beforeCreate(newUserData) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2486) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1914) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1342) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  773) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)         newUserData.password = await bcrypt.hash(newUserData.password, 10);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2487) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1915) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1343) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  774) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         return newUserData;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2488) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1916) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1344) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  775) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)       },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2489) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1917) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1345) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  776) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2490) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1918) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1346) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  777) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)       async beforeUpdate(updatedUserData) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2491) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1919) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1347) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  778) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2492) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1920) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1348) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  779) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         return updatedUserData;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2493) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1921) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1349) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  780) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2494) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1922) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1350) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  781) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2495) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1923) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1351) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  782) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2496) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1924) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1352) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  783) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2497) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1925) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1353) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  784) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2498) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1926) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1354) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  785) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2499) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1927) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1355) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  786) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)     modelName: 'user'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2500) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1928) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1356) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  787) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2501) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1929) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1357) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  788) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2502) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1930) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1358) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  789) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2503) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1931) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1359) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  790) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) module.exports = User;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2504) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1932) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1360) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  793) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) // import the models
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2505) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1933) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1361) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  794) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const User = require('./User');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2506) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1934) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1362) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  795) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  3) const Fragrance = require('./Fragrance');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2507) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1935) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1363) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  796) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  4) const FragranceListing = require('./FragranceListing');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2508) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1936) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1364) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  797) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  5) const UserFragrance = require('./UserFragrance');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2509) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1937) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1365) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  798) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2510) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1938) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1366) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  799) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  7) // create associations
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2511) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1939) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1367) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  800) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  8) User.belongsToMany(Fragrance, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2512) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1940) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1368) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  801) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  9)     through: UserFragrance,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2513) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1941) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1369) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  802) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 10)     as: 'watchlisted_fragrances',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2514) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1942) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1370) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  803) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 11)     foreignKey: 'user_id',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2515) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1943) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1371) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  804) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 12)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2516) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1944) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1372) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  805) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 13) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2517) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1945) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1373) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  806) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 14) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2518) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1946) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1374) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  807) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 15) Fragrance.belongsToMany(User, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2519) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1947) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1375) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  808) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 16)     through: UserFragrance,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2520) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1948) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1376) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  809) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 17)     as: 'watchlisted_fragrances',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2521) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1949) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1377) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  810) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 18)     foreignKey: 'fragrance_id',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2522) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1950) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1378) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  811) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 19)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2523) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1951) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1379) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  812) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 20) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2524) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1952) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1380) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  813) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2525) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1953) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1381) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  814) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 22) FragranceListing.belongsTo(Fragrance, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2526) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1954) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1382) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  815) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 23)     foreignKey: 'fragranceId',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2527) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1955) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1383) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  816) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 24)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2528) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1956) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1384) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  817) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 25) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2529) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1957) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1385) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  818) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2530) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1958) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1386) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  819) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 27) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2531) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1959) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1387) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  820) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 28) module.exports = { User, Fragrance, FragranceListing, UserFragrance };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2532) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1960) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1388) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  823) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2533) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1961) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1389) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  824) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2534) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1962) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1390) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  825) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2535) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1963) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1391) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  826) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2536) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1964) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1392) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  827) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class UserFragrance extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2537) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1965) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1393) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  828) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2538) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1966) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1394) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  829) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2539) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1967) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1395) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  830) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) UserFragrance.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2540) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1968) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1396) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  831) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2541) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1969) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1397) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  832) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2542) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1970) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1398) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  833) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2543) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1971) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1399) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  834) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2544) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1972) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1400) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  835) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2545) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1973) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1401) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  836) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2546) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1974) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1402) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  837) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2547) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1975) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1403) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  838) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     userId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2548) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1976) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1404) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  839) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2549) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1977) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1405) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  840) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2550) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1978) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1406) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  841) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'user',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2551) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1979) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1407) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  842) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2552) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1980) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1408) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  843) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2553) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1981) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1409) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  844) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2554) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1982) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1410) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  845) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     fragranceId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2555) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1983) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1411) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  846) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2556) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1984) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1412) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  847) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2557) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1985) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1413) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  848) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)         model: 'fragrance',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2558) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1986) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1414) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  849) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2559) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1987) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1415) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  850) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2560) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1988) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1416) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  851) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2561) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1989) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1417) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  852) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2562) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1990) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1418) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  853) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2563) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1991) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1419) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  854) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2564) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1992) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1420) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  855) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2565) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1993) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1421) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  856) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2566) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1994) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1422) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  857) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2567) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1995) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1423) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  858) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2568) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1996) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1424) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  859) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)     modelName: 'user_fragrance'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2569) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1997) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1425) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  860) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2570) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1998) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1426) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  861) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2571) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 1999) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1427) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  862) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2572) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2000) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1428) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  863) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 41) module.exports = UserFragrance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2573) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2001) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1429) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  866) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2574) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2002) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1430) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  867) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2575) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2003) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1431) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  868) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2576) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2004) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1432) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  869) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2577) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2005) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1433) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  870) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class FragranceListing extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2578) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2006) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1434) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  871) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2579) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2007) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1435) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  872) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2580) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2008) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1436) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  873) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) FragranceListing.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2581) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2009) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1437) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  874) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2582) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2010) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1438) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  875) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2583) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2011) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1439) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  876) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2584) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2012) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1440) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  877) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2585) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2013) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1441) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  878) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2586) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2014) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1442) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  879) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2587) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2015) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1443) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  880) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2588) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2016) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1444) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  881) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     fragranceId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2589) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2017) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1445) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  882) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2590) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2018) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1446) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  883) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2591) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2019) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1447) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  884) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'fragrance',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2592) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2020) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1448) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  885) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2593) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2021) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1449) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  886) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2594) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2022) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1450) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  887) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2595) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2023) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1451) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  888) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     price: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2596) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2024) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1452) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  889) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.FLOAT,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2597) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2025) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1453) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  890) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2598) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2026) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1454) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  891) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2599) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2027) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1455) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  892) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)     discount: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2600) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2028) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1456) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  893) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       type: DataTypes.INTEGER
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2601) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2029) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1457) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  894) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2602) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2030) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1458) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  895) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)     quantity: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2603) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2031) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1459) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  896) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)       type: DataTypes.INTEGER
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2604) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2032) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1460) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  897) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2605) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2033) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1461) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  898) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     volume: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2606) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2034) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1462) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  899) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)       type: DataTypes.FLOAT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2607) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2035) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1463) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  900) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2608) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2036) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1464) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  901) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     reviews: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2609) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2037) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1465) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  902) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)       type: DataTypes.FLOAT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2610) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2038) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1466) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  903) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2611) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2039) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1467) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  904) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 39)     site: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2612) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2040) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1468) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  905) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 40)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2613) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2041) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1469) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  906) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 41)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2614) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2042) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1470) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  907) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 42)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2615) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2043) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1471) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  908) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 43)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2616) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2044) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1472) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  909) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 44)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2617) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2045) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1473) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  910) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 45)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2618) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2046) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1474) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  911) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 46)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2619) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2047) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1475) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  912) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 47)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2620) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2048) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1476) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  913) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 48)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2621) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2049) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1477) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  914) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 49)     modelName: 'fragrance_listing'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2622) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2050) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1478) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  915) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 50)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2623) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2051) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1479) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  916) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 51) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2624) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2052) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1480) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  917) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 52) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2625) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2053) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1481) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  918) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 53) module.exports = FragranceListing;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2626) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2054) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1482) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  921) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2627) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2055) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1483) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  922) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const { User } = require('../models');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2628) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2056) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1484) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  923) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) const { signToken, authMiddleware } = require('../utils/auth');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2629) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2057) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1485) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  924) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2630) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2058) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1486) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  925) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2631) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2059) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1487) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  926) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.post('/', async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2632) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2060) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1488) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  927) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  7) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2633) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2061) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1489) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  928) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  8)     // Try to create user. Return token if successful
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2634) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2062) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1490) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  929) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2635) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2063) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1491) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  930) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)         const newUser = await User.create({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2636) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2064) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1492) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  931) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)             username: req.body.username,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2637) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2065) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1493) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  932) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)             email: req.body.email,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2638) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2066) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1494) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  933) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)             password: req.body.password
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2639) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2067) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1495) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  934) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2640) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2068) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1496) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  935) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2641) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2069) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1497) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  936) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         res.json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2642) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2070) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1498) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  937) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)             token: signToken(newUser)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2643) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2071) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1499) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  938) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2644) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2072) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1500) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  939) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2645) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2073) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1501) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  940) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     catch (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2646) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2074) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1502) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  941) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 22)             res.status(400).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2647) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2075) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1503) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  942) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 message: "An account already exists with that email!"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2648) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2076) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1504) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  943) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)             });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2649) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2077) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1505) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  944) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)             return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2650) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2078) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1506) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  945) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2651) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2079) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1507) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  946) abf4187a (OutliersAdvantage 2023-10-05 13:52:05 -0400 27)         console.log(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2652) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2080) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1508) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  947) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         res.status(500).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2653) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2081) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1509) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  948) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)             message: "An error occurred. Please try again."
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2654) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2082) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1510) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  949) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2655) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2083) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1511) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  950) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2656) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2084) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1512) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  951) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2657) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2085) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1513) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  952) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2658) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2086) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1514) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  953) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34) router.get('/me', authMiddleware, async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2659) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2087) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1515) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  954) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)     res.json(req.user);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2660) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2088) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1516) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  955) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2661) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2089) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1517) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  956) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2662) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2090) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1518) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  957) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2663) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2091) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1519) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  958) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) router.post('/login', async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2664) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2092) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1520) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  959) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2665) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2093) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1521) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  960) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 41)     // Find user
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2666) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2094) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1522) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  961) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     const user = await User.findOne({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2667) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2095) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1523) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  962) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         where: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2668) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2096) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1524) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  963) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)             email: req.body.email
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2669) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2097) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1525) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  964) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2670) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2098) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1526) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  965) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2671) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2099) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1527) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  966) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2672) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2100) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1528) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  967) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)     if (!user) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2673) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2101) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1529) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  968) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         res.status(404).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2674) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2102) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1530) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  969) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             message: 'No user with that email address!',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2675) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2103) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1531) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  970) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             type: 'is-danger'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2676) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2104) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1532) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  971) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2677) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2105) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1533) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  972) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)         return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2678) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2106) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1534) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  973) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2679) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2107) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1535) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  974) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2680) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2108) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1536) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  975) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 56)     // If password is correct, create token and return to user
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2681) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2109) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1537) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  976) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     const validPassword = user.checkPassword(req.body.password);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2682) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2110) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1538) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  977) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     if (!validPassword) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2683) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2111) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1539) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  978) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       res.status(400).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2684) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2112) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1540) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  979) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)         message: 'Incorrect password!',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2685) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2113) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1541) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  980) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)         type: 'is-danger'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2686) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2114) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1542) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  981) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2687) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2115) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1543) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  982) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2688) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2116) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1544) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  983) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2689) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2117) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1545) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  984) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2690) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2118) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1546) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  985) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66)     res.json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2691) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2119) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1547) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  986) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 67)         token: signToken(user)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2692) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2120) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1548) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  987) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2693) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2121) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1549) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  988) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 69) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2694) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2122) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1550) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  989) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 70) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2695) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2123) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1551) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  990) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 71) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2696) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2124) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1552) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  991) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 72) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2697) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2125) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1553) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  994) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) const {authMiddleware} = require('../utils/auth');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2698) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2126) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1554) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  995) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) router.post("/", authMiddleware, (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2699) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2127) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1555) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  996) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) 	if (!email || !title || !body){
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2700) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2128) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1556) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400  997) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11) 	else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2701) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2129) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1557) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1000) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const userRoutes = require('./user-routes.js');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2702) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2130) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1558) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1001) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  3) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2703) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2131) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1559) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1002) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2704) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2132) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1560) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1003) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  5) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2705) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2133) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1561) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1004) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.use('/users', userRoutes);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2706) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2134) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1562) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1005) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  7) router.use('/email', mailRoutes);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2707) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2135) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1563) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1006) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  8) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2708) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2136) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1564) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1007) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) // This middleware handles any request that starts with /api and is not handled above
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2709) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2137) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1565) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1008) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) router.use('*', (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2710) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2138) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1566) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1009) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)     res.status(404).json({ error: 'API route not found' });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2711) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2139) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1567) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1010) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2712) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2140) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1568) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1011) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400 13) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2713) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2141) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1569) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1014) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  1) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2714) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2142) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1570) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1015) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2715) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2143) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1571) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1016) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) // Author: Lakelon Bailey
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2716) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2144) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1572) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1017) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  5) // CRUD Example endpoints: Provide ability to Create, Retrieve, Update, and Delete posts.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2717) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2145) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1573) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1018) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  6) router.post("/api/posts/", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2718) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2146) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1574) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1019) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  7) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2719) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2147) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1575) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1020) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  8)   // Get expected values from request body
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2720) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2148) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1576) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1021) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  9)   const { title, description } = req.body;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2721) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2149) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1577) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1022) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2722) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2150) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1578) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1023) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 11)     // Check if title and description are provided
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2723) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2151) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1579) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1024) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 12)     if (!title || !description) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2724) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2152) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1580) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1025) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 13)         return res.status(400).json({ error: "Both title and description are required." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2725) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2153) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1581) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1026) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 14)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2726) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2154) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1582) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1027) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2727) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2155) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1583) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1028) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 16)     // Construct the SQL query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2728) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2156) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1584) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1029) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 17)     const sql = "INSERT INTO posts (title, description) VALUES (?, ?)";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2729) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2157) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1585) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1030) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 18) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2730) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2158) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1586) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1031) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 19)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2731) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2159) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1587) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1032) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 20)     db.query(sql, [title, description], (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2732) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2160) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1588) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1033) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 21)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2733) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2161) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1589) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1034) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 22)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2734) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2162) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1590) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1035) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 23)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2735) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2163) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1591) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1036) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 24)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2736) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2164) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1592) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1037) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2737) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2165) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1593) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1038) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 26)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2738) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2166) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1594) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1039) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 27)         res.json({ message: "Post created successfully.", postId: result.insertId });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2739) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2167) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1595) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1040) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 28)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2740) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2168) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1596) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1041) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 29) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2741) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2169) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1597) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1042) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 30) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2742) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2170) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1598) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1043) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 31) router.delete("/api/posts/:postId", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2743) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2171) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1599) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1044) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 32)     const sql = `
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2744) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2172) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1600) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1045) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 33)         DELETE FROM posts WHERE id = ${req.params.postId};
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2745) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2173) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1601) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1046) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 34)     `;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2746) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2174) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1602) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1047) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 35) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2747) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2175) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1603) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1048) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 36)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2748) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2176) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1604) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1049) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 37)     db.query(sql, (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2749) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2177) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1605) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1050) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 38)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2750) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2178) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1606) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1051) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 39)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2751) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2179) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1607) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1052) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 40)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2752) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2180) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1608) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1053) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 41)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2753) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2181) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1609) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1054) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 42) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2754) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2182) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1610) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1055) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 43)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2755) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2183) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1611) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1056) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 44)         res.json({ message: "Post deleted successfully."});
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2756) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2184) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1612) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1057) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 45)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2757) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2185) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1613) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1058) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 46) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2758) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2186) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1614) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1059) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 47) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2759) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2187) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1615) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1060) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 48) router.put("/api/posts/:postId", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2760) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2188) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1616) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1061) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 49)     const {title, description} = req.body;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2761) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2189) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1617) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1062) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 50)     const sql = `
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2762) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2190) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1618) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1063) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 51)         UPDATE posts
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2763) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2191) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1619) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1064) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 52)         SET title = '${title}', description = '${description}'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2764) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2192) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1620) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1065) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 53)         WHERE id = ${req.params.postId};
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2765) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2193) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1621) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1066) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 54)     `;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2766) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2194) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1622) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1067) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 55) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2767) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2195) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1623) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1068) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 56)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2768) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2196) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1624) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1069) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 57)     db.query(sql, (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2769) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2197) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1625) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1070) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 58)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2770) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2198) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1626) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1071) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 59)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2771) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2199) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1627) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1072) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 60)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2772) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2200) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1628) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1073) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 61)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2773) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2201) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1629) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1074) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 62) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2774) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2202) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1630) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1075) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 63)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2775) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2203) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1631) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1076) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 64)         res.json({ message: "Post updated successfully."});
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2776) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2204) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1632) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1077) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 65)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2777) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2205) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1633) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1078) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 66) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2778) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2206) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1634) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1079) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 67) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2779) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2207) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1635) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1080) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 68) router.get("/api/posts/", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2780) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2208) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1636) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1081) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 69)   const sql = "SELECT * FROM posts";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2781) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2209) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1637) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1082) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 70)   db.query(sql, (err, results) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2782) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2210) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1638) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1083) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 71)       if (err) throw err;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2783) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2211) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1639) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1084) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 72)       res.json(results);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2784) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2212) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1640) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1085) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 73)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2785) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2213) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1641) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1086) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 74) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2786) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2214) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1642) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1087) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 75) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2787) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2215) 00000000 (Not Committed Yet 2023-10-11 17:25:57 -0400 1643) afaeb824 (LakelonBailey 2023-10-11 17:00:36 -0400 1088) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 76) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2788) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2216) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1646) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 1) beautifulsoup4==4.12.2
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2789) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2217) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1647) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 2) greenlet==2.0.2
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2790) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2218) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1648) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 3) playwright==1.38.0
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2791) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2219) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1649) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 4) pyee==9.0.4
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2792) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2220) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1650) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 5) soupsieve==2.5
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2793) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2221) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1651) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 6) typing-extensions==4.8.0
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2794) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2222) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1654) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   1) // Load environment variables
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2795) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2223) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1655) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   2) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2796) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2224) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1656) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2797) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2225) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1657) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   4) const path = require('path');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2798) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2226) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1658) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400   5) const express = require('express');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2799) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2227) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1659) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   6) const PORT = process.env.PORT || 3001;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2800) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2228) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1660) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   7) const app = express();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2801) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2229) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1661) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400   8) const sequelize = require("./config/db");
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2802) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2230) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1662) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  12) app.use(express.json());
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2803) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2231) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1663) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2804) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2232) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1664) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  14) // Direct all routes starting with api to the API's routes
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2805) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2233) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1665) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  15) app.use('/api', require('./routes'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2806) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2234) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1666) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2807) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2235) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1667) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  17) // All other GET requests not handled before will return to our React app for frontend routing
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2808) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2236) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1668) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  18) app.use(express.static(path.resolve(__dirname, '../frontend/build')));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2809) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2237) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1669) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  19) app.get('*', (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2810) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2238) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1670) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  20)     res.sendFile(path.resolve(__dirname, '../frontend/build', 'index.html'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2811) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2239) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1671) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  21) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2812) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2240) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1672) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  22) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2813) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2241) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1673) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  23) sequelize.sync({ force: false }).then(() => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2814) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2242) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1674) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  24) 	app.listen(PORT, () => console.log('Now listening'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2815) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2243) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1675) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2816) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2244) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1676) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2817) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2245) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1677) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  29) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2818) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2246) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1678) d8e62e0a (OutliersAdvantage 2023-10-10 22:00:51 -0400  31) 		const pyproc = spawn("venv/bin/python", ["scrapers/scraperfaker.py"]);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2819) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2247) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1679) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2820) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2248) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1680) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  44) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2821) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2249) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1681) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  59) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2822) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2250) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1682) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  63) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2823) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2251) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1683) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 106) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2824) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2252) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1684) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 109) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2825) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2253) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1685) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 116) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2826) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2254) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1686) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 126) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2827) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2255) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1687) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 131) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2828) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2256) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1688) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 135) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2829) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2257) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1689) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 138) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2830) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2258) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1690) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 141)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2831) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2259) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1693) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2832) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2260) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1694) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-api",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2833) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2261) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1695) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "1.0.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2834) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2262) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1696) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "description": "Fragrance Finder API",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2835) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2263) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1697) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)   "main": "server.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2836) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2264) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1698) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2837) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2265) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1699) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2838) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2266) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1700) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start": "nodemon server.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2839) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2267) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1701) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  9)     "load-db-local": "mysql -u root -p < schema/schema.sql"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2840) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2268) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1702) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2841) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2269) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1703) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   "author": "",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2842) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2270) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1704) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 12)   "license": "ISC",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2843) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2271) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1705) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 13)   "dependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2844) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2272) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1706) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     "bcrypt": "^5.1.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2845) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2273) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1707) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400 15)     "dotenv": "^16.3.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2846) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2274) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1708) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400 16)     "express": "^4.18.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2847) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2275) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1709) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     "jsonwebtoken": "^9.0.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2848) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2276) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1710) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     "nodemailer": "^6.9.5",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2849) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2277) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1711) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     "sequelize": "^6.33.0"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2850) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2278) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1712) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 21)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2851) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2279) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1713) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 22)   "devDependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2852) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2280) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1714) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "nodemon": "^3.0.1"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2853) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2281) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1715) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 24)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2854) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2282) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1716) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2855) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2283) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1719) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const Sequelize = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2856) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2284) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1720) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2857) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2285) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1721) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2858) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2286) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1722) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2859) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2287) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1723) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create connection to our db
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2860) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2288) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1724) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) const sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASSWORD, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2861) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2289) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1725) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  7)     host: process.env.DB_HOST,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2862) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2290) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1726) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     dialect: 'mysql',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2863) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2291) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1727) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  9)     port: process.env.DB_PORT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2864) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2292) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1728) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2865) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2293) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1729) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2866) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2294) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1730) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) module.exports = sequelize;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2867) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2295) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1733) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const jwt = require('jsonwebtoken');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2868) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2296) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1734) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2869) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2297) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1735) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2870) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2298) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1736) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) const secret = process.env.JWT_SECRET;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2871) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2299) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1737) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) const expiration = '2h';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2872) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2300) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1738) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2873) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2301) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1739) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7) module.exports = {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2874) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2302) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1740) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)   authMiddleware: function(req, res, next) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2875) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2303) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1741) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2876) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2304) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1742) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     // Allows token to be sent via req.body, req.query, or headers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2877) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2305) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1743) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 11)     let token = req.headers.authorization || req.body?.token || req.query?.token;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2878) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2306) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1744) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2879) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2307) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1745) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     if (token) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2880) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2308) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1746) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)       token = token.replace('Bearer ', '');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2881) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2309) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1747) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2882) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2310) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1748) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2883) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2311) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1749) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)     // Try to decode the token. If it throws an error, that means
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2884) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2312) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1750) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 18)     // token is invalid, in which case we return a 401 (Unauthorized)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2885) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2313) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1751) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2886) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2314) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1752) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)       const { data } = jwt.verify(token, secret, { maxAge: expiration });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2887) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2315) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1753) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)       req.user = data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2888) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2316) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1754) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       next();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2889) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2317) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1755) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)     } catch {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2890) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2318) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1756) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 24)       res.status(401).send('Bad Token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2891) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2319) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1757) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2892) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2320) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1758) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2893) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2321) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1759) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 27) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2894) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2322) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1760) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 28)   // Create a JWT with the user information
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2895) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2323) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1761) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)   signToken: function({ username, email, id }) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2896) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2324) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1762) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     const payload = { username, email, id };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2897) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2325) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1763) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     return jwt.sign({ data: payload }, secret, { expiresIn: expiration });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2898) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2326) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1764) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2899) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2327) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1765) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2900) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2328) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1768) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2901) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2329) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1769) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2902) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2330) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1770) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2903) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2331) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1771) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2904) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2332) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1772) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class Fragrance extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2905) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2333) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1773) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2906) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2334) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1774) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2907) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2335) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1775) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) Fragrance.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2908) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2336) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1776) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2909) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2337) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1777) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2910) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2338) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1778) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2911) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2339) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1779) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2912) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2340) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1780) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2913) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2341) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1781) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2914) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2342) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1782) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2915) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2343) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1783) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     make: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2916) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2344) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1784) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2917) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2345) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1785) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2918) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2346) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1786) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)     model: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2919) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2347) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1787) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2920) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2348) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1788) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2921) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2349) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1789) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2922) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2350) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1790) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     series: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2923) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2351) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1791) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2924) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2352) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1792) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2925) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2353) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1793) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     photoLink: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2926) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2354) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1794) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2927) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2355) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1795) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2928) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2356) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1796) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2929) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2357) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1797) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2930) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2358) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1798) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2931) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2359) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1799) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2932) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2360) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1800) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2933) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2361) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1801) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2934) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2362) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1802) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2935) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2363) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1803) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     modelName: 'fragrance'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2936) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2364) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1804) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2937) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2365) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1805) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2938) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2366) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1806) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2939) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2367) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1807) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) module.exports = Fragrance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2940) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2368) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1810) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2941) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2369) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1811) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const bcrypt = require('bcrypt');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2942) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2370) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1812) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  3) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2943) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2371) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1813) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2944) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2372) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1814) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2945) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2373) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1815) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) class User extends Model {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2946) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2374) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1816) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   checkPassword(loginPw) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2947) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2375) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1817) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     return bcrypt.compareSync(loginPw, this.password);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2948) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2376) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1818) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2949) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2377) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1819) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2950) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2378) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1820) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2951) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2379) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1821) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2952) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2380) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1822) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) User.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2953) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2381) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1823) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2954) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2382) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1824) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2955) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2383) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1825) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2956) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2384) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1826) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2957) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2385) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1827) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2958) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2386) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1828) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2959) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2387) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1829) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2960) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2388) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1830) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)     username: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2961) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2389) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1831) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2962) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2390) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1832) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2963) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2391) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1833) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2964) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2392) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1834) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     email: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2965) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2393) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1835) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2966) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2394) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1836) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2967) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2395) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1837) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)       unique: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2968) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2396) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1838) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)       validate: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2969) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2397) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1839) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         isEmail: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2970) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2398) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1840) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2971) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2399) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1841) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2972) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2400) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1842) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     password: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2973) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2401) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1843) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2974) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2402) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1844) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2975) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2403) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1845) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)       validate: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2976) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2404) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1846) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)         len: [4]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2977) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2405) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1847) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2978) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2406) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1848) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2979) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2407) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1849) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2980) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2408) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1850) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2981) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2409) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1851) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     hooks: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2982) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2410) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1852) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 43) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2983) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2411) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1853) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 44)       // Encrypt password before creating or updating user.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2984) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2412) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1854) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)       async beforeCreate(newUserData) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2985) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2413) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1855) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)         newUserData.password = await bcrypt.hash(newUserData.password, 10);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2986) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2414) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1856) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         return newUserData;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2987) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2415) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1857) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)       },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2988) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2416) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1858) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2989) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2417) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1859) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)       async beforeUpdate(updatedUserData) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2990) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2418) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1860) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2991) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2419) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1861) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         return updatedUserData;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2992) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2420) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1862) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2993) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2421) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1863) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2994) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2422) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1864) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2995) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2423) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1865) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2996) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2424) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1866) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2997) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2425) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1867) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2998) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2426) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1868) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)     modelName: 'user'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 2999) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2427) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1869) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3000) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2428) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1870) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3001) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2429) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1871) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3002) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2430) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1872) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) module.exports = User;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3003) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2431) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1875) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) // import the models
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3004) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2432) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1876) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const User = require('./User');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3005) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2433) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1877) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  3) const Fragrance = require('./Fragrance');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3006) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2434) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1878) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  4) const FragranceListing = require('./FragranceListing');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3007) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2435) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1879) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  5) const UserFragrance = require('./UserFragrance');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3008) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2436) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1880) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3009) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2437) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1881) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  7) // create associations
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3010) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2438) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1882) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  8) User.belongsToMany(Fragrance, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3011) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2439) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1883) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  9)     through: UserFragrance,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3012) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2440) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1884) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 10)     as: 'watchlisted_fragrances',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3013) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2441) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1885) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 11)     foreignKey: 'user_id',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3014) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2442) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1886) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 12)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3015) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2443) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1887) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 13) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3016) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2444) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1888) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 14) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3017) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2445) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1889) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 15) Fragrance.belongsToMany(User, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3018) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2446) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1890) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 16)     through: UserFragrance,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3019) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2447) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1891) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 17)     as: 'watchlisted_fragrances',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3020) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2448) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1892) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 18)     foreignKey: 'fragrance_id',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3021) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2449) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1893) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 19)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3022) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2450) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1894) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 20) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3023) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2451) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1895) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3024) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2452) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1896) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 22) FragranceListing.belongsTo(Fragrance, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3025) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2453) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1897) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 23)     foreignKey: 'fragranceId',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3026) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2454) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1898) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 24)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3027) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2455) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1899) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 25) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3028) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2456) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1900) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3029) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2457) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1901) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 27) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3030) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2458) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1902) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 28) module.exports = { User, Fragrance, FragranceListing, UserFragrance };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3031) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2459) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1905) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3032) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2460) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1906) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3033) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2461) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1907) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3034) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2462) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1908) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3035) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2463) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1909) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class UserFragrance extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3036) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2464) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1910) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3037) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2465) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1911) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3038) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2466) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1912) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) UserFragrance.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3039) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2467) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1913) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3040) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2468) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1914) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3041) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2469) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1915) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3042) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2470) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1916) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3043) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2471) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1917) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3044) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2472) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1918) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3045) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2473) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1919) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3046) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2474) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1920) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     userId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3047) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2475) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1921) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3048) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2476) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1922) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3049) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2477) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1923) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'user',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3050) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2478) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1924) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3051) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2479) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1925) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3052) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2480) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1926) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3053) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2481) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1927) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     fragranceId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3054) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2482) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1928) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3055) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2483) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1929) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3056) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2484) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1930) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)         model: 'fragrance',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3057) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2485) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1931) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3058) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2486) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1932) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3059) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2487) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1933) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3060) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2488) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1934) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3061) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2489) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1935) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3062) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2490) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1936) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3063) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2491) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1937) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3064) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2492) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1938) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3065) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2493) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1939) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3066) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2494) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1940) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3067) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2495) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1941) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)     modelName: 'user_fragrance'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3068) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2496) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1942) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3069) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2497) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1943) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3070) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2498) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1944) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3071) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2499) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1945) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 41) module.exports = UserFragrance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3072) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2500) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1948) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3073) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2501) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1949) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3074) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2502) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1950) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3075) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2503) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1951) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3076) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2504) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1952) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class FragranceListing extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3077) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2505) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1953) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3078) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2506) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1954) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3079) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2507) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1955) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) FragranceListing.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3080) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2508) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1956) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3081) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2509) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1957) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3082) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2510) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1958) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3083) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2511) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1959) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3084) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2512) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1960) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3085) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2513) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1961) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3086) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2514) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1962) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3087) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2515) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1963) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     fragranceId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3088) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2516) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1964) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3089) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2517) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1965) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3090) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2518) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1966) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'fragrance',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3091) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2519) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1967) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3092) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2520) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1968) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3093) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2521) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1969) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3094) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2522) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1970) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     price: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3095) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2523) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1971) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.FLOAT,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3096) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2524) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1972) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3097) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2525) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1973) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3098) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2526) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1974) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)     discount: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3099) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2527) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1975) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       type: DataTypes.INTEGER
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3100) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2528) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1976) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3101) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2529) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1977) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)     quantity: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3102) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2530) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1978) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)       type: DataTypes.INTEGER
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3103) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2531) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1979) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3104) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2532) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1980) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     volume: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3105) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2533) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1981) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)       type: DataTypes.FLOAT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3106) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2534) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1982) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3107) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2535) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1983) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     reviews: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3108) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2536) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1984) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)       type: DataTypes.FLOAT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3109) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2537) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1985) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3110) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2538) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1986) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 39)     site: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3111) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2539) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1987) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 40)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3112) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2540) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1988) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 41)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3113) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2541) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1989) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 42)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3114) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2542) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1990) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 43)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3115) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2543) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1991) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 44)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3116) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2544) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1992) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 45)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3117) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2545) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1993) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 46)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3118) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2546) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1994) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 47)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3119) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2547) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1995) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 48)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3120) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2548) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1996) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 49)     modelName: 'fragrance_listing'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3121) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2549) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1997) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 50)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3122) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2550) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1998) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 51) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3123) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2551) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 1999) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 52) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3124) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2552) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2000) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 53) module.exports = FragranceListing;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3125) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2553) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2003) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3126) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2554) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2004) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const { User } = require('../models');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3127) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2555) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2005) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) const { signToken, authMiddleware } = require('../utils/auth');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3128) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2556) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2006) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3129) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2557) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2007) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3130) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2558) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2008) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.post('/', async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3131) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2559) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2009) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  7) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3132) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2560) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2010) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  8)     // Try to create user. Return token if successful
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3133) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2561) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2011) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3134) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2562) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2012) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)         const newUser = await User.create({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3135) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2563) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2013) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)             username: req.body.username,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3136) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2564) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2014) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)             email: req.body.email,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3137) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2565) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2015) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)             password: req.body.password
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3138) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2566) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2016) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3139) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2567) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2017) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3140) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2568) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2018) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         res.json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3141) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2569) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2019) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)             token: signToken(newUser)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3142) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2570) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2020) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3143) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2571) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2021) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3144) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2572) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2022) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     catch (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3145) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2573) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2023) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 22)             res.status(400).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3146) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2574) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2024) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 message: "An account already exists with that email!"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3147) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2575) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2025) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)             });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3148) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2576) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2026) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)             return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3149) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2577) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2027) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3150) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2578) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2028) abf4187a (OutliersAdvantage 2023-10-05 13:52:05 -0400 27)         console.log(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3151) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2579) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2029) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         res.status(500).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3152) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2580) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2030) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)             message: "An error occurred. Please try again."
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3153) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2581) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2031) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3154) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2582) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2032) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3155) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2583) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2033) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3156) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2584) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2034) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3157) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2585) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2035) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34) router.get('/me', authMiddleware, async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3158) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2586) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2036) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)     res.json(req.user);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3159) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2587) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2037) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3160) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2588) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2038) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3161) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2589) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2039) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3162) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2590) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2040) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) router.post('/login', async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3163) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2591) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2041) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3164) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2592) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2042) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 41)     // Find user
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3165) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2593) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2043) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     const user = await User.findOne({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3166) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2594) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2044) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         where: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3167) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2595) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2045) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)             email: req.body.email
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3168) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2596) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2046) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3169) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2597) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2047) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3170) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2598) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2048) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3171) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2599) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2049) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)     if (!user) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3172) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2600) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2050) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         res.status(404).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3173) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2601) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2051) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             message: 'No user with that email address!',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3174) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2602) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2052) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             type: 'is-danger'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3175) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2603) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2053) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3176) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2604) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2054) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)         return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3177) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2605) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2055) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3178) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2606) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2056) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3179) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2607) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2057) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 56)     // If password is correct, create token and return to user
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3180) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2608) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2058) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     const validPassword = user.checkPassword(req.body.password);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3181) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2609) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2059) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     if (!validPassword) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3182) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2610) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2060) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       res.status(400).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3183) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2611) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2061) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)         message: 'Incorrect password!',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3184) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2612) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2062) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)         type: 'is-danger'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3185) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2613) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2063) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3186) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2614) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2064) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3187) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2615) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2065) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3188) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2616) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2066) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3189) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2617) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2067) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66)     res.json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3190) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2618) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2068) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 67)         token: signToken(user)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3191) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2619) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2069) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3192) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2620) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2070) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 69) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3193) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2621) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2071) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 70) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3194) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2622) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2072) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 71) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3195) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2623) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2073) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 72) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3196) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2624) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2076) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) const {authMiddleware} = require('../utils/auth');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3197) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2625) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2077) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) router.post("/", authMiddleware, (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3198) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2626) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2078) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) 	if (!email || !title || !body){
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3199) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2627) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2079) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11) 	else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3200) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2628) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2082) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const userRoutes = require('./user-routes.js');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3201) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2629) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2083) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  3) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3202) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2630) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2084) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3203) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2631) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2085) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  5) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3204) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2632) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2086) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.use('/users', userRoutes);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3205) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2633) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2087) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  7) router.use('/email', mailRoutes);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3206) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2634) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2088) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  8) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3207) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2635) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2089) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) // This middleware handles any request that starts with /api and is not handled above
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3208) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2636) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2090) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) router.use('*', (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3209) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2637) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2091) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)     res.status(404).json({ error: 'API route not found' });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3210) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2638) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2092) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3211) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2639) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2093) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400 13) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3212) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2640) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2096) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  1) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3213) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2641) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2097) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3214) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2642) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2098) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) // Author: Lakelon Bailey
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3215) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2643) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2099) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  5) // CRUD Example endpoints: Provide ability to Create, Retrieve, Update, and Delete posts.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3216) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2644) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2100) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  6) router.post("/api/posts/", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3217) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2645) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2101) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  7) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3218) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2646) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2102) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  8)   // Get expected values from request body
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3219) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2647) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2103) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  9)   const { title, description } = req.body;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3220) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2648) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2104) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3221) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2649) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2105) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 11)     // Check if title and description are provided
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3222) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2650) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2106) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 12)     if (!title || !description) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3223) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2651) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2107) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 13)         return res.status(400).json({ error: "Both title and description are required." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3224) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2652) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2108) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 14)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3225) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2653) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2109) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3226) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2654) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2110) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 16)     // Construct the SQL query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3227) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2655) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2111) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 17)     const sql = "INSERT INTO posts (title, description) VALUES (?, ?)";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3228) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2656) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2112) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 18) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3229) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2657) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2113) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 19)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3230) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2658) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2114) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 20)     db.query(sql, [title, description], (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3231) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2659) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2115) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 21)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3232) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2660) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2116) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 22)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3233) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2661) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2117) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 23)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3234) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2662) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2118) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 24)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3235) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2663) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2119) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3236) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2664) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2120) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 26)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3237) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2665) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2121) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 27)         res.json({ message: "Post created successfully.", postId: result.insertId });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3238) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2666) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2122) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 28)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3239) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2667) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2123) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 29) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3240) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2668) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2124) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 30) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3241) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2669) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2125) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 31) router.delete("/api/posts/:postId", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3242) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2670) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2126) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 32)     const sql = `
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3243) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2671) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2127) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 33)         DELETE FROM posts WHERE id = ${req.params.postId};
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3244) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2672) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2128) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 34)     `;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3245) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2673) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2129) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 35) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3246) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2674) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2130) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 36)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3247) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2675) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2131) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 37)     db.query(sql, (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3248) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2676) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2132) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 38)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3249) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2677) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2133) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 39)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3250) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2678) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2134) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 40)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3251) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2679) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2135) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 41)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3252) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2680) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2136) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 42) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3253) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2681) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2137) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 43)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3254) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2682) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2138) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 44)         res.json({ message: "Post deleted successfully."});
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3255) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2683) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2139) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 45)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3256) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2684) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2140) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 46) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3257) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2685) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2141) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 47) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3258) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2686) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2142) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 48) router.put("/api/posts/:postId", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3259) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2687) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2143) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 49)     const {title, description} = req.body;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3260) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2688) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2144) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 50)     const sql = `
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3261) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2689) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2145) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 51)         UPDATE posts
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3262) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2690) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2146) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 52)         SET title = '${title}', description = '${description}'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3263) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2691) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2147) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 53)         WHERE id = ${req.params.postId};
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3264) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2692) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2148) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 54)     `;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3265) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2693) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2149) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 55) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3266) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2694) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2150) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 56)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3267) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2695) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2151) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 57)     db.query(sql, (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3268) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2696) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2152) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 58)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3269) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2697) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2153) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 59)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3270) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2698) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2154) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 60)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3271) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2699) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2155) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 61)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3272) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2700) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2156) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 62) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3273) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2701) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2157) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 63)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3274) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2702) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2158) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 64)         res.json({ message: "Post updated successfully."});
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3275) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2703) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2159) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 65)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3276) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2704) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2160) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 66) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3277) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2705) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2161) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 67) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3278) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2706) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2162) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 68) router.get("/api/posts/", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3279) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2707) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2163) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 69)   const sql = "SELECT * FROM posts";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3280) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2708) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2164) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 70)   db.query(sql, (err, results) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3281) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2709) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2165) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 71)       if (err) throw err;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3282) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2710) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2166) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 72)       res.json(results);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3283) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2711) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2167) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 73)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3284) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2712) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2168) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 74) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3285) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2713) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2169) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 75) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3286) 00000000 (Not Committed Yet 2023-10-11 17:28:32 -0400 2714) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2170) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 76) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3287) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2717) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 1) beautifulsoup4==4.12.2
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3288) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2718) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 2) greenlet==2.0.2
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3289) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2719) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 3) playwright==1.38.0
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3290) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2720) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 4) pyee==9.0.4
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3291) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2721) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 5) soupsieve==2.5
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3292) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2722) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 6) typing-extensions==4.8.0
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3293) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2725) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   1) // Load environment variables
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3294) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2726) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   2) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3295) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2727) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3296) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2728) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   4) const path = require('path');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3297) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2729) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400   5) const express = require('express');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3298) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2730) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   6) const PORT = process.env.PORT || 3001;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3299) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2731) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   7) const app = express();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3300) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2732) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400   8) const sequelize = require("./config/db");
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3301) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2733) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  12) app.use(express.json());
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3302) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2734) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  13) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3303) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2735) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  14) // Direct all routes starting with api to the API's routes
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3304) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2736) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  15) app.use('/api', require('./routes'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3305) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2737) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3306) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2738) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  17) // All other GET requests not handled before will return to our React app for frontend routing
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3307) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2739) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  18) app.use(express.static(path.resolve(__dirname, '../frontend/build')));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3308) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2740) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  19) app.get('*', (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3309) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2741) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  20)     res.sendFile(path.resolve(__dirname, '../frontend/build', 'index.html'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3310) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2742) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  21) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3311) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2743) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  22) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3312) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2744) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  23) sequelize.sync({ force: false }).then(() => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3313) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2745) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  24) 	app.listen(PORT, () => console.log('Now listening'));
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3314) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2746) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3315) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2747) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3316) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2748) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  29) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3317) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2749) d8e62e0a (OutliersAdvantage 2023-10-10 22:00:51 -0400  31) 		const pyproc = spawn("venv/bin/python", ["scrapers/scraperfaker.py"]);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3318) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2750) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  36) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3319) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2751) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  44) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3320) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2752) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  59) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3321) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2753) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  63) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3322) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2754) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 106) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3323) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2755) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 109) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3324) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2756) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 116) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3325) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2757) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 126) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3326) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2758) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 131) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3327) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2759) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 135) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3328) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2760) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 138) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3329) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2761) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 141)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3330) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2764) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3331) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2765) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-api",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3332) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2766) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "1.0.0",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3333) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2767) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "description": "Fragrance Finder API",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3334) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2768) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)   "main": "server.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3335) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2769) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   "scripts": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3336) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2770) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3337) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2771) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start": "nodemon server.js",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3338) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2772) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  9)     "load-db-local": "mysql -u root -p < schema/schema.sql"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3339) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2773) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3340) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2774) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   "author": "",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3341) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2775) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 12)   "license": "ISC",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3342) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2776) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 13)   "dependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3343) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2777) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     "bcrypt": "^5.1.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3344) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2778) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400 15)     "dotenv": "^16.3.1",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3345) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2779) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400 16)     "express": "^4.18.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3346) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2780) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     "jsonwebtoken": "^9.0.2",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3347) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2781) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     "nodemailer": "^6.9.5",
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3348) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2782) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     "sequelize": "^6.33.0"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3349) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2783) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 21)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3350) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2784) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 22)   "devDependencies": {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3351) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2785) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "nodemon": "^3.0.1"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3352) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2786) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 24)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3353) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2787) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3354) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2790) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const Sequelize = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3355) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2791) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  2) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3356) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2792) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3357) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2793) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3358) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2794) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create connection to our db
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3359) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2795) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) const sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASSWORD, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3360) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2796) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  7)     host: process.env.DB_HOST,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3361) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2797) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     dialect: 'mysql',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3362) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2798) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  9)     port: process.env.DB_PORT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3363) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2799) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3364) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2800) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3365) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2801) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) module.exports = sequelize;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3366) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2804) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const jwt = require('jsonwebtoken');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3367) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2805) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) require('dotenv').config();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3368) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2806) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3369) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2807) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) const secret = process.env.JWT_SECRET;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3370) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2808) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) const expiration = '2h';
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3371) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2809) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3372) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2810) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7) module.exports = {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3373) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2811) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)   authMiddleware: function(req, res, next) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3374) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2812) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3375) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2813) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     // Allows token to be sent via req.body, req.query, or headers
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3376) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2814) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 11)     let token = req.headers.authorization || req.body?.token || req.query?.token;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3377) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2815) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3378) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2816) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     if (token) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3379) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2817) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)       token = token.replace('Bearer ', '');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3380) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2818) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3381) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2819) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3382) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2820) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)     // Try to decode the token. If it throws an error, that means
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3383) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2821) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 18)     // token is invalid, in which case we return a 401 (Unauthorized)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3384) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2822) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3385) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2823) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)       const { data } = jwt.verify(token, secret, { maxAge: expiration });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3386) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2824) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)       req.user = data;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3387) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2825) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       next();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3388) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2826) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)     } catch {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3389) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2827) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 24)       res.status(401).send('Bad Token');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3390) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2828) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3391) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2829) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3392) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2830) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 27) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3393) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2831) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 28)   // Create a JWT with the user information
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3394) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2832) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)   signToken: function({ username, email, id }) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3395) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2833) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     const payload = { username, email, id };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3396) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2834) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     return jwt.sign({ data: payload }, secret, { expiresIn: expiration });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3397) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2835) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3398) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2836) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3399) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2839) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3400) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2840) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3401) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2841) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3402) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2842) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3403) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2843) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class Fragrance extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3404) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2844) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3405) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2845) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3406) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2846) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) Fragrance.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3407) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2847) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3408) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2848) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3409) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2849) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3410) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2850) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3411) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2851) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3412) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2852) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3413) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2853) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3414) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2854) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     make: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3415) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2855) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3416) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2856) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3417) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2857) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)     model: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3418) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2858) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3419) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2859) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3420) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2860) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3421) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2861) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     series: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3422) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2862) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3423) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2863) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3424) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2864) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     photoLink: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3425) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2865) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3426) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2866) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3427) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2867) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3428) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2868) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3429) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2869) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3430) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2870) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3431) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2871) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3432) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2872) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3433) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2873) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3434) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2874) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     modelName: 'fragrance'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3435) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2875) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3436) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2876) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3437) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2877) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3438) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2878) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) module.exports = Fragrance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3439) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2881) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3440) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2882) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const bcrypt = require('bcrypt');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3441) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2883) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  3) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3442) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2884) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3443) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2885) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3444) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2886) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) class User extends Model {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3445) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2887) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   checkPassword(loginPw) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3446) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2888) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     return bcrypt.compareSync(loginPw, this.password);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3447) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2889) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3448) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2890) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3449) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2891) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3450) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2892) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3451) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2893) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) User.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3452) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2894) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3453) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2895) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3454) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2896) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3455) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2897) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3456) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2898) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3457) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2899) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3458) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2900) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3459) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2901) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)     username: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3460) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2902) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3461) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2903) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3462) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2904) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3463) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2905) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     email: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3464) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2906) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3465) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2907) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3466) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2908) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)       unique: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3467) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2909) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)       validate: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3468) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2910) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         isEmail: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3469) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2911) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3470) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2912) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3471) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2913) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     password: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3472) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2914) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)       type: DataTypes.STRING,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3473) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2915) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3474) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2916) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)       validate: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3475) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2917) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)         len: [4]
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3476) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2918) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3477) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2919) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3478) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2920) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3479) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2921) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3480) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2922) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     hooks: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3481) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2923) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 43) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3482) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2924) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 44)       // Encrypt password before creating or updating user.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3483) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2925) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)       async beforeCreate(newUserData) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3484) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2926) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)         newUserData.password = await bcrypt.hash(newUserData.password, 10);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3485) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2927) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         return newUserData;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3486) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2928) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)       },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3487) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2929) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3488) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2930) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)       async beforeUpdate(updatedUserData) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3489) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2931) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3490) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2932) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         return updatedUserData;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3491) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2933) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3492) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2934) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3493) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2935) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3494) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2936) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3495) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2937) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3496) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2938) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3497) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2939) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)     modelName: 'user'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3498) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2940) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3499) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2941) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3500) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2942) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3501) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2943) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) module.exports = User;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3502) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2946) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) // import the models
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3503) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2947) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const User = require('./User');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3504) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2948) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  3) const Fragrance = require('./Fragrance');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3505) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2949) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  4) const FragranceListing = require('./FragranceListing');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3506) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2950) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  5) const UserFragrance = require('./UserFragrance');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3507) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2951) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3508) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2952) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  7) // create associations
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3509) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2953) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  8) User.belongsToMany(Fragrance, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3510) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2954) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  9)     through: UserFragrance,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3511) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2955) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 10)     as: 'watchlisted_fragrances',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3512) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2956) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 11)     foreignKey: 'user_id',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3513) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2957) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 12)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3514) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2958) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 13) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3515) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2959) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 14) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3516) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2960) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 15) Fragrance.belongsToMany(User, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3517) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2961) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 16)     through: UserFragrance,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3518) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2962) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 17)     as: 'watchlisted_fragrances',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3519) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2963) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 18)     foreignKey: 'fragrance_id',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3520) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2964) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 19)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3521) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2965) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 20) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3522) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2966) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 21) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3523) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2967) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 22) FragranceListing.belongsTo(Fragrance, {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3524) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2968) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 23)     foreignKey: 'fragranceId',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3525) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2969) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 24)     onDelete: 'SET NULL'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3526) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2970) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 25) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3527) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2971) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 26) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3528) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2972) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 27) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3529) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2973) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 28) module.exports = { User, Fragrance, FragranceListing, UserFragrance };
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3530) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2976) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3531) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2977) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3532) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2978) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3533) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2979) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3534) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2980) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class UserFragrance extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3535) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2981) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3536) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2982) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3537) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2983) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) UserFragrance.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3538) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2984) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3539) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2985) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3540) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2986) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3541) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2987) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3542) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2988) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3543) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2989) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3544) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2990) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3545) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2991) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     userId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3546) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2992) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3547) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2993) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3548) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2994) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'user',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3549) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2995) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3550) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2996) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3551) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2997) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3552) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2998) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     fragranceId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3553) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 2999) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3554) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3000) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3555) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3001) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)         model: 'fragrance',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3556) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3002) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3557) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3003) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3558) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3004) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3559) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3005) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3560) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3006) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3561) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3007) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3562) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3008) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3563) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3009) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3564) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3010) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3565) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3011) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3566) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3012) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)     modelName: 'user_fragrance'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3567) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3013) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3568) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3014) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3569) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3015) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3570) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3016) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 41) module.exports = UserFragrance;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3571) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3019) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3572) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3020) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3573) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3021) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3574) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3022) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3575) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3023) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class FragranceListing extends Model {}
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3576) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3024) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3577) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3025) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3578) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3026) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) FragranceListing.init(
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3579) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3027) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3580) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3028) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3581) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3029) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3582) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3030) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3583) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3031) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3584) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3032) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3585) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3033) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3586) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3034) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     fragranceId: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3587) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3035) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3588) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3036) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3589) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3037) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'fragrance',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3590) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3038) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3591) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3039) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3592) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3040) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3593) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3041) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     price: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3594) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3042) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.FLOAT,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3595) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3043) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       allowNull: false
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3596) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3044) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3597) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3045) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)     discount: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3598) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3046) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       type: DataTypes.INTEGER
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3599) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3047) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3600) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3048) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)     quantity: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3601) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3049) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)       type: DataTypes.INTEGER
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3602) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3050) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3603) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3051) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     volume: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3604) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3052) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)       type: DataTypes.FLOAT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3605) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3053) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3606) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3054) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     reviews: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3607) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3055) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)       type: DataTypes.FLOAT
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3608) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3056) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)     },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3609) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3057) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 39)     site: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3610) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3058) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 40)       type: DataTypes.STRING
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3611) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3059) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 41)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3612) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3060) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 42)   },
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3613) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3061) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 43)   {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3614) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3062) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 44)     hooks: {},
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3615) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3063) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 45)     sequelize,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3616) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3064) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 46)     timestamps: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3617) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3065) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 47)     freezeTableName: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3618) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3066) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 48)     underscored: true,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3619) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3067) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 49)     modelName: 'fragrance_listing'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3620) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3068) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 50)   }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3621) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3069) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 51) );
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3622) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3070) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 52) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3623) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3071) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 53) module.exports = FragranceListing;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3624) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3074) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3625) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3075) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const { User } = require('../models');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3626) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3076) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) const { signToken, authMiddleware } = require('../utils/auth');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3627) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3077) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3628) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3078) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3629) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3079) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.post('/', async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3630) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3080) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  7) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3631) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3081) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  8)     // Try to create user. Return token if successful
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3632) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3082) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     try {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3633) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3083) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)         const newUser = await User.create({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3634) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3084) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)             username: req.body.username,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3635) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3085) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)             email: req.body.email,
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3636) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3086) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)             password: req.body.password
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3637) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3087) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3638) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3088) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3639) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3089) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         res.json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3640) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3090) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)             token: signToken(newUser)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3641) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3091) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3642) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3092) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3643) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3093) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     catch (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3644) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3094) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 22)             res.status(400).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3645) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3095) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 message: "An account already exists with that email!"
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3646) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3096) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)             });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3647) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3097) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)             return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3648) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3098) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3649) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3099) abf4187a (OutliersAdvantage 2023-10-05 13:52:05 -0400 27)         console.log(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3650) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3100) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         res.status(500).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3651) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3101) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)             message: "An error occurred. Please try again."
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3652) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3102) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3653) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3103) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3654) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3104) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3655) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3105) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3656) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3106) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34) router.get('/me', authMiddleware, async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3657) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3107) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)     res.json(req.user);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3658) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3108) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3659) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3109) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3660) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3110) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3661) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3111) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) router.post('/login', async (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3662) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3112) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 40) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3663) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3113) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 41)     // Find user
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3664) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3114) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     const user = await User.findOne({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3665) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3115) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         where: {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3666) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3116) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)             email: req.body.email
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3667) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3117) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3668) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3118) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3669) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3119) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3670) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3120) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)     if (!user) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3671) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3121) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         res.status(404).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3672) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3122) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             message: 'No user with that email address!',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3673) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3123) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             type: 'is-danger'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3674) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3124) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3675) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3125) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)         return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3676) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3126) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3677) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3127) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3678) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3128) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 56)     // If password is correct, create token and return to user
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3679) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3129) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     const validPassword = user.checkPassword(req.body.password);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3680) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3130) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     if (!validPassword) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3681) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3131) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       res.status(400).json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3682) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3132) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)         message: 'Incorrect password!',
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3683) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3133) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)         type: 'is-danger'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3684) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3134) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)       });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3685) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3135) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       return;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3686) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3136) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3687) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3137) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3688) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3138) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66)     res.json({
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3689) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3139) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 67)         token: signToken(user)
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3690) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3140) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3691) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3141) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 69) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3692) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3142) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 70) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3693) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3143) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 71) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3694) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3144) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 72) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3695) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3147) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) const {authMiddleware} = require('../utils/auth');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3696) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3148) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) router.post("/", authMiddleware, (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3697) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3149) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) 	if (!email || !title || !body){
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3698) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3150) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11) 	else {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3699) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3153) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const userRoutes = require('./user-routes.js');
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3700) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3154) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  3) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3701) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3155) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  4) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3702) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3156) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  5) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3703) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3157) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.use('/users', userRoutes);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3704) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3158) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  7) router.use('/email', mailRoutes);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3705) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3159) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  8) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3706) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3160) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) // This middleware handles any request that starts with /api and is not handled above
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3707) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3161) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) router.use('*', (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3708) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3162) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)     res.status(404).json({ error: 'API route not found' });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3709) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3163) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3710) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3164) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400 13) module.exports = router;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3711) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3167) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  1) const router = require('express').Router();
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3712) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3168) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  3) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3713) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3169) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) // Author: Lakelon Bailey
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3714) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3170) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  5) // CRUD Example endpoints: Provide ability to Create, Retrieve, Update, and Delete posts.
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3715) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3171) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  6) router.post("/api/posts/", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3716) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3172) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  7) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3717) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3173) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  8)   // Get expected values from request body
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3718) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3174) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  9)   const { title, description } = req.body;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3719) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3175) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3720) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3176) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 11)     // Check if title and description are provided
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3721) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3177) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 12)     if (!title || !description) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3722) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3178) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 13)         return res.status(400).json({ error: "Both title and description are required." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3723) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3179) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 14)     }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3724) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3180) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 15) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3725) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3181) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 16)     // Construct the SQL query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3726) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3182) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 17)     const sql = "INSERT INTO posts (title, description) VALUES (?, ?)";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3727) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3183) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 18) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3728) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3184) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 19)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3729) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3185) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 20)     db.query(sql, [title, description], (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3730) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3186) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 21)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3731) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3187) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 22)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3732) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3188) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 23)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3733) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3189) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 24)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3734) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3190) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 25) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3735) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3191) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 26)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3736) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3192) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 27)         res.json({ message: "Post created successfully.", postId: result.insertId });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3737) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3193) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 28)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3738) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3194) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 29) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3739) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3195) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 30) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3740) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3196) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 31) router.delete("/api/posts/:postId", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3741) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3197) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 32)     const sql = `
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3742) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3198) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 33)         DELETE FROM posts WHERE id = ${req.params.postId};
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3743) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3199) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 34)     `;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3744) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3200) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 35) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3745) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3201) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 36)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3746) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3202) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 37)     db.query(sql, (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3747) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3203) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 38)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3748) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3204) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 39)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3749) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3205) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 40)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3750) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3206) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 41)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3751) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3207) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 42) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3752) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3208) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 43)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3753) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3209) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 44)         res.json({ message: "Post deleted successfully."});
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3754) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3210) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 45)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3755) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3211) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 46) });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3756) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3212) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 47) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3757) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3213) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 48) router.put("/api/posts/:postId", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3758) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3214) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 49)     const {title, description} = req.body;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3759) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3215) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 50)     const sql = `
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3760) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3216) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 51)         UPDATE posts
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3761) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3217) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 52)         SET title = '${title}', description = '${description}'
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3762) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3218) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 53)         WHERE id = ${req.params.postId};
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3763) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3219) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 54)     `;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3764) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3220) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 55) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3765) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3221) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 56)     // Execute the query
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3766) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3222) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 57)     db.query(sql, (err, result) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3767) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3223) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 58)         if (err) {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3768) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3224) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 59)             console.error(err);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3769) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3225) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 60)             return res.status(500).json({ error: "Database error occurred." });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3770) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3226) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 61)         }
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3771) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3227) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 62) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3772) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3228) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 63)         // Send a response back indicating success
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3773) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3229) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 64)         res.json({ message: "Post updated successfully."});
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3774) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3230) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 65)     });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3775) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3231) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 66) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3776) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3232) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 67) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3777) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3233) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 68) router.get("/api/posts/", (req, res) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3778) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3234) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 69)   const sql = "SELECT * FROM posts";
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3779) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3235) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 70)   db.query(sql, (err, results) => {
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3780) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3236) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 71)       if (err) throw err;
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3781) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3237) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 72)       res.json(results);
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3782) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3238) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 73)   });
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3783) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3239) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 74) })
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3784) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3240) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 75) 
00000000 (Not Committed Yet 2023-10-11 17:29:09 -0400 3785) afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3241) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 76) module.exports = router;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3788) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 1) beautifulsoup4==4.12.2
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3789) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 2) greenlet==2.0.2
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3790) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 3) playwright==1.38.0
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3791) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 4) pyee==9.0.4
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3792) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 5) soupsieve==2.5
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3793) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 6) typing-extensions==4.8.0
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3796) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   1) // Load environment variables
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3797) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   2) require('dotenv').config();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3798) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3799) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   4) const path = require('path');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3800) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400   5) const express = require('express');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3801) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   6) const PORT = process.env.PORT || 3001;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3802) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   7) const app = express();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3803) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400   8) const sequelize = require("./config/db");
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3804) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  12) app.use(express.json());
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3805) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  13) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3806) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  14) // Direct all routes starting with api to the API's routes
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3807) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  15) app.use('/api', require('./routes'));
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3808) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  16) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3809) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  17) // All other GET requests not handled before will return to our React app for frontend routing
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3810) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  18) app.use(express.static(path.resolve(__dirname, '../frontend/build')));
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3811) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  19) app.get('*', (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3812) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  20)     res.sendFile(path.resolve(__dirname, '../frontend/build', 'index.html'));
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3813) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  21) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3814) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  22) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3815) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  23) sequelize.sync({ force: false }).then(() => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3816) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  24) 	app.listen(PORT, () => console.log('Now listening'));
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3817) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  25) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3818) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  26) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3819) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  29) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3820) d8e62e0a (OutliersAdvantage 2023-10-10 22:00:51 -0400  31) 		const pyproc = spawn("venv/bin/python", ["scrapers/scraperfaker.py"]);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3821) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  36) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3822) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  44) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3823) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  59) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3824) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  63) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3825) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 106) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3826) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 109) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3827) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 116) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3828) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 126) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3829) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 131) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3830) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 135) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3831) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 138) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3832) 70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 141)
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3835) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3836) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-api",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3837) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "1.0.0",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3838) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "description": "Fragrance Finder API",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3839) 73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)   "main": "server.js",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3840) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   "scripts": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3841) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3842) e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start": "nodemon server.js",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3843) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  9)     "load-db-local": "mysql -u root -p < schema/schema.sql"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3844) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3845) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   "author": "",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3846) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 12)   "license": "ISC",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3847) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 13)   "dependencies": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3848) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     "bcrypt": "^5.1.1",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3849) 8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400 15)     "dotenv": "^16.3.1",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3850) eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400 16)     "express": "^4.18.2",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3851) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     "jsonwebtoken": "^9.0.2",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3852) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     "nodemailer": "^6.9.5",
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3853) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     "sequelize": "^6.33.0"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3854) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 21)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3855) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 22)   "devDependencies": {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3856) bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "nodemon": "^3.0.1"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3857) 74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 24)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3858) ^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3861) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const Sequelize = require('sequelize');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3862) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  2) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3863) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) require('dotenv').config();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3864) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3865) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create connection to our db
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3866) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) const sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASSWORD, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3867) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  7)     host: process.env.DB_HOST,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3868) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     dialect: 'mysql',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3869) 70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  9)     port: process.env.DB_PORT
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3870) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3871) b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 11) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3872) 0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) module.exports = sequelize;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3875) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const jwt = require('jsonwebtoken');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3876) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) require('dotenv').config();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3877) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3878) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) const secret = process.env.JWT_SECRET;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3879) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) const expiration = '2h';
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3880) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3881) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7) module.exports = {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3882) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)   authMiddleware: function(req, res, next) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3883) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3884) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     // Allows token to be sent via req.body, req.query, or headers
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3885) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 11)     let token = req.headers.authorization || req.body?.token || req.query?.token;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3886) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3887) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     if (token) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3888) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)       token = token.replace('Bearer ', '');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3889) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3890) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3891) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)     // Try to decode the token. If it throws an error, that means
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3892) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 18)     // token is invalid, in which case we return a 401 (Unauthorized)
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3893) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     try {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3894) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)       const { data } = jwt.verify(token, secret, { maxAge: expiration });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3895) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)       req.user = data;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3896) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       next();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3897) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)     } catch {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3898) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 24)       res.status(401).send('Bad Token');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3899) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3900) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3901) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 27) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3902) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 28)   // Create a JWT with the user information
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3903) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)   signToken: function({ username, email, id }) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3904) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     const payload = { username, email, id };
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3905) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     return jwt.sign({ data: payload }, secret, { expiresIn: expiration });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3906) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3907) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) };
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3910) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3911) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3912) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3913) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3914) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class Fragrance extends Model {}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3915) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3916) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3917) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) Fragrance.init(
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3918) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3919) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3920) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3921) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3922) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3923) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3924) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3925) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     make: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3926) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.STRING,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3927) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3928) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)     model: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3929) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)       type: DataTypes.STRING,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3930) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       allowNull: false
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3931) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3932) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     series: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3933) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.STRING
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3934) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3935) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     photoLink: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3936) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)       type: DataTypes.STRING
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3937) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3938) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3939) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3940) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)     hooks: {},
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3941) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     sequelize,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3942) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     timestamps: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3943) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     freezeTableName: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3944) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     underscored: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3945) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     modelName: 'fragrance'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3946) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3947) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38) );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3948) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3949) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) module.exports = Fragrance;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3952) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const { Model, DataTypes } = require('sequelize');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3953) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const bcrypt = require('bcrypt');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3954) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  3) const sequelize = require('../config/db');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3955) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3956) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create our User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3957) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) class User extends Model {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3958) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   checkPassword(loginPw) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3959) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     return bcrypt.compareSync(loginPw, this.password);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3960) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3961) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3962) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3963) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) // Create fields/columns for User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3964) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) User.init(
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3965) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3966) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     id: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3967) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3968) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       allowNull: false,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3969) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       primaryKey: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3970) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       autoIncrement: true
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3971) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3972) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)     username: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3973) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       type: DataTypes.STRING,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3974) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)       allowNull: false
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3975) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3976) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     email: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3977) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)       type: DataTypes.STRING,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3978) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)       allowNull: false,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3979) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)       unique: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3980) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)       validate: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3981) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         isEmail: true
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3982) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3983) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3984) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     password: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3985) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)       type: DataTypes.STRING,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3986) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)       allowNull: false,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3987) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)       validate: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3988) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)         len: [4]
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3989) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3990) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3991) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3992) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3993) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     hooks: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3994) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 43) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3995) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 44)       // Encrypt password before creating or updating user.
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3996) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)       async beforeCreate(newUserData) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3997) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)         newUserData.password = await bcrypt.hash(newUserData.password, 10);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3998) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         return newUserData;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 3999) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)       },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4000) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4001) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)       async beforeUpdate(updatedUserData) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4002) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4003) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         return updatedUserData;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4004) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4005) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4006) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)     sequelize,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4007) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)     timestamps: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4008) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     freezeTableName: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4009) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     underscored: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4010) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)     modelName: 'user'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4011) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4012) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61) );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4013) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4014) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) module.exports = User;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4017) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) // import the models
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4018) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const User = require('./User');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4019) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  3) const Fragrance = require('./Fragrance');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4020) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  4) const FragranceListing = require('./FragranceListing');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4021) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  5) const UserFragrance = require('./UserFragrance');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4022) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  6) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4023) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  7) // create associations
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4024) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  8) User.belongsToMany(Fragrance, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4025) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  9)     through: UserFragrance,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4026) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 10)     as: 'watchlisted_fragrances',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4027) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 11)     foreignKey: 'user_id',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4028) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 12)     onDelete: 'SET NULL'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4029) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 13) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4030) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 14) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4031) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 15) Fragrance.belongsToMany(User, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4032) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 16)     through: UserFragrance,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4033) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 17)     as: 'watchlisted_fragrances',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4034) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 18)     foreignKey: 'fragrance_id',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4035) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 19)     onDelete: 'SET NULL'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4036) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 20) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4037) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 21) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4038) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 22) FragranceListing.belongsTo(Fragrance, {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4039) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 23)     foreignKey: 'fragranceId',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4040) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 24)     onDelete: 'SET NULL'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4041) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 25) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4042) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 26) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4043) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 27) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4044) 809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 28) module.exports = { User, Fragrance, FragranceListing, UserFragrance };
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4047) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4048) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4049) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4050) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4051) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class UserFragrance extends Model {}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4052) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4053) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4054) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) UserFragrance.init(
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4055) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4056) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4057) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4058) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4059) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4060) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4061) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4062) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     userId: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4063) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4064) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4065) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'user',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4066) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4067) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4068) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4069) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     fragranceId: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4070) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4071) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       references: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4072) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)         model: 'fragrance',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4073) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)         key: 'id'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4074) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4075) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4076) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4077) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4078) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     hooks: {},
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4079) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     sequelize,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4080) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     timestamps: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4081) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     freezeTableName: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4082) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     underscored: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4083) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)     modelName: 'user_fragrance'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4084) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4085) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4086) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4087) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 41) module.exports = UserFragrance;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4090) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4091) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4092) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4093) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4094) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class FragranceListing extends Model {}
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4095) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4096) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4097) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) FragranceListing.init(
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4098) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4099) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4100) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4101) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4102) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4103) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4104) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4105) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     fragranceId: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4106) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4107) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4108) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'fragrance',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4109) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4110) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4111) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4112) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     price: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4113) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.FLOAT,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4114) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       allowNull: false
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4115) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4116) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)     discount: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4117) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       type: DataTypes.INTEGER
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4118) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4119) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)     quantity: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4120) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)       type: DataTypes.INTEGER
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4121) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4122) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     volume: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4123) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)       type: DataTypes.FLOAT
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4124) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4125) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     reviews: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4126) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)       type: DataTypes.FLOAT
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4127) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)     },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4128) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 39)     site: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4129) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 40)       type: DataTypes.STRING
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4130) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 41)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4131) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 42)   },
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4132) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 43)   {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4133) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 44)     hooks: {},
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4134) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 45)     sequelize,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4135) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 46)     timestamps: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4136) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 47)     freezeTableName: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4137) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 48)     underscored: true,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4138) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 49)     modelName: 'fragrance_listing'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4139) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 50)   }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4140) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 51) );
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4141) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 52) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4142) fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 53) module.exports = FragranceListing;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4145) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const router = require('express').Router();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4146) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const { User } = require('../models');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4147) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) const { signToken, authMiddleware } = require('../utils/auth');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4148) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4149) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4150) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.post('/', async (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4151) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  7) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4152) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  8)     // Try to create user. Return token if successful
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4153) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     try {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4154) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)         const newUser = await User.create({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4155) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)             username: req.body.username,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4156) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)             email: req.body.email,
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4157) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)             password: req.body.password
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4158) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4159) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4160) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         res.json({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4161) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)             token: signToken(newUser)
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4162) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)         });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4163) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4164) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     catch (err) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4165) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 22)             res.status(400).json({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4166) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 message: "An account already exists with that email!"
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4167) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)             });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4168) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)             return;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4169) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4170) abf4187a (OutliersAdvantage 2023-10-05 13:52:05 -0400 27)         console.log(err);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4171) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         res.status(500).json({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4172) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)             message: "An error occurred. Please try again."
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4173) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4174) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4175) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4176) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4177) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34) router.get('/me', authMiddleware, async (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4178) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)     res.json(req.user);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4179) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) })
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4180) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4181) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4182) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) router.post('/login', async (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4183) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 40) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4184) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 41)     // Find user
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4185) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     const user = await User.findOne({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4186) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         where: {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4187) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)             email: req.body.email
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4188) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4189) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4190) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4191) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)     if (!user) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4192) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         res.status(404).json({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4193) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             message: 'No user with that email address!',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4194) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             type: 'is-danger'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4195) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4196) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)         return;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4197) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4198) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4199) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 56)     // If password is correct, create token and return to user
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4200) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     const validPassword = user.checkPassword(req.body.password);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4201) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     if (!validPassword) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4202) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       res.status(400).json({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4203) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)         message: 'Incorrect password!',
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4204) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)         type: 'is-danger'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4205) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)       });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4206) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       return;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4207) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4208) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4209) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66)     res.json({
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4210) 4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 67)         token: signToken(user)
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4211) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4212) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 69) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4213) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 70) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4214) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 71) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4215) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 72) module.exports = router;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4218) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) const {authMiddleware} = require('../utils/auth');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4219) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) router.post("/", authMiddleware, (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4220) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) 	if (!email || !title || !body){
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4221) fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11) 	else {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4224) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const userRoutes = require('./user-routes.js');
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4225) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  3) const router = require('express').Router();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4226) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  4) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4227) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  5) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4228) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.use('/users', userRoutes);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4229) 8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  7) router.use('/email', mailRoutes);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4230) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  8) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4231) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) // This middleware handles any request that starts with /api and is not handled above
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4232) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) router.use('*', (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4233) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)     res.status(404).json({ error: 'API route not found' });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4234) 0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4235) da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400 13) module.exports = router;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4238) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  1) const router = require('express').Router();
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4239) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  3) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4240) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) // Author: Lakelon Bailey
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4241) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  5) // CRUD Example endpoints: Provide ability to Create, Retrieve, Update, and Delete posts.
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4242) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  6) router.post("/api/posts/", (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4243) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  7) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4244) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  8)   // Get expected values from request body
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4245) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  9)   const { title, description } = req.body;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4246) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4247) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 11)     // Check if title and description are provided
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4248) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 12)     if (!title || !description) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4249) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 13)         return res.status(400).json({ error: "Both title and description are required." });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4250) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 14)     }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4251) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 15) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4252) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 16)     // Construct the SQL query
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4253) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 17)     const sql = "INSERT INTO posts (title, description) VALUES (?, ?)";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4254) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 18) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4255) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 19)     // Execute the query
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4256) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 20)     db.query(sql, [title, description], (err, result) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4257) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 21)         if (err) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4258) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 22)             console.error(err);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4259) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 23)             return res.status(500).json({ error: "Database error occurred." });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4260) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 24)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4261) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 25) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4262) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 26)         // Send a response back indicating success
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4263) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 27)         res.json({ message: "Post created successfully.", postId: result.insertId });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4264) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 28)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4265) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 29) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4266) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 30) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4267) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 31) router.delete("/api/posts/:postId", (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4268) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 32)     const sql = `
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4269) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 33)         DELETE FROM posts WHERE id = ${req.params.postId};
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4270) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 34)     `;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4271) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 35) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4272) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 36)     // Execute the query
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4273) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 37)     db.query(sql, (err, result) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4274) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 38)         if (err) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4275) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 39)             console.error(err);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4276) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 40)             return res.status(500).json({ error: "Database error occurred." });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4277) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 41)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4278) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 42) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4279) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 43)         // Send a response back indicating success
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4280) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 44)         res.json({ message: "Post deleted successfully."});
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4281) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 45)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4282) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 46) });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4283) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 47) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4284) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 48) router.put("/api/posts/:postId", (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4285) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 49)     const {title, description} = req.body;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4286) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 50)     const sql = `
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4287) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 51)         UPDATE posts
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4288) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 52)         SET title = '${title}', description = '${description}'
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4289) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 53)         WHERE id = ${req.params.postId};
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4290) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 54)     `;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4291) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 55) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4292) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 56)     // Execute the query
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4293) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 57)     db.query(sql, (err, result) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4294) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 58)         if (err) {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4295) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 59)             console.error(err);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4296) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 60)             return res.status(500).json({ error: "Database error occurred." });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4297) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 61)         }
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4298) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 62) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4299) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 63)         // Send a response back indicating success
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4300) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 64)         res.json({ message: "Post updated successfully."});
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4301) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 65)     });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4302) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 66) })
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4303) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 67) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4304) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 68) router.get("/api/posts/", (req, res) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4305) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 69)   const sql = "SELECT * FROM posts";
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4306) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 70)   db.query(sql, (err, results) => {
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4307) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 71)       if (err) throw err;
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4308) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 72)       res.json(results);
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4309) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 73)   });
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4310) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 74) })
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4311) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 75) 
afaeb824 (LakelonBailey     2023-10-11 17:00:36 -0400 4312) b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 76) module.exports = router;

./backend/requirements.txt
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 1) beautifulsoup4==4.12.2
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 2) greenlet==2.0.2
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 3) playwright==1.38.0
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 4) pyee==9.0.4
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 5) soupsieve==2.5
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 6) typing-extensions==4.8.0

./backend/server.js
8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   1) // Load environment variables
8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   2) require('dotenv').config();
8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400   3) 
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   4) const path = require('path');
eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400   5) const express = require('express');
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   6) const PORT = process.env.PORT || 3001;
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400   7) const app = express();
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400   8) const sequelize = require("./config/db");
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  12) app.use(express.json());
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  13) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  14) // Direct all routes starting with api to the API's routes
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  15) app.use('/api', require('./routes'));
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  16) 
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400  17) // All other GET requests not handled before will return to our React app for frontend routing
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  18) app.use(express.static(path.resolve(__dirname, '../frontend/build')));
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  19) app.get('*', (req, res) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  20)     res.sendFile(path.resolve(__dirname, '../frontend/build', 'index.html'));
eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  21) });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  22) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  23) sequelize.sync({ force: false }).then(() => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  24) 	app.listen(PORT, () => console.log('Now listening'));
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  25) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  26) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  29) 
d8e62e0a (OutliersAdvantage 2023-10-10 22:00:51 -0400  31) 		const pyproc = spawn("venv/bin/python", ["scrapers/scraperfaker.py"]);
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  36) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  44) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  59) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400  63) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 106) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 109) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 116) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 126) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 131) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 135) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 138) 
70b119c7 (OutliersAdvantage 2023-10-10 21:49:54 -0400 141)

./backend/package.json
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  1) {
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  2)   "name": "fragrance-finder-api",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  3)   "version": "1.0.0",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  4)   "description": "Fragrance Finder API",
73254be3 (OutliersAdvantage 2023-09-21 11:39:39 -0400  5)   "main": "server.js",
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400  6)   "scripts": {
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400  7)     "test": "echo \"Error: no test specified\" && exit 1",
e7e943c3 (OutliersAdvantage 2023-09-22 15:04:53 -0400  8)     "start": "nodemon server.js",
eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400  9)     "load-db-local": "mysql -u root -p < schema/schema.sql"
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 10)   },
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 11)   "author": "",
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 12)   "license": "ISC",
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 13)   "dependencies": {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)     "bcrypt": "^5.1.1",
8facaea9 (OutliersAdvantage 2023-09-20 13:15:49 -0400 15)     "dotenv": "^16.3.1",
eff43a9e (OutliersAdvantage 2023-09-20 11:57:10 -0400 16)     "express": "^4.18.2",
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)     "jsonwebtoken": "^9.0.2",
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     "nodemailer": "^6.9.5",
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     "sequelize": "^6.33.0"
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 21)   },
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 22)   "devDependencies": {
bea87e08 (OutliersAdvantage 2023-09-22 15:02:19 -0400 23)     "nodemon": "^3.0.1"
74885353 (OutliersAdvantage 2023-09-18 09:16:23 -0400 24)   }
^d09ab64 (OutliersAdvantage 2023-09-18 08:41:11 -0400 25) }

./backend/config/db.js
0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const Sequelize = require('sequelize');
b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  2) 
0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) require('dotenv').config();
b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) 
0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create connection to our db
0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) const sequelize = new Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASSWORD, {
70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  7)     host: process.env.DB_HOST,
0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     dialect: 'mysql',
70b119c7 backend/config/db.js         (OutliersAdvantage 2023-10-10 21:49:54 -0400  9)     port: process.env.DB_PORT
b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) });
b66d0afe backend/config/connection.js (OutliersAdvantage 2023-09-22 15:21:26 -0400 11) 
0a43b2b3 backend/config/connection.js (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) module.exports = sequelize;

./backend/utils/auth.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const jwt = require('jsonwebtoken');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) require('dotenv').config();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) const secret = process.env.JWT_SECRET;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) const expiration = '2h';
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7) module.exports = {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)   authMiddleware: function(req, res, next) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)     // Allows token to be sent via req.body, req.query, or headers
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400 11)     let token = req.headers.authorization || req.body?.token || req.query?.token;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)     if (token) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)       token = token.replace('Bearer ', '');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)     // Try to decode the token. If it throws an error, that means
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 18)     // token is invalid, in which case we return a 401 (Unauthorized)
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     try {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)       const { data } = jwt.verify(token, secret, { maxAge: expiration });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)       req.user = data;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       next();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)     } catch {
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 24)       res.status(401).send('Bad Token');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)   },
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 27) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 28)   // Create a JWT with the user information
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)   signToken: function({ username, email, id }) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)     const payload = { username, email, id };
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     return jwt.sign({ data: payload }, secret, { expiresIn: expiration });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) };

./backend/models/Fragrance.js
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class Fragrance extends Model {}
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) Fragrance.init(
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     make: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.STRING,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)     model: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)       type: DataTypes.STRING,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       allowNull: false
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     series: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.STRING
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     photoLink: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)       type: DataTypes.STRING
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)   },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)     hooks: {},
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     sequelize,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     timestamps: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     freezeTableName: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     underscored: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     modelName: 'fragrance'
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)   }
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38) );
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) 
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) module.exports = Fragrance;

./backend/models/User.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const { Model, DataTypes } = require('sequelize');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const bcrypt = require('bcrypt');
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  3) const sequelize = require('../config/db');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) // create our User model
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) class User extends Model {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  7)   checkPassword(loginPw) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  8)     return bcrypt.compareSync(loginPw, this.password);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) // Create fields/columns for User model
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13) User.init(
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)   {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15)     id: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)       type: DataTypes.INTEGER,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 17)       allowNull: false,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)       primaryKey: true,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)       autoIncrement: true
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     },
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 21)     username: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 22)       type: DataTypes.STRING,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)       allowNull: false
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)     },
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)     email: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)       type: DataTypes.STRING,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 27)       allowNull: false,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)       unique: true,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)       validate: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         isEmail: true
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)       }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32)     },
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33)     password: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34)       type: DataTypes.STRING,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)       allowNull: false,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36)       validate: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37)         len: [4]
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38)       }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 40)   },
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 41)   {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     hooks: {
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 43) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 44)       // Encrypt password before creating or updating user.
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)       async beforeCreate(newUserData) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)         newUserData.password = await bcrypt.hash(newUserData.password, 10);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47)         return newUserData;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)       },
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)       async beforeUpdate(updatedUserData) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)         updatedUserData.password = await bcrypt.hash(updatedUserData.password, 10);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         return updatedUserData;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)       }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     },
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55)     sequelize,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 56)     timestamps: true,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     freezeTableName: true,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     underscored: true,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)     modelName: 'user'
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)   }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61) );
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63) module.exports = User;

./backend/models/index.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) // import the models
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const User = require('./User');
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  3) const Fragrance = require('./Fragrance');
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  4) const FragranceListing = require('./FragranceListing');
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  5) const UserFragrance = require('./UserFragrance');
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  6) 
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  7) // create associations
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  8) User.belongsToMany(Fragrance, {
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400  9)     through: UserFragrance,
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 10)     as: 'watchlisted_fragrances',
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 11)     foreignKey: 'user_id',
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 12)     onDelete: 'SET NULL'
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 13) });
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 14) 
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 15) Fragrance.belongsToMany(User, {
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 16)     through: UserFragrance,
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 17)     as: 'watchlisted_fragrances',
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 18)     foreignKey: 'fragrance_id',
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 19)     onDelete: 'SET NULL'
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 20) });
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 21) 
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 22) FragranceListing.belongsTo(Fragrance, {
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 23)     foreignKey: 'fragranceId',
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 24)     onDelete: 'SET NULL'
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 25) });
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 26) 
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 27) 
809d3a48 (OutliersAdvantage 2023-10-05 13:56:04 -0400 28) module.exports = { User, Fragrance, FragranceListing, UserFragrance };

./backend/models/UserFragrance.js
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class UserFragrance extends Model {}
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) UserFragrance.init(
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     userId: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'user',
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     fragranceId: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.INTEGER,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       references: {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)         model: 'fragrance',
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)         key: 'id'
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       }
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)   },
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)   {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     hooks: {},
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     sequelize,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)     timestamps: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     freezeTableName: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     underscored: true,
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)     modelName: 'user_fragrance'
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)   }
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 39) );
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 40) 
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 41) module.exports = UserFragrance;

./backend/models/FragranceListing.js
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  1) const { Model, DataTypes } = require('sequelize');
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  2) const sequelize = require('../config/db');
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) 
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  4) // create our User model
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) class FragranceListing extends Model {}
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  6) 
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  7) // Create fields/columns for User model
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) FragranceListing.init(
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400  9)   {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 10)     id: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 11)       type: DataTypes.INTEGER,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 12)       allowNull: false,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 13)       primaryKey: true,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 14)       autoIncrement: true
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 15)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 16)     fragranceId: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 17)       type: DataTypes.INTEGER,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 18)       references: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 19)         model: 'fragrance',
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 20)         key: 'id'
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 21)       }
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 22)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 23)     price: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 24)       type: DataTypes.FLOAT,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 25)       allowNull: false
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 26)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 27)     discount: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 28)       type: DataTypes.INTEGER
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 29)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 30)     quantity: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 31)       type: DataTypes.INTEGER
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 32)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 33)     volume: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 34)       type: DataTypes.FLOAT
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 35)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 36)     reviews: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 37)       type: DataTypes.FLOAT
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 38)     },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 39)     site: {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 40)       type: DataTypes.STRING
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 41)     }
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 42)   },
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 43)   {
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 44)     hooks: {},
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 45)     sequelize,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 46)     timestamps: true,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 47)     freezeTableName: true,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 48)     underscored: true,
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 49)     modelName: 'fragrance_listing'
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 50)   }
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 51) );
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 52) 
fc1e18ae backend/models/FragraceListing.js (OutliersAdvantage 2023-10-05 13:51:01 -0400 53) module.exports = FragranceListing;

./backend/routes/user-routes.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const router = require('express').Router();
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  2) const { User } = require('../models');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  3) const { signToken, authMiddleware } = require('../utils/auth');
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  4) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  5) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.post('/', async (req, res) => {
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  7) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400  8)     // Try to create user. Return token if successful
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9)     try {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10)         const newUser = await User.create({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)             username: req.body.username,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12)             email: req.body.email,
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 13)             password: req.body.password
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 14)         });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 15) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 16)         res.json({
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 17)             token: signToken(newUser)
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 18)         });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 19)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 20)     catch (err) {
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 22)             res.status(400).json({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 23)                 message: "An account already exists with that email!"
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 24)             });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 25)             return;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 26)         }
abf4187a (OutliersAdvantage 2023-10-05 13:52:05 -0400 27)         console.log(err);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 28)         res.status(500).json({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 29)             message: "An error occurred. Please try again."
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 30)         });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 31)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 32) });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 33) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 34) router.get('/me', authMiddleware, async (req, res) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 35)     res.json(req.user);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 36) })
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 37) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 38) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 39) router.post('/login', async (req, res) => {
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 40) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 41)     // Find user
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 42)     const user = await User.findOne({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 43)         where: {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 44)             email: req.body.email
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 45)         }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 46)     });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 47) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 48)     if (!user) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 49)         res.status(404).json({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 50)             message: 'No user with that email address!',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 51)             type: 'is-danger'
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 52)         });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 53)         return;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 54)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 55) 
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 56)     // If password is correct, create token and return to user
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 57)     const validPassword = user.checkPassword(req.body.password);
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 58)     if (!validPassword) {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 59)       res.status(400).json({
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 60)         message: 'Incorrect password!',
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 61)         type: 'is-danger'
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 62)       });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 63)       return;
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 64)     }
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 65) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 66)     res.json({
4001565e (OutliersAdvantage 2023-10-01 21:32:49 -0400 67)         token: signToken(user)
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 68)     });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 69) });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 70) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 71) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 72) module.exports = router;

./backend/routes/mailRoutes.js
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  3) const {authMiddleware} = require('../utils/auth');
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  5) router.post("/", authMiddleware, (req, res) => {
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400  8) 	if (!email || !title || !body){
fc1e18ae (OutliersAdvantage 2023-10-05 13:51:01 -0400 11) 	else {

./backend/routes/index.js
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  1) const userRoutes = require('./user-routes.js');
da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  3) const router = require('express').Router();
da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  4) 
da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  5) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  6) router.use('/users', userRoutes);
8dd1f3e6 (OutliersAdvantage 2023-10-01 22:13:02 -0400  7) router.use('/email', mailRoutes);
da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400  8) 
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400  9) // This middleware handles any request that starts with /api and is not handled above
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 10) router.use('*', (req, res) => {
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 11)     res.status(404).json({ error: 'API route not found' });
0a43b2b3 (OutliersAdvantage 2023-10-01 21:24:55 -0400 12) });
da5a88a0 (OutliersAdvantage 2023-09-22 15:24:22 -0400 13) module.exports = router;

./backend/routes/basicCrudRoutes.js
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  1) const router = require('express').Router();
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  3) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  4) // Author: Lakelon Bailey
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  5) // CRUD Example endpoints: Provide ability to Create, Retrieve, Update, and Delete posts.
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  6) router.post("/api/posts/", (req, res) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  7) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  8)   // Get expected values from request body
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400  9)   const { title, description } = req.body;
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 10) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 11)     // Check if title and description are provided
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 12)     if (!title || !description) {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 13)         return res.status(400).json({ error: "Both title and description are required." });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 14)     }
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 15) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 16)     // Construct the SQL query
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 17)     const sql = "INSERT INTO posts (title, description) VALUES (?, ?)";
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 18) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 19)     // Execute the query
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 20)     db.query(sql, [title, description], (err, result) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 21)         if (err) {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 22)             console.error(err);
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 23)             return res.status(500).json({ error: "Database error occurred." });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 24)         }
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 25) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 26)         // Send a response back indicating success
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 27)         res.json({ message: "Post created successfully.", postId: result.insertId });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 28)     });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 29) });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 30) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 31) router.delete("/api/posts/:postId", (req, res) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 32)     const sql = `
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 33)         DELETE FROM posts WHERE id = ${req.params.postId};
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 34)     `;
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 35) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 36)     // Execute the query
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 37)     db.query(sql, (err, result) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 38)         if (err) {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 39)             console.error(err);
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 40)             return res.status(500).json({ error: "Database error occurred." });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 41)         }
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 42) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 43)         // Send a response back indicating success
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 44)         res.json({ message: "Post deleted successfully."});
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 45)     });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 46) });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 47) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 48) router.put("/api/posts/:postId", (req, res) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 49)     const {title, description} = req.body;
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 50)     const sql = `
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 51)         UPDATE posts
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 52)         SET title = '${title}', description = '${description}'
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 53)         WHERE id = ${req.params.postId};
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 54)     `;
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 55) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 56)     // Execute the query
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 57)     db.query(sql, (err, result) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 58)         if (err) {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 59)             console.error(err);
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 60)             return res.status(500).json({ error: "Database error occurred." });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 61)         }
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 62) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 63)         // Send a response back indicating success
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 64)         res.json({ message: "Post updated successfully."});
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 65)     });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 66) })
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 67) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 68) router.get("/api/posts/", (req, res) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 69)   const sql = "SELECT * FROM posts";
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 70)   db.query(sql, (err, results) => {
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 71)       if (err) throw err;
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 72)       res.json(results);
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 73)   });
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 74) })
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 75) 
b66d0afe (OutliersAdvantage 2023-09-22 15:21:26 -0400 76) module.exports = router;